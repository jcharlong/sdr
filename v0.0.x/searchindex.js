Search.setIndex({"titles": ["sdr", "sdr.ClosedLoopPLL", "sdr.ClosedLoopPLL.Bn", "sdr.ClosedLoopPLL.BnT", "sdr.ClosedLoopPLL.K0", "sdr.ClosedLoopPLL.K1", "sdr.ClosedLoopPLL.K2", "sdr.ClosedLoopPLL.Kp", "sdr.ClosedLoopPLL.__init__", "sdr.ClosedLoopPLL.frequency_lock_time", "sdr.ClosedLoopPLL.iir", "sdr.ClosedLoopPLL.lock_time", "sdr.ClosedLoopPLL.omega_3dB", "sdr.ClosedLoopPLL.omega_n", "sdr.ClosedLoopPLL.phase_error_variance", "sdr.ClosedLoopPLL.phase_lock_time", "sdr.ClosedLoopPLL.sample_rate", "sdr.ClosedLoopPLL.zeta", "sdr.DDS", "sdr.DDS.__init__", "sdr.DDS.nco", "sdr.DDS.process", "sdr.DDS.reset", "sdr.DDS.step", "sdr.FarrowResampler", "sdr.FarrowResampler.__init__", "sdr.FarrowResampler.order", "sdr.FarrowResampler.resample", "sdr.FarrowResampler.reset", "sdr.FarrowResampler.streaming", "sdr.FarrowResampler.taps", "sdr.IIR", "sdr.IIR.ZerosPoles", "sdr.IIR.__init__", "sdr.IIR.a_taps", "sdr.IIR.b_taps", "sdr.IIR.filter", "sdr.IIR.frequency_response", "sdr.IIR.frequency_response_log", "sdr.IIR.gain", "sdr.IIR.impulse_response", "sdr.IIR.order", "sdr.IIR.poles", "sdr.IIR.reset", "sdr.IIR.step_response", "sdr.IIR.streaming", "sdr.IIR.zeros", "sdr.LoopFilter", "sdr.LoopFilter.K1", "sdr.LoopFilter.K2", "sdr.LoopFilter.__init__", "sdr.LoopFilter.damping_factor", "sdr.LoopFilter.filter", "sdr.LoopFilter.iir", "sdr.LoopFilter.noise_bandwidth", "sdr.LoopFilter.reset", "sdr.NCO", "sdr.NCO.K0", "sdr.NCO.__init__", "sdr.NCO.increment", "sdr.NCO.offset", "sdr.NCO.process", "sdr.NCO.reset", "sdr.NCO.step", "sdr.plot.filter", "sdr.plot.frequency_response", "sdr.plot.group_delay", "sdr.plot.impulse_response", "sdr.plot.step_response", "sdr.plot.time_domain", "sdr.plot.use_style", "sdr.plot.zeros_poles", "Farrow arbitrary resampler", "IIR filters", "Phase-locked loops", "sdr", "v0.0", "Versioning"], "terms": {"class": [0, 1, 18, 24, 31, 47, 56, 73], "iir": [0, 1, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 64, 65, 66, 67, 68, 71, 74, 75, 76], "implement": [0, 18, 31, 47, 53, 56, 72], "an": [0, 31, 32, 33, 40, 47, 67], "infinit": [0, 31, 75, 76], "impuls": [0, 31, 40, 64, 67, 75, 76], "respons": [0, 31, 37, 38, 40, 44, 64, 65, 66, 67, 68, 75, 76], "farrowresampl": [0, 24, 25, 26, 27, 28, 29, 30, 72, 75, 76], "A": [0, 1, 8, 9, 11, 12, 13, 14, 15, 17, 24, 47, 50, 51, 74], "cubic": [0, 24], "farrow": [0, 24, 25, 26, 27, 28, 29, 30, 75, 76], "arbitrari": [0, 24, 25, 26, 27, 28, 29, 30, 75, 76], "closedlooppl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 74, 75, 76], "defin": [0, 1, 31, 73, 75], "perform": [0, 1, 73], "close": [0, 1, 8, 10, 75, 76], "pll": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 75, 76], "dd": [0, 18, 19, 20, 21, 22, 23, 56, 74, 75, 76], "direct": [0, 18, 19, 74, 75, 76], "digit": [0, 1, 9, 11, 12, 13, 14, 15, 18, 19, 47, 74, 75, 76], "synthes": [0, 18, 19, 74, 75, 76], "loopfilt": [0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76], "2nd": [0, 1, 47, 50, 74, 76], "order": [0, 1, 24, 26, 31, 41, 47, 50, 74, 76], "proport": [0, 1, 5, 47, 48, 50, 76], "plu": [0, 1, 47, 50, 76], "integr": [0, 1, 6, 47, 49, 50, 73, 76], "ppi": [0, 47, 50], "nco": [0, 1, 4, 8, 18, 19, 20, 50, 56, 57, 58, 59, 60, 61, 62, 63, 74, 75, 76], "numer": [0, 1, 18, 20, 56, 58, 73, 74, 75, 76], "control": [0, 1, 18, 20, 56, 58, 74, 75, 76], "oscil": [0, 1, 18, 20, 56, 58, 74, 75, 76], "b": [0, 31, 33, 64, 65, 66, 67, 68, 71], "ndarrai": [0, 18, 21, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 52, 56, 61, 63, 64, 65, 66, 67, 68, 69, 71], "1": [0, 1, 8, 17, 18, 19, 31, 32, 37, 38, 41, 47, 50, 51, 56, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77], "frequenc": [0, 1, 9, 11, 13, 31, 37, 38, 47, 64, 65, 66], "h": [0, 31, 37, 38, 40, 47, 64, 65, 67, 74], "e": [0, 1, 18, 31, 37, 38, 64, 65, 73, 74], "j": [0, 1, 18, 31, 64, 65, 73, 74], "omega": [0, 64, 65, 66, 74], "n": [0, 1, 18, 21, 23, 27, 31, 36, 37, 38, 40, 41, 44, 47, 52, 56, 61, 63, 64, 65, 66, 67, 68, 69, 74], "step": [0, 18, 21, 23, 31, 44, 56, 61, 63, 64, 68], "": [0, 1, 9, 11, 12, 13, 15, 16, 31, 37, 38, 44, 64, 65, 66, 68, 69, 70, 72], "zero": [0, 28, 31, 32, 46, 47, 64, 71, 74], "pole": [0, 31, 32, 42, 64, 71], "frequency_respons": [0, 31, 37, 65, 73, 74], "group_delai": [0, 66, 73], "group": [0, 66], "delai": [0, 18, 24, 47, 56, 66, 74], "tau_g": [0, 66], "impulse_respons": [0, 31, 40, 67, 73], "step_respons": [0, 31, 44, 68, 73, 74], "time_domain": [0, 69], "x": [0, 1, 18, 21, 24, 27, 31, 36, 47, 52, 56, 61, 64, 65, 66, 69, 74, 77], "sample_r": [0, 1, 8, 16, 37, 38, 64, 65, 66, 69, 72, 74], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 31, 32, 37, 38, 39, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 64, 65, 66, 69], "0": [0, 8, 18, 19, 31, 32, 37, 38, 50, 56, 58, 64, 65, 66, 69, 70, 72, 73, 74, 77], "kwarg": [0, 65, 66, 67, 68, 69, 71], "domain": [0, 64, 69], "signal": [0, 1, 9, 11, 14, 15, 18, 21, 24, 27, 31, 36, 47, 52, 56, 61, 63, 69, 73, 74, 75], "use_styl": [0, 70], "appli": [0, 70], "default": [0, 70], "matplotlib": [0, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "rcparam": [0, 70, 72, 74], "zeros_pol": [0, 71, 73], "sdr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77], "loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 75, 76], "thi": [1, 31, 64, 65, 66, 67, 68, 71, 72, 73, 74], "i": [1, 8, 17, 24, 29, 31, 40, 44, 45, 47, 50, 51, 54, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77], "meant": 1, "analysi": [1, 8, 74, 75, 76], "onli": [1, 24, 28, 31, 43, 74], "block": [1, 18, 47, 56], "diagram": [1, 18, 47, 56], "bb": [1, 74], "ped": [1, 7, 8, 50, 74], "lf": [1, 74], "lo": [1, 74], "input": [1, 9, 11, 14, 15, 18, 21, 24, 25, 27, 28, 31, 32, 33, 36, 40, 44, 47, 52, 56, 61, 67, 68, 73, 74], "local": [1, 73, 74], "baseband": [1, 74], "phase": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 75], "error": [1, 7, 8, 14, 47, 50, 74], "detector": [1, 7, 8, 50, 74], "filter": [1, 5, 6, 8, 10, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 71, 75, 76], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 31, 32, 33, 36, 37, 38, 40, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77], "transfer": [1, 10, 31, 32, 47, 73, 74], "function": [1, 10, 31, 32, 47, 73, 74], "h_": [1, 74], "z": [1, 18, 31, 47, 56, 73, 74], "k_1": [1, 47, 74], "k_2": [1, 47, 74], "frac": [1, 31, 47, 74], "k_0": [1, 74], "k_p": [1, 74], "2": [1, 14, 72, 73, 74], "refer": [1, 9, 11, 12, 13, 14, 15, 24, 47, 73], "rice": [1, 9, 11, 12, 13, 14, 15, 47], "commun": [1, 9, 11, 12, 13, 14, 15, 47, 74], "discret": [1, 9, 11, 12, 13, 14, 15, 47, 72, 74], "time": [1, 8, 9, 11, 12, 13, 14, 15, 31, 47, 50, 64, 69, 72, 73], "approach": [1, 9, 11, 12, 13, 14, 15, 47, 74], "appendix": [1, 47], "c": [1, 9, 11, 12, 13, 14, 15, 47, 73, 74], "lock": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 75], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 74], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "noise_bandwidth": [1, 8, 47, 50, 54], "damping_factor": [1, 8, 47, 50, 51], "creat": [1, 8, 18, 19, 24, 25, 31, 32, 33, 47, 50, 56, 58, 72, 74], "object": [1, 8, 73, 74], "frequency_lock_tim": [1, 9], "freq_offset": [1, 9, 11], "return": [1, 9, 11, 14, 15, 21, 23, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 52, 61, 63, 73], "lock_tim": [1, 11, 74], "phase_error_vari": [1, 14], "cn0": [1, 14], "varianc": [1, 14], "steadi": [1, 14], "state": [1, 14, 24, 28, 29, 31, 43, 45], "phase_lock_tim": [1, 15], "bn": [1, 2], "nois": [1, 2, 3, 8, 14, 47, 50, 54, 74], "bandwidth": [1, 2, 3, 8, 12, 47, 50, 54, 74], "hz": [1, 2, 8, 9, 11, 14, 37, 38, 47, 50, 54, 72], "bnt": [1, 3, 74], "normal": [1, 3, 8, 47, 50, 54, 74], "repres": [1, 10], "k0": [1, 4, 8, 18, 19, 50, 56, 57, 58], "gain": [1, 4, 5, 6, 7, 8, 18, 19, 31, 32, 39, 47, 48, 49, 50, 56, 57, 58, 74], "k1": [1, 5, 47, 48, 74], "k2": [1, 6, 47, 49, 74], "kp": [1, 7, 8, 50], "omega_3db": [1, 12], "3": [1, 12, 73, 74, 75, 76], "db": [1, 12, 14], "radian": [1, 12, 13, 14, 18, 19, 74], "omega_n": [1, 13, 74], "natur": [1, 13], "sampl": [1, 8, 16, 18, 19, 21, 23, 24, 28, 37, 38, 40, 44, 47, 50, 54, 56, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 72, 74], "rate": [1, 8, 16, 24, 27, 37, 38, 64, 65, 66, 69], "zeta": [1, 17], "damp": [1, 8, 17, 47, 50, 51, 74], "factor": [1, 8, 17, 47, 50, 51, 74], "properti": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 17, 20, 26, 29, 30, 34, 35, 39, 41, 42, 45, 46, 48, 49, 51, 53, 54, 57, 59, 60], "paramet": [8, 9, 11, 14, 19, 21, 23, 25, 27, 28, 32, 33, 36, 37, 38, 40, 44, 50, 52, 58, 61, 63, 64, 65, 66, 67, 68, 69, 71], "b_n": [8, 47, 50, 54], "t": [8, 47, 50, 54, 72], "where": [8, 47, 50, 54, 73], "period": [8, 47, 50, 54], "second": [8, 9, 11, 15, 47, 50, 54], "critic": [8, 17, 47, 50, 51, 74], "less": [8, 17, 47, 50, 51], "than": [8, 17, 47, 50, 51], "underdamp": [8, 17, 47, 50, 51], "greater": [8, 17, 47, 50, 51], "overdamp": [8, 17, 47, 50, 51], "ted": [8, 50], "offset": [9, 11, 18, 19, 56, 58, 60, 74], "take": [9, 11, 15], "onto": [9, 11, 15], "equat": [9, 11, 12, 13, 14, 15, 31], "39": 9, "38": 11, "34": 12, "33": 13, "carrier": 14, "densiti": 14, "ratio": 14, "43": 14, "40": 15, "note": [18, 31, 47, 56], "increment": [18, 19, 21, 56, 58, 59, 61, 74], "v": [18, 56], "y": [18, 21, 23, 27, 31, 36, 47, 52, 56, 61, 63, 74], "output": [18, 21, 23, 40, 44, 47, 56, 61, 63, 67, 68, 72, 73, 74], "constant": [18, 19, 47, 56, 58, 59, 73, 74], "accumul": [18, 19, 56, 58, 59, 74], "absolut": [18, 19, 56, 58, 60], "unit": [18, 44, 47, 56, 58, 59, 60, 68, 73, 74], "adder": [18, 47, 56, 74], "process": [18, 21, 56, 61, 73, 74], "variabl": [18, 21, 56, 61, 74], "reset": [18, 22, 24, 28, 31, 43, 47, 55, 56, 62], "int": [18, 23, 24, 26, 31, 37, 38, 40, 41, 44, 56, 63, 64, 65, 66, 67, 68], "forward": [18, 23, 56, 63], "us": [18, 20, 24, 25, 32, 33, 47, 53, 64, 67, 68, 73, 77], "vari": [21, 61], "per": [21, 61], "complex": [21, 23, 72, 73], "exponenti": [21, 23, 72, 73], "number": [23, 37, 38, 40, 44, 63, 64, 65, 66, 67, 68], "resampl": [24, 25, 26, 27, 28, 29, 30, 75, 76], "http": 24, "wirelesspi": 24, "com": 24, "fraction": [24, 28, 72], "structur": 24, "stream": [24, 25, 28, 29, 31, 32, 33, 43, 45], "bool": [24, 25, 29, 31, 32, 33, 45], "fals": [24, 25, 31, 32, 33, 73], "new": [24, 25], "given": [24, 27, 73], "np": [24, 28, 72, 73, 74], "none": [24, 28, 47, 55, 64, 67, 68, 72], "mode": [24, 25, 28, 29, 31, 32, 33, 43, 45], "index": [24, 28], "whether": [24, 25, 29, 31, 32, 33, 45], "tap": [24, 30, 31, 34, 35, 73], "indic": [25, 32, 33], "In": [25, 29, 32, 33, 45, 70, 72], "previou": [25, 28, 32, 33], "ar": [25, 32, 33, 38, 64, 65, 66, 70, 72, 73, 74, 77], "preserv": [25, 29, 32, 33, 45], "between": [25, 29, 32, 33, 45, 74], "call": [25, 29, 32, 33, 45], "t_": 27, "r": [27, 73, 74], "vector": 28, "should": 28, "equal": 28, "three": [28, 72], "If": [28, 64, 67, 68, 69], "wrapper": 31, "scipi": [31, 73], "lfilter": 31, "It": [31, 47], "support": 31, "one": [31, 64, 65, 66, 73], "its": [31, 32, 73], "feedforward": [31, 33, 35, 64, 65, 66, 67, 68, 71, 73], "coeffici": [31, 33, 64, 65, 66, 67, 68, 71, 73], "b_i": [31, 33, 35, 64, 65, 66, 67, 68, 71, 73], "feedback": [31, 33, 34, 64, 65, 66, 67, 68, 71, 73], "a_j": [31, 33, 34, 64, 65, 66, 67, 68, 71, 73], "These": [31, 70, 74], "differ": 31, "a_0": 31, "left": 31, "sum_": 31, "m": 31, "right": 31, "classmethod": [31, 32], "zerospol": [31, 32, 73], "self": [31, 32], "from": [31, 32, 37, 38, 73, 74], "tupl": [31, 37, 38], "j2": [31, 37, 38], "pi": [31, 37, 38, 72, 73, 74], "f": [31, 37, 38, 72, 73, 74], "frequency_response_log": [31, 38], "logarithm": [31, 38, 64, 65, 66, 73], "axi": [31, 38, 64, 65, 66, 69, 72], "100": [31, 40, 44, 64, 67, 68, 72], "a_tap": [31, 34, 73, 74], "b_tap": [31, 35, 73, 74], "1024": [37, 38, 64, 65, 66], "f_": [37, 38, 72, 73, 74], "decad": [38, 64, 65, 66, 74], "4": [38, 64, 65, 66, 70, 72, 73, 76], "plot": [38, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "space": 38, "when": [40, 44, 64, 65, 66, 67, 68, 72, 73], "delta": [40, 67, 73], "u": [44, 68, 73], "can": [47, 73, 77], "track": 47, "cannot": 47, "howev": [47, 72], "chirp": 47, "ramp": 47, "underli": [47, 53], "n_time": [64, 73], "n_freq": 64, "x_axi": [64, 65, 66, 73, 74], "liter": [64, 65, 66], "side": [64, 65, 66, 73], "type": [64, 65, 66], "two": [64, 65, 66, 72, 73], "log": [64, 65, 66, 73, 74], "For": [64, 65, 66, 67, 68, 71], "fir": [64, 65, 66, 67, 68, 71], "set": [64, 65, 66, 67, 68, 70, 71, 73], "length": [64, 67, 68, 72], "scale": [64, 65, 66, 73], "option": [64, 65, 66], "displai": [64, 65, 66], "spectrum": [64, 65, 66], "addit": [65, 66, 67, 68, 69, 71], "keyword": [65, 66, 67, 68, 69, 71, 73], "argument": [65, 66, 67, 68, 69, 71, 73], "pass": [65, 66, 67, 68, 69, 71, 73], "pyplot": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "label": [69, 72, 74], "style": 70, "mai": [70, 73], "revert": 70, "rcdefault": 70, "follow": [70, 74], "_rc_param": 70, "rc_param": 70, "out": 70, "ax": [70, 72, 74], "grid": [70, 72, 74], "true": 70, "figur": [70, 72, 73, 74], "autolayout": 70, "figsiz": [70, 72, 73, 74], "8": [70, 73, 74], "max_open_warn": 70, "titleweight": 70, "bold": 70, "alpha": 70, "linestyl": [70, 72, 74], "import": [72, 73, 74], "numpi": [72, 73, 74], "plt": [72, 73, 74], "config": [72, 73, 74], "inlinebackend": [72, 73, 74], "print_figure_kwarg": [72, 73, 74], "facecolor": [72, 73, 74], "w": [72, 73, 74], "widget": [72, 73, 74], "color": [72, 74], "prop_cycl": [72, 74], "by_kei": [72, 74], "continu": 72, "freq": [72, 74], "05": [72, 73, 74], "tx": 72, "arang": [72, 74], "exp": [72, 73, 74], "1j": [72, 73, 74], "decai": [72, 73], "10": [72, 73, 74], "5": [72, 73, 74, 76], "real": [72, 73, 74], "marker": [72, 73], "o": 72, "fillstyl": 72, "imag": 72, "xlabel": [72, 74], "ylabel": [72, 74], "amplitud": [72, 74], "titl": [72, 74], "origin": 72, "legend": [72, 74], "which": [72, 74], "both": [72, 74], "show": [72, 73, 74], "now": 72, "equival": 72, "accomplish": 72, "librari": [72, 75, 77], "def": 72, "resample_sign": 72, "new_sample_r": 72, "ty": 72, "size": [72, 74], "print": [72, 73, 74], "notic": 72, "everi": 72, "200": 72, "four": 72, "400": 72, "other": [72, 77], "appear": 72, "50": 72, "fourth": 72, "25": [72, 74], "roughli": 72, "often": 72, "do": 72, "align": 72, "315": 72, "32": 72, "user": 73, "specifi": 73, "altern": 73, "below": 73, "conjug": 73, "6": [73, 74], "conj": [73, 74], "0x000002214b040a88": 73, "47820725": 73, "64": 73, "comput": [73, 74], "method": 73, "30": 73, "00000000e": 73, "00": 73, "78207252e": 73, "01": [73, 74], "58172329e": 73, "10862468e": 73, "86109590e": 73, "21565653e": 73, "02": [73, 74], "01140214e": 73, "57286400e": 73, "67772160e": 73, "47338728e": 73, "10422993e": 73, "89312837e": 73, "12240078e": 73, "03953322e": 73, "03": 73, "69685122e": 73, "63882791e": 73, "81474977e": 73, "47193366e": 73, "85259041e": 73, "15647504e": 73, "23851924e": 73, "42176895e": 73, "04": 73, "84684395e": 73, "42721858e": 73, "72236648e": 73, "14721649e": 73, "10813095e": 73, "94024315e": 73, "78877688e": 73, "74077567e": 73, "conveni": 73, "87820725": 73, "53637958": 73, "94724205": 73, "13335164": 73, "1455082": 73, "04436799": 73, "88708159": 73, "71930943": 73, "5719707": 73, "46154771": 73, "39261642": 73, "36139242": 73, "35935288": 73, "3763214": 73, "40270968": 73, "43085717": 73, "45557651": 73, "47410241": 73, "48566716": 73, "49090568": 73, "49124786": 73, "48840102": 73, "4839738": 73, "47925143": 73, "47510421": 73, "47199608": 73, "47005584": 73, "46917696": 73, "46911955": 73, "valu": 73, "denomin": 73, "73910363": 73, "30614675j": 73, "plane": 73, "evalu": 73, "shift": 73, "envelop": 73, "through": [73, 74], "easili": 73, "here": 73, "arrai": 73, "linspac": 73, "endpoint": 73, "concaten": 73, "0x000002214dc574c8": 73, "lyon": 73, "understand": 73, "3rd": 73, "edit": 73, "section": [73, 74], "insid": 73, "circl": 73, "sinusoid": 73, "matth": 73, "appdata": 73, "packag": [73, 75], "pythonsoftwarefound": 73, "python": [73, 75], "7_qbz5n2kfra8p0": 73, "localcach": 73, "python37": 73, "site": 73, "filter_design": 73, "py": 73, "476": 73, "runtimewarn": 73, "divid": 73, "encount": 73, "true_divid": 73, "npp_polyv": 73, "zm1": 73, "tensor": 73, "invalid": 73, "outsid": 73, "unstabl": 73, "increas": 73, "ha": 74, "configur": 74, "0x00000290f1ce3488": 74, "75": 74, "theta_0": 74, "phase_error": 74, "measur": 74, "freq_estim": 74, "estim": 74, "rang": 74, "subplot": 74, "suptitl": 74, "tight_layout": 74, "ones": 74, "dtype": 74, "complex64": 74, "angl": 74, "part": 74, "unwrap": 74, "system": 74, "avail": 74, "sqrt": 74, "500": 74, "rf": 74, "xlim": 74, "ylim": 74, "001": 74, "005": 74, "b_nt": 74, "0005": 74, "00001": 74, "0125": 74, "015": 74, "0175": 74, "t_lock": 74, "softwar": 75, "radio": 75, "applic": 75, "gener": 75, "releas": 76, "juli": 76, "9": 76, "2023": 76, "ad": 76, "matt": 76, "hostett": 76, "mhostett": 76, "semant": 77, "major": 77, "minor": 77, "patch": 77, "introduc": 77, "api": 77, "chang": 77, "featur": 77, "add": 77, "backward": 77, "compat": 77, "make": 77, "bug": 77, "fix": 77, "befor": 77, "There": 77, "guarante": 77, "them": 77, "thei": 77, "thought": 77}, "objects": {"": [[0, 0, 0, 1, "sdr", ""]], "sdr": [[1, 1, 1, "", "ClosedLoopPLL", "A class that defines the performance of a closed-loop PLL."], [18, 1, 1, "", "DDS", "Implements a direct digital synthesizer (DDS)."], [24, 1, 1, "", "FarrowResampler", "A cubic Farrow arbitrary resampler."], [31, 1, 1, "", "IIR", "Implements an infinite impulse response (IIR) filter."], [47, 1, 1, "", "LoopFilter", "Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."], [56, 1, 1, "", "NCO", "Implements a numerically-controlled oscillator (NCO)."]], "sdr.ClosedLoopPLL": [[2, 2, 1, "", "Bn", "The noise bandwidth of the PLL in Hz."], [3, 2, 1, "", "BnT", "The normalized noise bandwidth of the PLL."], [4, 2, 1, "", "K0", "The NCO gain."], [5, 2, 1, "", "K1", "The proportional gain of the loop filter."], [6, 2, 1, "", "K2", "The integral gain of the loop filter."], [7, 2, 1, "", "Kp", "The phase error detector (PED) gain."], [8, 3, 1, "", "__init__", "Creates a closed-loop PLL analysis object."], [9, 3, 1, "", "frequency_lock_time", "Returns the frequency lock time of the PLL."], [10, 2, 1, "", "iir", "The IIR filter that represents the closed-loop transfer function of the PLL."], [11, 3, 1, "", "lock_time", "Returns the lock time of the PLL."], [12, 2, 1, "", "omega_3dB", "The 3-dB bandwidth of the PLL in radians/s."], [13, 2, 1, "", "omega_n", "The natural frequency of the PLL in radians/s."], [14, 3, 1, "", "phase_error_variance", "Returns the variance of the phase error of the PLL in steady state."], [15, 3, 1, "", "phase_lock_time", "Returns the phase lock time of the PLL."], [16, 2, 1, "", "sample_rate", "The sample rate of the PLL in samples/s."], [17, 2, 1, "", "zeta", "The damping factor of the PLL."]], "sdr.ClosedLoopPLL.__init__": [[8, 4, 2, "p-K0", "K0", "The NCO gain."], [8, 4, 2, "p-Kp", "Kp", "The gain of the phase error detector (PED) or time error detector (TED)."], [8, 4, 2, "p-damping_factor", "damping_factor", "The damping factor of the loop filter. A damping factor of 1 is critically damped, less than 1 is underdamped, and greater than 1 is overdamped."], [8, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [8, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the PLL in Hz."]], "sdr.ClosedLoopPLL.frequency_lock_time": [[9, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset of the input signal in Hz."]], "sdr.ClosedLoopPLL.lock_time": [[11, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset of the input signal in Hz."]], "sdr.ClosedLoopPLL.phase_error_variance": [[14, 4, 2, "p-cn0", "cn0", "The carrier-to-noise density ratio of the input signal in dB-Hz."]], "sdr.DDS": [[19, 3, 1, "", "__init__", "Creates a direct digital synthesizer (DDS)."], [20, 2, 1, "", "nco", "The numerically-controlled oscillator (NCO) used by the DDS."], [21, 3, 1, "", "process", "Steps the DDS with the variable phase increment signal $x[n]$."], [22, 3, 1, "", "reset", "Resets the DDS."], [23, 3, 1, "", "step", "Steps the DDS forward by $N$ samples."]], "sdr.DDS.__init__": [[19, 4, 2, "p-K0", "K0", "The NCO gain."], [19, 4, 2, "p-increment", "increment", "The constant accumulation of the NCO in radians/sample."], [19, 4, 2, "p-offset", "offset", "The absolute offset of the NCO in radians."]], "sdr.DDS.process": [[21, 4, 2, "p-x", "x", "The input signal, $x[n]$. The input signal varies the per-sample phase increment of the DDS."]], "sdr.DDS.step": [[23, 4, 2, "p-N", "N", "The number of samples to step the DDS forward."]], "sdr.FarrowResampler": [[25, 3, 1, "", "__init__", "Creates a new Farrow arbitrary resampler."], [26, 2, 1, "", "order", "Returns the order of the filter."], [27, 3, 1, "", "resample", "Resamples the input signal by the given arbitrary rate."], [28, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state and fractional sample index."], [29, 2, 1, "", "streaming", "Returns whether the filter is in streaming mode."], [30, 2, 1, "", "taps", "Returns the Farrow filter taps."]], "sdr.FarrowResampler.__init__": [[25, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to resample()."]], "sdr.FarrowResampler.resample": [[27, 4, 2, "p-rate", "rate", "The resampling rate, $r$."], [27, 4, 2, "p-x", "x", "The input signal, $x[n] = x(n T_s)$."]], "sdr.FarrowResampler.reset": [[28, 4, 2, "p-state", "state", "The filter state to reset to. The state vector should equal the previous three inputs. If None, the filter state will be reset to zero."]], "sdr.IIR": [[32, 3, 1, "", "ZerosPoles", "Creates an IIR filter from its zeros, poles, and gain."], [33, 3, 1, "", "__init__", "Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."], [34, 2, 1, "", "a_taps", "Returns the feedback filter taps, $a_j$."], [35, 2, 1, "", "b_taps", "Returns the feedforward filter taps, $b_i$."], [36, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the IIR filter."], [37, 3, 1, "", "frequency_response", "Returns the frequency response $H(e^{j2 pi f})$ of the IIR filter."], [38, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(e^{j2 pi f})$ of the IIR filter on a logarithmic frequency axis"], [39, 2, 1, "", "gain", "Returns the gain of the IIR filter."], [40, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the IIR filter."], [41, 2, 1, "", "order", "Returns the order of the IIR filter, $N - 1$."], [42, 2, 1, "", "poles", "Returns the poles of the IIR filter."], [43, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [44, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the IIR filter."], [45, 2, 1, "", "streaming", "Returns whether the filter is in streaming mode."], [46, 2, 1, "", "zeros", "Returns the zeros of the IIR filter."]], "sdr.IIR.ZerosPoles": [[32, 4, 2, "p-gain", "gain", "The gain of the transfer function."], [32, 4, 2, "p-poles", "poles", "The poles of the transfer function."], [32, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."], [32, 4, 2, "p-zeros", "zeros", "The zeros of the transfer function."]], "sdr.IIR.__init__": [[33, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$."], [33, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."], [33, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."]], "sdr.IIR.filter": [[36, 4, 2, "p-x", "x", "The input signal, $x[n]$."]], "sdr.IIR.frequency_response": [[37, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [37, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.frequency_response_log": [[38, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [38, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [38, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.impulse_response": [[40, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.IIR.step_response": [[44, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.LoopFilter": [[48, 2, 1, "", "K1", "The proportional gain of the loop filter."], [49, 2, 1, "", "K2", "The integral gain of the loop filter."], [50, 3, 1, "", "__init__", "Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."], [51, 2, 1, "", "damping_factor", "The damping factor of the loop filter. A damping factor of 1 is critically damped, less than 1 is underdamped, and greater than 1 is overdamped."], [52, 3, 1, "", "filter", "Filters the input signal $x[n]$."], [53, 2, 1, "", "iir", "The underlying IIR filter used to implement the loop filter."], [54, 2, 1, "", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [55, 3, 1, "", "reset", "Resets the loop filter."]], "sdr.LoopFilter.__init__": [[50, 4, 2, "p-K0", "K0", "The NCO gain."], [50, 4, 2, "p-Kp", "Kp", "The gain of the phase error detector (PED) or time error detector (TED)."], [50, 4, 2, "p-damping_factor", "damping_factor", "The damping factor of the loop filter. A damping factor of 1 is critically damped, less than 1 is underdamped, and greater than 1 is overdamped."], [50, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]], "sdr.LoopFilter.filter": [[52, 4, 2, "p-x", "x", "The input signal, $x[n]$."]], "sdr.NCO": [[57, 2, 1, "", "K0", "The NCO gain."], [58, 3, 1, "", "__init__", "Creates a numerically-controlled oscillator (NCO)."], [59, 2, 1, "", "increment", "The constant accumulation of the NCO in units/sample."], [60, 2, 1, "", "offset", "The absolute offset of the NCO in units."], [61, 3, 1, "", "process", "Steps the NCO with the variable-increment signal $x[n]$."], [62, 3, 1, "", "reset", "Resets the NCO."], [63, 3, 1, "", "step", "Steps the NCO forward by $N$ samples."]], "sdr.NCO.__init__": [[58, 4, 2, "p-K0", "K0", "The NCO gain."], [58, 4, 2, "p-increment", "increment", "The constant accumulation of the NCO in units/sample."], [58, 4, 2, "p-offset", "offset", "The absolute offset of the NCO in units."]], "sdr.NCO.process": [[61, 4, 2, "p-x", "x", "The input signal, $x[n]$. The input signal varies the per-sample increment of the NCO."]], "sdr.NCO.step": [[63, 4, 2, "p-N", "N", "The number of samples to step the NCO forward."]], "sdr.plot": [[64, 5, 1, "", "filter", "Plots the frequency response $H(e^{jomega})$, impulse response $h[n]$, step response $s[n]$, and zeros and poles of the filter."], [65, 5, 1, "", "frequency_response", "Plots the frequency response $H(e^{jomega})$ of the filter."], [66, 5, 1, "", "group_delay", "Plots the group delay $tau_g(omega)$ of the IIR filter."], [67, 5, 1, "", "impulse_response", "Plots the impulse response $h[n]$ of a filter."], [68, 5, 1, "", "step_response", "Plots the step response $s[n]$ of a filter."], [69, 5, 1, "", "time_domain", "Plots a time-domain signal $x[n]$."], [70, 5, 1, "", "use_style", "Applies sdr's default matplotlib rcParams."], [71, 5, 1, "", "zeros_poles", "Plots the zeros and poles of the filter."]], "sdr.plot.filter": [[64, 4, 2, "p-N_freq", "N_freq", "The number of samples in the frequency response."], [64, 4, 2, "p-N_time", "N_time", "The number of samples in the time domain. If None, the length of b is used for FIR filters and 100 for IIR filters."], [64, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$. For FIR filters, this is set to 1."], [64, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."], [64, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [64, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."], [64, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.frequency_response": [[65, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [65, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$. For FIR filters, this is set to 1."], [65, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."], [65, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [65, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."], [65, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.group_delay": [[66, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [66, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$. For FIR filters, this is set to 1."], [66, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."], [66, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [66, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."], [66, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.impulse_response": [[67, 4, 2, "p-N", "N", "The number of samples to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [67, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$. For FIR filters, this is set to 1."], [67, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."]], "sdr.plot.step_response": [[68, 4, 2, "p-N", "N", "The number of samples to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [68, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$. For FIR filters, this is set to 1."], [68, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."]], "sdr.plot.time_domain": [[69, 4, 2, "p-sample_rate", "sample_rate", "The sample rate of the signal in samples/s. If the sample rate is 1, the x-axis will be label as \"Samples\"."], [69, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to plot."]], "sdr.plot.zeros_poles": [[71, 4, 2, "p-a", "a", "The feedback coefficients, $a_j$. For FIR filters, this is set to 1."], [71, 4, 2, "p-b", "b", "The feedforward coefficients, $b_i$."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:parameter", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"]}, "titleterms": {"sdr": [0, 75], "filter": [0, 73, 74], "resampl": [0, 72], "phase": [0, 74], "time": [0, 74], "lock": [0, 74], "loop": [0, 74], "plot": 0, "note": 1, "constructor": [1, 18, 24, 31, 47, 56], "method": [1, 18, 24, 31, 47, 56], "properti": [1, 18, 24, 31, 47, 56], "see": [18, 56, 64, 65, 66, 67, 68, 71], "also": [18, 56, 64, 65, 66, 67, 68, 71], "farrow": 72, "arbitrari": 72, "construct": 72, "an": [72, 73], "input": 72, "signal": 72, "x": 72, "n": [72, 73], "t_": 72, "rate": 72, "r": 72, "y": 72, "frac": 72, "upsampl": 72, "integ": 72, "downsampl": 72, "irrat": 72, "iir": 73, "creat": 73, "examin": 73, "impuls": 73, "respons": [73, 74], "h": 73, "step": [73, 74], "": 73, "zero": 73, "pole": 73, "frequenc": [73, 74], "omega": 73, "group": 73, "delai": 73, "tau_g": 73, "fulli": 73, "analyz": [73, 74], "digit": 73, "stabil": 73, "design": 74, "proport": 74, "plu": 74, "integr": 74, "ppi": 74, "implement": 74, "pll": 74, "domain": 74, "close": 74, "perform": 74, "compar": 74, "across": 74, "zeta": 74, "b_n": 74, "t": 74, "featur": 75, "v0": 76, "0": 76, "1": 76, "chang": 76, "contributor": 76, "version": 77, "alpha": 77, "releas": 77, "beta": 77}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"sdr": [[0, "sdr"], [75, "sdr"]], "Filtering": [[0, "filtering"]], "Resampling": [[0, "resampling"]], "Phase/time-locked loops": [[0, "phase-time-locked-loops"]], "Plotting": [[0, "plotting"]], "Note": [[1, null]], "Constructors": [[1, "constructors"], [18, "constructors"], [24, "constructors"], [31, "constructors"], [47, "constructors"], [56, "constructors"]], "Methods": [[1, "methods"], [18, "methods"], [24, "methods"], [31, "methods"], [47, "methods"], [56, "methods"]], "Properties": [[1, "properties"], [18, "properties"], [24, "properties"], [31, "properties"], [47, "properties"], [56, "properties"]], "See also": [[18, null], [56, null], [64, null], [65, null], [66, null], [67, null], [68, null], [71, null]], "Farrow arbitrary resampler": [[72, "farrow-arbitrary-resampler"]], "Construct an input signal, x[n] = x(n T_s)": [[72, "construct-an-input-signal-x-n-x-n-t-s"]], "Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})": [[72, "resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]], "Upsample the signal by an integer rate": [[72, "upsample-the-signal-by-an-integer-rate"]], "Downsample the signal by an integer rate": [[72, "downsample-the-signal-by-an-integer-rate"]], "Upsample by an irrational rate": [[72, "upsample-by-an-irrational-rate"]], "Downsample by an irrational rate": [[72, "downsample-by-an-irrational-rate"]], "IIR filters": [[73, "iir-filters"]], "Create an IIR filter": [[73, "create-an-iir-filter"]], "Examine the impulse response, h[n]": [[73, "examine-the-impulse-response-h-n"]], "Examine the step response, s[n]": [[73, "examine-the-step-response-s-n"]], "Examine the zeros and poles": [[73, "examine-the-zeros-and-poles"]], "Examine the frequency response, H(\\omega)": [[73, "examine-the-frequency-response-h-omega"]], "Examine the group delay, \\tau_g(\\omega)": [[73, "examine-the-group-delay-tau-g-omega"]], "Fully analyze an IIR filter": [[73, "fully-analyze-an-iir-filter"]], "Poles and digital filter stability": [[73, "poles-and-digital-filter-stability"]], "Phase-locked loops": [[74, "phase-locked-loops"]], "Design a proportional-plus-integrator (PPI) loop filter": [[74, "design-a-proportional-plus-integrator-ppi-loop-filter"]], "Implement a PLL in the phase domain": [[74, "implement-a-pll-in-the-phase-domain"]], "Implement a PLL in the time domain": [[74, "implement-a-pll-in-the-time-domain"]], "Analyze PLL closed-loop performance": [[74, "analyze-pll-closed-loop-performance"]], "Compare step and frequency response across \\zeta": [[74, "compare-step-and-frequency-response-across-zeta"]], "Compare step and frequency response across B_n T": [[74, "compare-step-and-frequency-response-across-b-n-t"]], "Compare lock time across B_n T": [[74, "compare-lock-time-across-b-n-t"]], "Features": [[75, "features"]], "v0.0": [[76, "v0-0"]], "v0.0.1": [[76, "v0-0-1"]], "Changes": [[76, "changes"]], "Contributors": [[76, "contributors"]], "Versioning": [[77, "versioning"]], "Alpha releases": [[77, "alpha-releases"]], "Beta releases": [[77, "beta-releases"]]}, "indexentries": {"module": [[0, "module-sdr"]], "sdr": [[0, "module-sdr"]]}, "docurls": ["api/", "api/sdr.ClosedLoopPLL/", "api/sdr.ClosedLoopPLL.Bn/", "api/sdr.ClosedLoopPLL.BnT/", "api/sdr.ClosedLoopPLL.K0/", "api/sdr.ClosedLoopPLL.K1/", "api/sdr.ClosedLoopPLL.K2/", "api/sdr.ClosedLoopPLL.Kp/", "api/sdr.ClosedLoopPLL.__init__/", "api/sdr.ClosedLoopPLL.frequency_lock_time/", "api/sdr.ClosedLoopPLL.iir/", "api/sdr.ClosedLoopPLL.lock_time/", "api/sdr.ClosedLoopPLL.omega_3dB/", "api/sdr.ClosedLoopPLL.omega_n/", "api/sdr.ClosedLoopPLL.phase_error_variance/", "api/sdr.ClosedLoopPLL.phase_lock_time/", "api/sdr.ClosedLoopPLL.sample_rate/", "api/sdr.ClosedLoopPLL.zeta/", "api/sdr.DDS/", "api/sdr.DDS.__init__/", "api/sdr.DDS.nco/", "api/sdr.DDS.process/", "api/sdr.DDS.reset/", "api/sdr.DDS.step/", "api/sdr.FarrowResampler/", "api/sdr.FarrowResampler.__init__/", "api/sdr.FarrowResampler.order/", "api/sdr.FarrowResampler.resample/", "api/sdr.FarrowResampler.reset/", "api/sdr.FarrowResampler.streaming/", "api/sdr.FarrowResampler.taps/", "api/sdr.IIR/", "api/sdr.IIR.ZerosPoles/", "api/sdr.IIR.__init__/", "api/sdr.IIR.a_taps/", "api/sdr.IIR.b_taps/", "api/sdr.IIR.filter/", "api/sdr.IIR.frequency_response/", "api/sdr.IIR.frequency_response_log/", "api/sdr.IIR.gain/", "api/sdr.IIR.impulse_response/", "api/sdr.IIR.order/", "api/sdr.IIR.poles/", "api/sdr.IIR.reset/", "api/sdr.IIR.step_response/", "api/sdr.IIR.streaming/", "api/sdr.IIR.zeros/", "api/sdr.LoopFilter/", "api/sdr.LoopFilter.K1/", "api/sdr.LoopFilter.K2/", "api/sdr.LoopFilter.__init__/", "api/sdr.LoopFilter.damping_factor/", "api/sdr.LoopFilter.filter/", "api/sdr.LoopFilter.iir/", "api/sdr.LoopFilter.noise_bandwidth/", "api/sdr.LoopFilter.reset/", "api/sdr.NCO/", "api/sdr.NCO.K0/", "api/sdr.NCO.__init__/", "api/sdr.NCO.increment/", "api/sdr.NCO.offset/", "api/sdr.NCO.process/", "api/sdr.NCO.reset/", "api/sdr.NCO.step/", "api/sdr.plot.filter/", "api/sdr.plot.frequency_response/", "api/sdr.plot.group_delay/", "api/sdr.plot.impulse_response/", "api/sdr.plot.step_response/", "api/sdr.plot.time_domain/", "api/sdr.plot.use_style/", "api/sdr.plot.zeros_poles/", "examples/farrow-resampler/", "examples/iir-filter/", "examples/phase-locked-loop/", "", "release-notes/v0.0/", "release-notes/versioning/"]})