Search.setIndex({"titles": ["sdr", "sdr.ClosedLoopPLL", "sdr.ClosedLoopPLL.Bn", "sdr.ClosedLoopPLL.BnT", "sdr.ClosedLoopPLL.K0", "sdr.ClosedLoopPLL.K1", "sdr.ClosedLoopPLL.K2", "sdr.ClosedLoopPLL.Kp", "sdr.ClosedLoopPLL.__init__", "sdr.ClosedLoopPLL.frequency_lock_time", "sdr.ClosedLoopPLL.iir", "sdr.ClosedLoopPLL.lock_time", "sdr.ClosedLoopPLL.omega_3dB", "sdr.ClosedLoopPLL.omega_n", "sdr.ClosedLoopPLL.phase_error_variance", "sdr.ClosedLoopPLL.phase_lock_time", "sdr.ClosedLoopPLL.sample_rate", "sdr.ClosedLoopPLL.zeta", "sdr.DDS", "sdr.DDS.__init__", "sdr.DDS.nco", "sdr.DDS.process", "sdr.DDS.reset", "sdr.DDS.step", "sdr.FarrowResampler", "sdr.FarrowResampler.__init__", "sdr.FarrowResampler.order", "sdr.FarrowResampler.resample", "sdr.FarrowResampler.reset", "sdr.FarrowResampler.streaming", "sdr.FarrowResampler.taps", "sdr.IIR", "sdr.IIR.ZerosPoles", "sdr.IIR.__init__", "sdr.IIR.a_taps", "sdr.IIR.b_taps", "sdr.IIR.filter", "sdr.IIR.frequency_response", "sdr.IIR.frequency_response_log", "sdr.IIR.gain", "sdr.IIR.impulse_response", "sdr.IIR.order", "sdr.IIR.poles", "sdr.IIR.reset", "sdr.IIR.step_response", "sdr.IIR.streaming", "sdr.IIR.zeros", "sdr.LoopFilter", "sdr.LoopFilter.K1", "sdr.LoopFilter.K2", "sdr.LoopFilter.__init__", "sdr.LoopFilter.damping_factor", "sdr.LoopFilter.filter", "sdr.LoopFilter.iir", "sdr.LoopFilter.noise_bandwidth", "sdr.LoopFilter.reset", "sdr.NCO", "sdr.NCO.K0", "sdr.NCO.__init__", "sdr.NCO.increment", "sdr.NCO.offset", "sdr.NCO.process", "sdr.NCO.reset", "sdr.NCO.step", "sdr.gaussian", "sdr.hexdump", "sdr.pack", "sdr.plot.filter", "sdr.plot.frequency_response", "sdr.plot.group_delay", "sdr.plot.impulse_response", "sdr.plot.step_response", "sdr.plot.time_domain", "sdr.plot.use_style", "sdr.plot.zeros_poles", "sdr.raised_cosine", "sdr.root_raised_cosine", "sdr.unpack", "Farrow arbitrary resampler", "IIR filters", "Phase-locked loops", "Pulse shapes", "sdr", "v0.0", "Versioning"], "terms": {"class": [0, 1, 18, 24, 31, 47, 56, 79], "iir": [0, 1, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 67, 68, 69, 70, 71, 74, 80, 82, 83], "implement": [0, 18, 24, 31, 47, 53, 56, 78], "an": [0, 31, 32, 33, 40, 66, 70, 77], "infinit": [0, 31, 83], "impuls": [0, 31, 40, 64, 67, 70, 72, 81, 83], "respons": [0, 31, 37, 38, 40, 44, 64, 67, 68, 69, 70, 71, 81, 83], "gaussian": [0, 64], "time_bandwidth": [0, 64], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 31, 32, 37, 38, 39, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 64, 67, 68, 69, 72, 75, 76], "span": [0, 64, 75, 76, 81], "int": [0, 18, 23, 24, 26, 31, 37, 38, 40, 41, 44, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77], "sp": [0, 64, 75, 76, 81], "ndarrai": [0, 18, 21, 23, 24, 27, 30, 31, 34, 35, 36, 37, 38, 40, 42, 44, 46, 47, 52, 56, 61, 63, 64, 66, 75, 76, 77], "return": [0, 1, 9, 11, 14, 15, 21, 23, 27, 31, 36, 37, 38, 40, 44, 52, 61, 63, 64, 65, 66, 75, 76, 77, 79], "raised_cosin": [0, 75, 81, 82], "alpha": [0, 64, 73, 75, 76, 81], "rais": [0, 72, 75, 76], "cosin": [0, 72, 75, 76], "rc": [0, 75], "root_raised_cosin": [0, 67, 68, 69, 70, 71, 72, 76, 81, 82], "squar": [0, 72, 76], "root": [0, 72, 76], "srrc": [0, 72, 76], "farrowresampl": [0, 24, 25, 26, 27, 28, 29, 30, 78, 82, 83], "cubic": [0, 24], "farrow": [0, 24, 25, 26, 27, 28, 29, 30, 83], "arbitrari": [0, 24, 25, 26, 27, 28, 29, 30, 82, 83], "closedlooppl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 80, 82, 83], "A": [0, 1, 9, 11, 12, 13, 14, 15, 17, 47, 65, 75, 76, 80], "defin": [0, 1, 31, 64, 79, 82], "perform": [0, 1, 79], "close": [0, 1, 8, 10, 83], "pll": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 83], "dd": [0, 18, 19, 20, 21, 22, 23, 56, 80, 82, 83], "direct": [0, 18, 19, 80, 83], "digit": [0, 1, 9, 11, 12, 13, 14, 15, 18, 19, 47, 75, 76, 80, 83], "synthes": [0, 18, 19, 80, 83], "loopfilt": [0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 83], "2nd": [0, 1, 47, 50, 80, 83], "order": [0, 1, 24, 26, 31, 41, 47, 50, 64, 75, 76, 80, 83], "proport": [0, 1, 5, 47, 48, 50, 83], "plu": [0, 1, 47, 50, 83], "integr": [0, 1, 6, 47, 49, 50, 79, 83], "ppi": [0, 47, 50], "nco": [0, 1, 4, 8, 18, 19, 20, 50, 56, 57, 58, 59, 60, 61, 62, 63, 80, 82, 83], "numer": [0, 1, 18, 20, 56, 58, 79, 80, 83], "control": [0, 1, 18, 20, 56, 58, 80, 83], "oscil": [0, 1, 18, 20, 56, 58, 80, 83], "hexdump": [0, 65, 82], "arraylik": [0, 18, 21, 24, 27, 28, 31, 32, 33, 36, 47, 52, 56, 61, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77], "byte": [0, 65], "width": [0, 65], "16": [0, 65], "str": [0, 65], "specifi": [0, 65, 79], "pack": [0, 65, 66, 82], "x": [0, 1, 18, 21, 24, 27, 31, 36, 47, 52, 56, 61, 66, 67, 68, 69, 72, 77, 80, 84], "bpe": [0, 66, 77], "binari": [0, 66, 77], "arrai": [0, 66, 72, 77, 79], "multipl": [0, 66, 77], "bit": [0, 65, 66, 77], "per": [0, 21, 61, 64, 65, 66, 75, 76, 77, 81], "element": [0, 65, 66, 77], "unpack": [0, 65, 77, 82], "use_styl": [0, 73], "appli": [0, 73], "": [0, 1, 9, 11, 12, 13, 15, 16, 31, 37, 38, 44, 67, 68, 69, 71, 72, 73, 78], "default": [0, 73], "matplotlib": [0, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81], "rcparam": [0, 73, 78, 80], "time_domain": [0, 72, 81, 82], "sample_r": [0, 1, 8, 16, 37, 38, 67, 68, 69, 72, 78, 80, 81], "1": [0, 1, 8, 11, 15, 17, 18, 19, 31, 32, 37, 38, 41, 47, 50, 51, 56, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84], "0": [0, 8, 18, 19, 31, 32, 37, 38, 50, 56, 58, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84], "signal": [0, 1, 9, 11, 14, 15, 18, 21, 24, 27, 31, 36, 47, 52, 56, 61, 63, 64, 72, 79, 80, 81], "n": [0, 1, 18, 21, 23, 24, 27, 31, 36, 37, 38, 40, 41, 44, 47, 52, 56, 61, 63, 67, 68, 69, 70, 71, 72, 80, 81], "b": [0, 31, 33, 64, 65, 67, 68, 69, 70, 71, 74, 81], "h": [0, 31, 37, 38, 40, 47, 64, 67, 68, 70, 80, 81], "e": [0, 1, 18, 31, 37, 38, 67, 68, 79, 80], "j": [0, 1, 18, 31, 67, 68, 79, 80], "omega": [0, 19, 56, 58, 59, 67, 68, 69, 80], "step": [0, 18, 21, 23, 31, 44, 56, 61, 63, 67, 71], "zero": [0, 28, 31, 32, 46, 47, 66, 67, 68, 69, 70, 71, 72, 74, 80, 81], "pole": [0, 31, 32, 42, 67, 68, 69, 70, 71, 74], "frequency_respons": [0, 31, 37, 68, 79, 80, 81, 82], "group_delai": [0, 69, 79, 82], "group": [0, 69], "delai": [0, 18, 24, 47, 56, 69, 80], "tau_g": [0, 69], "impulse_respons": [0, 31, 40, 64, 70, 75, 76, 79, 81, 82], "step_respons": [0, 31, 44, 71, 79, 80, 82], "zeros_pol": [0, 74, 79, 82], "kwarg": [0, 68, 69, 70, 71, 72, 74], "sdr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84], "loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 82, 83], "thi": [1, 21, 31, 61, 67, 68, 69, 70, 71, 74, 78, 79, 80, 81], "i": [1, 8, 17, 24, 29, 31, 40, 44, 45, 47, 50, 51, 54, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84], "meant": 1, "analysi": [1, 8, 80, 83], "onli": [1, 24, 28, 31, 43, 80], "block": [1, 18, 47, 56], "diagram": [1, 18, 47, 56], "bb": [1, 80], "ped": [1, 7, 8, 50, 80], "lf": [1, 80], "lo": [1, 80], "input": [1, 9, 11, 14, 15, 18, 21, 24, 25, 27, 28, 31, 32, 33, 36, 40, 44, 47, 52, 56, 61, 66, 70, 71, 77, 79, 80], "local": [1, 80], "baseband": [1, 80], "phase": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 82], "error": [1, 7, 8, 14, 47, 50, 80], "detector": [1, 7, 8, 50, 80], "filter": [1, 5, 6, 8, 10, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84], "transfer": [1, 10, 31, 32, 47, 64, 79, 80], "function": [1, 10, 31, 32, 47, 64, 79, 80, 81], "h_": [1, 80], "z": [1, 18, 31, 47, 56, 79, 80], "k_1": [1, 5, 47, 48, 80], "k_2": [1, 6, 47, 49, 80], "frac": [1, 9, 11, 14, 15, 31, 47, 64, 80], "k_0": [1, 4, 8, 19, 50, 56, 57, 58, 80], "k_p": [1, 7, 8, 50, 80], "2": [1, 9, 11, 14, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81], "refer": [1, 9, 11, 12, 13, 14, 15, 24, 47, 64, 75, 76, 79, 81], "michael": [1, 9, 11, 12, 13, 14, 15, 47, 75, 76], "rice": [1, 9, 11, 12, 13, 14, 15, 47, 75, 76], "commun": [1, 9, 11, 12, 13, 14, 15, 47, 75, 76, 80], "discret": [1, 9, 11, 12, 13, 14, 15, 47, 75, 76, 78, 80], "time": [1, 8, 9, 11, 12, 13, 14, 15, 31, 47, 50, 64, 67, 72, 75, 76, 78, 79, 81], "approach": [1, 9, 11, 12, 13, 14, 15, 47, 75, 76, 80], "appendix": [1, 47, 75, 76], "c": [1, 9, 11, 12, 13, 14, 15, 47, 80], "lock": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 82], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 75, 76], "noise_bandwidth": [1, 8, 47, 50, 54], "damping_factor": [1, 8, 47, 50, 51], "creat": [1, 8, 18, 19, 24, 25, 31, 32, 33, 47, 50, 56, 58, 72, 78, 80, 81], "object": [1, 8, 79, 80], "frequency_lock_tim": [1, 9], "freq_offset": [1, 9, 11], "frequenc": [1, 9, 11, 13, 31, 37, 38, 47, 67, 68, 69, 81], "lock_tim": [1, 11, 80], "phase_error_vari": [1, 14], "cn0": [1, 14], "varianc": [1, 14], "steadi": [1, 14], "state": [1, 14, 24, 28, 29, 31, 43, 45], "phase_lock_tim": [1, 15], "bn": [1, 2], "nois": [1, 2, 3, 8, 14, 47, 50, 54, 80], "bandwidth": [1, 2, 3, 8, 12, 47, 50, 54, 64, 75, 76, 80, 81], "b_n": [1, 2, 3, 8, 9, 11, 14, 15, 47, 50, 54], "hz": [1, 2, 8, 9, 11, 14, 37, 38, 47, 50, 54, 64, 78], "bnt": [1, 3, 80], "normal": [1, 3, 8, 47, 50, 54, 64, 80, 81], "t": [1, 3, 8, 47, 50, 54, 64, 65, 78], "repres": [1, 10], "k0": [1, 4, 8, 18, 19, 50, 56, 57, 58], "gain": [1, 4, 5, 6, 7, 8, 18, 19, 31, 32, 39, 47, 48, 49, 50, 56, 57, 58, 64, 80], "k1": [1, 5, 47, 48, 80], "k2": [1, 6, 47, 49, 80], "kp": [1, 7, 8, 50], "omega_3db": [1, 12], "3": [1, 9, 11, 12, 15, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 81, 82, 83], "db": [1, 12, 14, 64, 81], "omega_": [1, 12], "textrm": [1, 12], "radian": [1, 12, 13, 14, 18, 19, 80], "omega_n": [1, 13, 80], "natur": [1, 13], "sampl": [1, 8, 16, 18, 19, 21, 23, 24, 28, 37, 38, 40, 44, 47, 50, 54, 56, 58, 59, 61, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 78, 80, 81], "rate": [1, 8, 16, 24, 27, 37, 38, 67, 68, 69, 72], "f_": [1, 8, 16, 37, 38, 64, 67, 68, 69, 72, 78, 79, 80, 81], "zeta": [1, 8, 17, 47, 50, 51], "damp": [1, 8, 17, 47, 50, 51, 80], "factor": [1, 8, 17, 47, 50, 51, 80], "properti": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 17, 20, 26, 29, 30, 34, 35, 39, 41, 42, 45, 46, 48, 49, 51, 53, 54, 57, 59, 60], "paramet": [8, 9, 11, 14, 19, 21, 23, 25, 27, 28, 32, 33, 36, 37, 38, 40, 44, 50, 52, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77], "where": [8, 47, 50, 54, 64, 79], "period": [8, 47, 50, 54], "second": [8, 9, 11, 15, 47, 50, 54, 64], "critic": [8, 17, 47, 50, 51, 80], "underdamp": [8, 17, 47, 50, 51], "overdamp": [8, 17, 47, 50, 51], "ted": [8, 50], "t_": [9, 11, 15, 27, 64, 81], "fl": [9, 11], "4": [9, 11, 38, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83], "delta": [9, 11, 31, 40, 70, 79], "f": [9, 11, 31, 37, 38, 64, 78, 79, 80, 81], "offset": [9, 11, 18, 19, 56, 58, 60, 80], "take": [9, 11, 15], "onto": [9, 11, 15], "equat": [9, 11, 12, 13, 14, 15, 31], "39": 9, "pl": [11, 15], "38": 11, "34": 12, "33": 13, "sigma_": 14, "theta_": 14, "n_0": 14, "carrier": 14, "densiti": [14, 81], "ratio": 14, "43": 14, "40": 15, "less": 17, "than": 17, "greater": 17, "note": [18, 31, 47, 56, 64], "increment": [18, 19, 21, 56, 58, 59, 61, 80], "v": [18, 56], "y": [18, 21, 23, 27, 31, 36, 47, 52, 56, 61, 63, 72, 80], "output": [18, 21, 23, 31, 32, 33, 40, 44, 47, 52, 56, 61, 63, 66, 70, 71, 77, 78, 79, 80], "complex": [18, 21, 23, 78, 79], "exponenti": [18, 21, 23, 78, 79], "constant": [18, 19, 47, 56, 58, 59, 79, 80], "accumul": [18, 19, 56, 58, 59, 80], "absolut": [18, 19, 56, 58, 60], "unit": [18, 31, 44, 47, 56, 58, 59, 60, 71, 75, 76, 79, 80], "adder": [18, 47, 56, 80], "process": [18, 21, 56, 61, 79, 80], "variabl": [18, 21, 56, 61, 65, 80], "reset": [18, 22, 24, 28, 31, 43, 47, 55, 56, 62], "forward": [18, 23, 56, 63], "us": [18, 20, 24, 25, 32, 33, 47, 53, 65, 66, 67, 70, 71, 77, 79, 81, 84], "theta": [19, 56, 58, 60], "vari": [21, 61], "number": [23, 37, 38, 40, 44, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77], "resampl": [24, 25, 26, 27, 28, 29, 30, 82, 83], "http": [24, 64], "wirelesspi": 24, "com": [24, 64], "fraction": [24, 28, 64, 78], "structur": 24, "stream": [24, 25, 28, 29, 31, 32, 33, 43, 45], "bool": [24, 25, 29, 31, 32, 33, 45], "fals": [24, 25, 31, 32, 33, 79, 81], "new": [24, 25], "given": [24, 27, 79], "r": [24, 27, 64, 75, 76, 79, 80, 81], "none": [24, 28, 47, 55, 66, 67, 70, 71, 77, 78], "mode": [24, 25, 28, 29, 31, 32, 33, 43, 45], "index": [24, 28], "indic": [24, 25, 29, 31, 32, 33, 45], "whether": [24, 25, 29, 31, 32, 33, 45], "tap": [24, 30, 31, 34, 35, 79], "In": [25, 29, 32, 33, 45, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "previou": [25, 28, 32, 33], "ar": [25, 32, 33, 38, 66, 67, 68, 69, 73, 78, 79, 80, 81, 84], "preserv": [25, 29, 32, 33, 45], "between": [25, 29, 32, 33, 45, 80], "call": [25, 29, 32, 33, 45], "vector": 28, "should": 28, "equal": 28, "three": [28, 78, 81], "If": [28, 66, 67, 70, 71, 72, 77], "wrapper": 31, "scipi": [31, 81], "lfilter": 31, "It": [31, 47], "support": 31, "one": [31, 64, 65, 67, 68, 69, 79, 81], "its": [31, 32, 79, 81], "feedforward": [31, 33, 35, 67, 68, 69, 70, 71, 74, 79], "coeffici": [31, 33, 67, 68, 69, 70, 71, 74, 79], "b_i": [31, 33, 35, 67, 68, 69, 70, 71, 74, 79], "feedback": [31, 33, 34, 67, 68, 69, 70, 71, 74, 79], "a_j": [31, 33, 34, 67, 68, 69, 70, 71, 74, 79], "These": [31, 73, 80], "differ": [31, 81], "a_0": 31, "left": [31, 64], "sum_": 31, "m": 31, "right": [31, 64], "sum": [31, 81], "limits_": 31, "classmethod": [31, 32], "zerospol": [31, 32, 67, 68, 69, 70, 71, 74, 79], "self": [31, 32], "from": [31, 32, 37, 38, 79, 80], "tupl": [31, 37, 38], "j2": [31, 37, 38], "pi": [31, 37, 38, 64, 67, 68, 69, 70, 71, 72, 74, 78, 79, 80], "frequency_response_log": [31, 38], "logarithm": [31, 38, 67, 68, 69, 79], "axi": [31, 38, 67, 68, 69, 72, 78], "100": [31, 40, 44, 67, 70, 71, 72, 78], "when": [31, 40, 44, 67, 68, 69, 70, 71, 78, 79], "u": [31, 44, 71, 79], "a_tap": [31, 34, 67, 68, 69, 70, 71, 74, 79, 80], "b_tap": [31, 35, 67, 68, 69, 70, 71, 74, 79, 80], "1024": [37, 38, 67, 68, 69, 81], "decad": [38, 67, 68, 69, 80], "plot": [38, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82], "space": 38, "can": [47, 64, 66, 79, 84], "track": 47, "cannot": 47, "howev": [47, 78], "chirp": 47, "ramp": 47, "underli": [47, 53], "puls": [64, 72, 75, 76, 82], "shape": [64, 72, 75, 76, 82], "product": [64, 81], "sym": [64, 81], "side": [64, 67, 68, 69, 79, 81], "symbol": [64, 75, 76, 81], "also": 64, "thought": [64, 84], "smaller": [64, 81], "valu": [64, 79], "produc": [64, 81], "wider": 64, "length": [64, 67, 70, 71, 75, 76, 78, 81], "must": [64, 75, 76], "even": [64, 75, 76], "amplitud": [64, 78, 80], "so": 64, "nomin": 64, "passband": 64, "ha": [64, 80, 81], "exp": [64, 67, 68, 69, 70, 71, 72, 74, 78, 79, 80], "relat": 64, "sqrt": [64, 80, 81], "ln": 64, "www": 64, "mathwork": 64, "help": 64, "ref": 64, "gaussdesign": 64, "html": 64, "onlinelibrari": 64, "wilei": 64, "doi": 64, "pdf": 64, "10": [64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81], "1002": 64, "9780470041956": 64, "app2": 64, "h_0p1": [64, 75, 76], "5": [64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 83], "h_0p2": 64, "h_0p3": 64, "plt": [64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81], "figur": [64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81], "figsiz": [64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81], "8": [64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81], "label": [64, 72, 75, 76, 78, 80, 81], "show": [64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81], "data": [65, 66, 77, 82], "displai": [65, 67, 68, 69], "each": 65, "consid": 65, "convert": 65, "line": 65, "string": 65, "contain": 65, "print": [65, 78, 79, 80], "quick": 65, "brown": 65, "fox": 65, "jump": 65, "over": 65, "lazi": 65, "dog": 65, "00000000": 65, "54": 65, "68": 65, "65": 65, "20": [65, 81], "71": 65, "75": [65, 80], "69": 65, "63": 65, "6b": 65, "62": 65, "72": 65, "6f": 65, "77": 65, "6e": 65, "00000010": 65, "66": 65, "78": 65, "6a": 65, "6d": 65, "70": [65, 81], "73": 65, "76": 65, "74": 65, "00000020": 65, "6c": 65, "61": 65, "7a": 65, "79": 65, "64": [65, 79], "67": 65, "he": 65, "6": [65, 67, 68, 69, 70, 71, 72, 74, 79, 80], "7": 65, "9": [65, 75, 76, 81, 83], "01": [65, 79, 80], "02": [65, 79, 80], "03": [65, 79], "04": [65, 79], "00000004": 65, "05": [65, 78, 79, 80], "06": 65, "07": 65, "08": 65, "00000008": 65, "09": 65, "0a": 65, "dtype": [66, 72, 77, 80], "dtypelik": [66, 77], "assum": [66, 77], "have": [66, 77], "most": [66, 77], "signific": [66, 77], "first": [66, 77], "enough": 66, "fill": 66, "last": 66, "remain": 66, "type": [66, 68, 69, 77], "smallest": 66, "unsign": 66, "integ": 66, "hold": 66, "out": [66, 73, 77], "uint8": [66, 77], "n_time": [67, 79], "n_freq": 67, "x_axi": [67, 68, 69, 79, 80], "two": [67, 68, 69, 78, 79], "log": [67, 68, 69, 79, 80], "For": [67, 68, 69, 70, 71, 74], "fir": [67, 68, 69, 70, 71, 74], "set": [67, 68, 69, 70, 71, 73, 74, 79], "n_t": 67, "domain": [67, 72], "n_f": 67, "scale": [67, 68, 69, 79], "option": [67, 68, 69], "spectrum": [67, 68, 69], "h_srrc": [67, 68, 69, 70, 71, 72], "np": [67, 68, 69, 70, 71, 72, 74, 78, 79, 80, 81], "1j": [67, 68, 69, 70, 71, 72, 74, 78, 79, 80], "conj": [67, 68, 69, 70, 71, 74, 79, 80], "30": [67, 70, 71, 79], "liter": [68, 69], "addit": [68, 69, 70, 71, 72, 74], "keyword": [68, 69, 70, 71, 72, 74, 79], "argument": [68, 69, 70, 71, 72, 74, 79], "pass": [68, 69, 70, 71, 72, 74, 79], "pyplot": [68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81], "ylim": [69, 80, 81], "48": 69, "52": 69, "bpsk": 72, "1000": 72, "symbol_map": 72, "random": 72, "randint": 72, "convolv": 72, "10e3": 72, "titl": [72, 78, 80, 81], "tight_layout": [72, 80, 81], "qpsk": 72, "complex64": [72, 80], "style": 73, "mai": [73, 79], "revert": 73, "rcdefault": 73, "follow": [73, 80], "_rc_param": 73, "rc_param": 73, "ax": [73, 78, 80], "grid": [73, 78, 80, 81], "true": 73, "autolayout": 73, "max_open_warn": 73, "titleweight": 73, "bold": 73, "linestyl": [73, 78, 80, 81], "excess": [75, 76, 81], "le": [75, 76], "energi": [75, 76], "h_0p5": [75, 76], "h_0p9": [75, 76], "numpi": [77, 78, 79, 80, 81], "import": [78, 79, 80, 81], "config": [78, 79, 80, 81], "inlinebackend": [78, 79, 80, 81], "print_figure_kwarg": [78, 79, 80, 81], "facecolor": [78, 79, 80, 81], "w": [78, 79, 80, 81], "widget": [78, 79, 80, 81], "color": [78, 80, 81], "prop_cycl": [78, 80], "by_kei": [78, 80], "continu": 78, "freq": [78, 80], "tx": 78, "arang": [78, 80], "decai": [78, 79], "real": [78, 79, 80], "marker": [78, 79], "o": 78, "fillstyl": 78, "imag": 78, "xlabel": [78, 80, 81], "ylabel": [78, 80, 81], "origin": 78, "legend": [78, 80, 81], "which": [78, 80, 81], "both": [78, 80], "now": 78, "equival": 78, "accomplish": 78, "librari": [78, 82, 84], "def": 78, "resample_sign": 78, "new_sample_r": 78, "ty": 78, "size": [78, 80, 81], "notic": [78, 81], "everi": 78, "200": 78, "four": 78, "400": 78, "other": [78, 84], "appear": 78, "50": 78, "fourth": 78, "25": [78, 80, 81], "roughli": 78, "often": 78, "do": 78, "align": 78, "315": 78, "32": 78, "user": 79, "altern": 79, "below": 79, "conjug": 79, "0x000002214b040a88": 79, "47820725": 79, "comput": [79, 80, 81], "method": 79, "00000000e": 79, "00": 79, "78207252e": 79, "58172329e": 79, "10862468e": 79, "86109590e": 79, "21565653e": 79, "01140214e": 79, "57286400e": 79, "67772160e": 79, "47338728e": 79, "10422993e": 79, "89312837e": 79, "12240078e": 79, "03953322e": 79, "69685122e": 79, "63882791e": 79, "81474977e": 79, "47193366e": 79, "85259041e": 79, "15647504e": 79, "23851924e": 79, "42176895e": 79, "84684395e": 79, "42721858e": 79, "72236648e": 79, "14721649e": 79, "10813095e": 79, "94024315e": 79, "78877688e": 79, "74077567e": 79, "conveni": 79, "87820725": 79, "53637958": 79, "94724205": 79, "13335164": 79, "1455082": 79, "04436799": 79, "88708159": 79, "71930943": 79, "5719707": 79, "46154771": 79, "39261642": 79, "36139242": 79, "35935288": 79, "3763214": 79, "40270968": 79, "43085717": 79, "45557651": 79, "47410241": 79, "48566716": 79, "49090568": 79, "49124786": 79, "48840102": 79, "4839738": 79, "47925143": 79, "47510421": 79, "47199608": 79, "47005584": 79, "46917696": 79, "46911955": 79, "denomin": 79, "73910363": 79, "30614675j": 79, "plane": 79, "evalu": 79, "shift": 79, "envelop": 79, "through": [79, 80], "easili": 79, "here": 79, "linspac": 79, "endpoint": 79, "concaten": 79, "0x000002214dc574c8": 79, "lyon": 79, "understand": 79, "3rd": 79, "edit": 79, "section": [79, 80], "insid": 79, "circl": 79, "sinusoid": 79, "outsid": 79, "unstabl": 79, "increas": 79, "configur": 80, "0x00000290f1ce3488": 80, "theta_0": 80, "phase_error": 80, "measur": 80, "freq_estim": 80, "estim": 80, "rang": 80, "subplot": 80, "suptitl": 80, "ones": 80, "angl": 80, "part": 80, "unwrap": 80, "system": 80, "avail": 80, "500": 80, "rf": 80, "xlim": [80, 81], "001": 80, "005": 80, "b_nt": 80, "0005": 80, "00001": 80, "0125": 80, "015": 80, "0175": 80, "t_lock": 80, "rectangular": 81, "rect": 81, "achiev": 81, "rc_0p1": 81, "rc_0p5": 81, "rc_0p9": 81, "k": 81, "nyquist": 81, "mean": 81, "adjac": 81, "specif": 81, "pm": 81, "roll": 81, "60": 81, "total": 81, "nearli": 81, "compar": 81, "null": 81, "while": 81, "small": 81, "lobe": 81, "much": 81, "higher": 81, "power": 81, "spectral": 81, "h_rect": 81, "freqz": 81, "worn": 81, "whole": 81, "h_rc_0p1": 81, "h_rc_0p5": 81, "h_rc_0p9": 81, "rel": 81, "main": 81, "p_rect": 81, "log10": 81, "cumsum": 81, "ab": 81, "p_rc_0p1": 81, "p_rc_0p5": 81, "p_rc_0p9": 81, "One": 81, "within": 81, "variou": 81, "srrc_0p1": 81, "srrc_0p5": 81, "srrc_0p9": 81, "therefor": 81, "similar": 81, "significantli": 81, "due": 81, "being": 81, "h_srrc_0p1": 81, "h_srrc_0p5": 81, "h_srrc_0p9": 81, "p_srrc_0p1": 81, "p_srrc_0p5": 81, "p_srrc_0p9": 81, "gauss_0p1": 81, "gauss_0p2": 81, "gauss_0p3": 81, "python": 82, "packag": 82, "softwar": 82, "radio": 82, "applic": 82, "manipul": 82, "util": 82, "releas": 83, "juli": 83, "2023": 83, "ad": 83, "matt": 83, "hostett": 83, "mhostett": 83, "semant": 84, "major": 84, "minor": 84, "patch": 84, "introduc": 84, "api": 84, "chang": 84, "featur": 84, "add": 84, "backward": 84, "compat": 84, "make": 84, "bug": 84, "fix": 84, "befor": 84, "There": 84, "guarante": 84, "them": 84, "thei": 84}, "objects": {"": [[0, 0, 0, 1, "sdr", ""]], "sdr": [[1, 1, 1, "", "ClosedLoopPLL", "A class that defines the performance of a closed-loop PLL."], [18, 1, 1, "", "DDS", "Implements a direct digital synthesizer (DDS)."], [24, 1, 1, "", "FarrowResampler", "Implements a cubic Farrow arbitrary resampler."], [31, 1, 1, "", "IIR", "Implements an infinite impulse response (IIR) filter."], [47, 1, 1, "", "LoopFilter", "Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."], [56, 1, 1, "", "NCO", "Implements a numerically-controlled oscillator (NCO)."], [64, 5, 1, "", "gaussian", "Returns a Gaussian pulse shape."], [65, 5, 1, "", "hexdump", "Returns a hexdump of the specified data."], [66, 5, 1, "", "pack", "Packs a binary array into an array with multiple bits per element."], [75, 5, 1, "", "raised_cosine", "Returns a raised cosine (RC) pulse shape."], [76, 5, 1, "", "root_raised_cosine", "Returns a square root raised cosine (SRRC) pulse shape."], [77, 5, 1, "", "unpack", "Unpacks an array with multiple bits per element into a binary array."]], "sdr.ClosedLoopPLL": [[2, 2, 1, "", "Bn", "The noise bandwidth $B_n$ of the PLL in Hz."], [3, 2, 1, "", "BnT", "The normalized noise bandwidth $B_n T$ of the PLL."], [4, 2, 1, "", "K0", "The NCO gain $K_0$."], [5, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [6, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [7, 2, 1, "", "Kp", "The phase error detector (PED) gain $K_p$."], [8, 3, 1, "", "__init__", "Creates a closed-loop PLL analysis object."], [9, 3, 1, "", "frequency_lock_time", "Returns the frequency lock time of the PLL."], [10, 2, 1, "", "iir", "The IIR filter that represents the closed-loop transfer function of the PLL."], [11, 3, 1, "", "lock_time", "Returns the lock time of the PLL."], [12, 2, 1, "", "omega_3dB", "The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."], [13, 2, 1, "", "omega_n", "The natural frequency $omega_n$ of the PLL in radians/s."], [14, 3, 1, "", "phase_error_variance", "Returns the variance of the phase error of the PLL in steady state."], [15, 3, 1, "", "phase_lock_time", "Returns the phase lock time of the PLL."], [16, 2, 1, "", "sample_rate", "The sample rate $f_s$ of the PLL in samples/s."], [17, 2, 1, "", "zeta", "The damping factor $zeta$ of the PLL."]], "sdr.ClosedLoopPLL.__init__": [[8, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [8, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [8, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [8, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [8, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the PLL in Hz."]], "sdr.ClosedLoopPLL.frequency_lock_time": [[9, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.lock_time": [[11, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.phase_error_variance": [[14, 4, 2, "p-cn0", "cn0", "The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]], "sdr.DDS": [[19, 3, 1, "", "__init__", "Creates a direct digital synthesizer (DDS)."], [20, 2, 1, "", "nco", "The numerically-controlled oscillator (NCO) used by the DDS."], [21, 3, 1, "", "process", "Steps the DDS with the variable phase increment signal $x[n]$."], [22, 3, 1, "", "reset", "Resets the DDS."], [23, 3, 1, "", "step", "Steps the DDS forward by $N$ samples."]], "sdr.DDS.__init__": [[19, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [19, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in radians/sample."], [19, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in radians."]], "sdr.DDS.process": [[21, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the DDS."]], "sdr.DDS.step": [[23, 4, 2, "p-N", "N", "The number of samples $N$ to step the DDS forward."]], "sdr.FarrowResampler": [[25, 3, 1, "", "__init__", "Creates a new Farrow arbitrary resampler."], [26, 2, 1, "", "order", "The order of the filter."], [27, 3, 1, "", "resample", "Resamples the input signal $x[n]$ by the given arbitrary rate $r$."], [28, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state and fractional sample index."], [29, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [30, 2, 1, "", "taps", "The Farrow filter taps."]], "sdr.FarrowResampler.__init__": [[25, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to resample()."]], "sdr.FarrowResampler.resample": [[27, 4, 2, "p-rate", "rate", "The resampling rate $r$."], [27, 4, 2, "p-x", "x", "The input signal $x[n] = x(n T_s)$."]], "sdr.FarrowResampler.reset": [[28, 4, 2, "p-state", "state", "The filter state to reset to. The state vector should equal the previous three inputs. If None, the filter state will be reset to zero."]], "sdr.IIR": [[32, 3, 1, "", "ZerosPoles", "Creates an IIR filter from its zeros, poles, and gain."], [33, 3, 1, "", "__init__", "Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."], [34, 2, 1, "", "a_taps", "The feedback taps $a_j$."], [35, 2, 1, "", "b_taps", "The feedforward taps $b_i$."], [36, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the IIR filter."], [37, 3, 1, "", "frequency_response", "Returns the frequency response $H(e^{j2 pi f})$ of the IIR filter."], [38, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(e^{j2 pi f})$ of the IIR filter on a logarithmic frequency axis"], [39, 2, 1, "", "gain", "The gain of the IIR filter."], [40, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the IIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [41, 2, 1, "", "order", "The order of the IIR filter, $N - 1$."], [42, 2, 1, "", "poles", "The poles of the IIR filter."], [43, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [44, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the IIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [45, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [46, 2, 1, "", "zeros", "The zeros of the IIR filter."]], "sdr.IIR.ZerosPoles": [[32, 4, 2, "p-gain", "gain", "The gain of the transfer function."], [32, 4, 2, "p-poles", "poles", "The poles of the transfer function."], [32, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."], [32, 4, 2, "p-zeros", "zeros", "The zeros of the transfer function."]], "sdr.IIR.__init__": [[33, 4, 2, "p-a", "a", "The feedback coefficients $a_j$."], [33, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [33, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."]], "sdr.IIR.filter": [[36, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.IIR.frequency_response": [[37, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [37, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.frequency_response_log": [[38, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [38, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [38, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.impulse_response": [[40, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.IIR.step_response": [[44, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.LoopFilter": [[48, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [49, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [50, 3, 1, "", "__init__", "Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."], [51, 2, 1, "", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [52, 3, 1, "", "filter", "Filters the input signal $x[n]$."], [53, 2, 1, "", "iir", "The underlying IIR filter used to implement the loop filter."], [54, 2, 1, "", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [55, 3, 1, "", "reset", "Resets the loop filter."]], "sdr.LoopFilter.__init__": [[50, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [50, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [50, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [50, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]], "sdr.LoopFilter.filter": [[52, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.NCO": [[57, 2, 1, "", "K0", "The NCO gain $K_0$."], [58, 3, 1, "", "__init__", "Creates a numerically-controlled oscillator (NCO)."], [59, 2, 1, "", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [60, 2, 1, "", "offset", "The absolute offset $theta$ of the NCO in units."], [61, 3, 1, "", "process", "Steps the NCO with the variable-increment signal $x[n]$."], [62, 3, 1, "", "reset", "Resets the NCO."], [63, 3, 1, "", "step", "Steps the NCO forward by $N$ samples."]], "sdr.NCO.__init__": [[58, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [58, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [58, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in units."]], "sdr.NCO.process": [[61, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the NCO."]], "sdr.NCO.step": [[63, 4, 2, "p-N", "N", "The number of samples $N$ to step the NCO forward."]], "sdr.gaussian": [[64, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [64, 4, 2, "p-sps", "sps", "The number of samples per symbol."], [64, 4, 2, "p-time_bandwidth", "time_bandwidth", "The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds. The time-bandwidth product can also be thought of as the fractional bandwidth $B / f_{sym}$. Smaller values produce wider pulses."]], "sdr.hexdump": [[65, 4, 2, "p-data", "data", "The data to display. Each element is considered one byte. Use sdr.pack() or sdr.unpack() to convert data with variable bits per element."], [65, 4, 2, "p-width", "width", "The number of bytes per line."]], "sdr.pack": [[66, 4, 2, "p-bpe", "bpe", "The number of bits per element in the output array."], [66, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, the smallest unsigned integer dtype that can hold bpe bits is used."], [66, 4, 2, "p-x", "x", "The input binary array with 1 bit per element."]], "sdr.plot": [[67, 5, 1, "", "filter", "Plots the frequency response $H(e^{jomega})$, impulse response $h[n]$, step response $s[n]$, and zeros and poles of the filter."], [68, 5, 1, "", "frequency_response", "Plots the frequency response $H(e^{jomega})$ of the filter."], [69, 5, 1, "", "group_delay", "Plots the group delay $tau_g(omega)$ of the IIR filter."], [70, 5, 1, "", "impulse_response", "Plots the impulse response $h[n]$ of a filter."], [71, 5, 1, "", "step_response", "Plots the step response $s[n]$ of a filter."], [72, 5, 1, "", "time_domain", "Plots a time-domain signal $x[n]$."], [73, 5, 1, "", "use_style", "Applies sdr's default matplotlib rcParams."], [74, 5, 1, "", "zeros_poles", "Plots the zeros and poles of the filter."]], "sdr.plot.filter": [[67, 4, 2, "p-N_freq", "N_freq", "The number of samples $N_f$ in the frequency response."], [67, 4, 2, "p-N_time", "N_time", "The number of samples $N_t$ in the time domain. If None, the length of b is used for FIR filters and 100 for IIR filters."], [67, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [67, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [67, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [67, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [67, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.frequency_response": [[68, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [68, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [68, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [68, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [68, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [68, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.group_delay": [[69, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [69, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [69, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [69, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [69, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [69, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.impulse_response": [[70, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [70, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [70, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.step_response": [[71, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [71, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [71, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.time_domain": [[72, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s. If the sample rate is 1, the x-axis will be label as \"Samples\"."], [72, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."]], "sdr.plot.zeros_poles": [[74, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [74, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.raised_cosine": [[75, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [75, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [75, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.root_raised_cosine": [[76, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [76, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [76, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.unpack": [[77, 4, 2, "p-bpe", "bpe", "The number of bits per element in the input array."], [77, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, numpy.uint8 is used."], [77, 4, 2, "p-x", "x", "The input array with bpe bits per element."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:parameter", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"]}, "titleterms": {"sdr": [0, 82], "filter": [0, 79, 80], "puls": [0, 81], "shape": [0, 81], "resampl": [0, 78], "phase": [0, 80], "time": [0, 80], "lock": [0, 80], "loop": [0, 80], "data": 0, "manipul": 0, "plot": 0, "configur": 0, "domain": [0, 80], "frequenc": [0, 79, 80], "analysi": 0, "note": 1, "constructor": [1, 18, 24, 31, 47, 56], "method": [1, 18, 24, 31, 47, 56], "properti": [1, 18, 24, 31, 47, 56], "see": [18, 56, 67, 68, 69, 70, 71, 74], "also": [18, 56, 67, 68, 69, 70, 71, 74], "farrow": 78, "arbitrari": 78, "construct": 78, "an": [78, 79], "input": 78, "signal": 78, "x": 78, "n": [78, 79], "t_": 78, "rate": 78, "r": 78, "y": 78, "frac": 78, "upsampl": 78, "integ": 78, "downsampl": 78, "irrat": 78, "iir": 79, "creat": 79, "examin": 79, "impuls": 79, "respons": [79, 80], "h": 79, "step": [79, 80], "": 79, "zero": 79, "pole": 79, "omega": 79, "group": 79, "delai": 79, "tau_g": 79, "fulli": 79, "analyz": [79, 80], "digit": 79, "stabil": 79, "design": 80, "proport": 80, "plu": 80, "integr": 80, "ppi": 80, "implement": 80, "pll": 80, "close": 80, "perform": 80, "compar": 80, "across": 80, "zeta": 80, "b_n": 80, "t": 80, "rais": 81, "cosin": 81, "squar": 81, "root": 81, "gaussian": 81, "featur": 82, "v0": 83, "0": 83, "1": 83, "chang": 83, "contributor": 83, "version": 84, "alpha": 84, "releas": 84, "beta": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"sdr": [[0, "sdr"], [82, "sdr"]], "Filtering": [[0, "filtering"]], "Pulse shaping": [[0, "pulse-shaping"]], "Resampling": [[0, "resampling"]], "Phase/time-locked loops": [[0, "phase-time-locked-loops"]], "Data manipulation": [[0, "data-manipulation"]], "Plotting": [[0, "plotting"]], "Configuration": [[0, "configuration"]], "Time-domain": [[0, "time-domain"]], "Frequency-domain": [[0, "frequency-domain"]], "Filter analysis": [[0, "filter-analysis"]], "Note": [[1, null]], "Constructors": [[1, "constructors"], [18, "constructors"], [24, "constructors"], [31, "constructors"], [47, "constructors"], [56, "constructors"]], "Methods": [[1, "methods"], [18, "methods"], [24, "methods"], [31, "methods"], [47, "methods"], [56, "methods"]], "Properties": [[1, "properties"], [18, "properties"], [24, "properties"], [31, "properties"], [47, "properties"], [56, "properties"]], "See also": [[18, null], [56, null], [67, null], [68, null], [69, null], [70, null], [71, null], [74, null]], "Farrow arbitrary resampler": [[78, "farrow-arbitrary-resampler"]], "Construct an input signal, x[n] = x(n T_s)": [[78, "construct-an-input-signal-x-n-x-n-t-s"]], "Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})": [[78, "resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]], "Upsample the signal by an integer rate": [[78, "upsample-the-signal-by-an-integer-rate"]], "Downsample the signal by an integer rate": [[78, "downsample-the-signal-by-an-integer-rate"]], "Upsample by an irrational rate": [[78, "upsample-by-an-irrational-rate"]], "Downsample by an irrational rate": [[78, "downsample-by-an-irrational-rate"]], "IIR filters": [[79, "iir-filters"]], "Create an IIR filter": [[79, "create-an-iir-filter"]], "Examine the impulse response, h[n]": [[79, "examine-the-impulse-response-h-n"]], "Examine the step response, s[n]": [[79, "examine-the-step-response-s-n"]], "Examine the zeros and poles": [[79, "examine-the-zeros-and-poles"]], "Examine the frequency response, H(\\omega)": [[79, "examine-the-frequency-response-h-omega"]], "Examine the group delay, \\tau_g(\\omega)": [[79, "examine-the-group-delay-tau-g-omega"]], "Fully analyze an IIR filter": [[79, "fully-analyze-an-iir-filter"]], "Poles and digital filter stability": [[79, "poles-and-digital-filter-stability"]], "Phase-locked loops": [[80, "phase-locked-loops"]], "Design a proportional-plus-integrator (PPI) loop filter": [[80, "design-a-proportional-plus-integrator-ppi-loop-filter"]], "Implement a PLL in the phase domain": [[80, "implement-a-pll-in-the-phase-domain"]], "Implement a PLL in the time domain": [[80, "implement-a-pll-in-the-time-domain"]], "Analyze PLL closed-loop performance": [[80, "analyze-pll-closed-loop-performance"]], "Compare step and frequency response across \\zeta": [[80, "compare-step-and-frequency-response-across-zeta"]], "Compare step and frequency response across B_n T": [[80, "compare-step-and-frequency-response-across-b-n-t"]], "Compare lock time across B_n T": [[80, "compare-lock-time-across-b-n-t"]], "Pulse shapes": [[81, "pulse-shapes"]], "Raised cosine": [[81, "raised-cosine"]], "Square-root raised cosine": [[81, "square-root-raised-cosine"]], "Gaussian": [[81, "gaussian"]], "Features": [[82, "features"]], "v0.0": [[83, "v0-0"]], "v0.0.1": [[83, "v0-0-1"]], "Changes": [[83, "changes"]], "Contributors": [[83, "contributors"]], "Versioning": [[84, "versioning"]], "Alpha releases": [[84, "alpha-releases"]], "Beta releases": [[84, "beta-releases"]]}, "indexentries": {"module": [[0, "module-sdr"]], "sdr": [[0, "module-sdr"]]}, "docurls": ["api/", "api/sdr.ClosedLoopPLL/", "api/sdr.ClosedLoopPLL.Bn/", "api/sdr.ClosedLoopPLL.BnT/", "api/sdr.ClosedLoopPLL.K0/", "api/sdr.ClosedLoopPLL.K1/", "api/sdr.ClosedLoopPLL.K2/", "api/sdr.ClosedLoopPLL.Kp/", "api/sdr.ClosedLoopPLL.__init__/", "api/sdr.ClosedLoopPLL.frequency_lock_time/", "api/sdr.ClosedLoopPLL.iir/", "api/sdr.ClosedLoopPLL.lock_time/", "api/sdr.ClosedLoopPLL.omega_3dB/", "api/sdr.ClosedLoopPLL.omega_n/", "api/sdr.ClosedLoopPLL.phase_error_variance/", "api/sdr.ClosedLoopPLL.phase_lock_time/", "api/sdr.ClosedLoopPLL.sample_rate/", "api/sdr.ClosedLoopPLL.zeta/", "api/sdr.DDS/", "api/sdr.DDS.__init__/", "api/sdr.DDS.nco/", "api/sdr.DDS.process/", "api/sdr.DDS.reset/", "api/sdr.DDS.step/", "api/sdr.FarrowResampler/", "api/sdr.FarrowResampler.__init__/", "api/sdr.FarrowResampler.order/", "api/sdr.FarrowResampler.resample/", "api/sdr.FarrowResampler.reset/", "api/sdr.FarrowResampler.streaming/", "api/sdr.FarrowResampler.taps/", "api/sdr.IIR/", "api/sdr.IIR.ZerosPoles/", "api/sdr.IIR.__init__/", "api/sdr.IIR.a_taps/", "api/sdr.IIR.b_taps/", "api/sdr.IIR.filter/", "api/sdr.IIR.frequency_response/", "api/sdr.IIR.frequency_response_log/", "api/sdr.IIR.gain/", "api/sdr.IIR.impulse_response/", "api/sdr.IIR.order/", "api/sdr.IIR.poles/", "api/sdr.IIR.reset/", "api/sdr.IIR.step_response/", "api/sdr.IIR.streaming/", "api/sdr.IIR.zeros/", "api/sdr.LoopFilter/", "api/sdr.LoopFilter.K1/", "api/sdr.LoopFilter.K2/", "api/sdr.LoopFilter.__init__/", "api/sdr.LoopFilter.damping_factor/", "api/sdr.LoopFilter.filter/", "api/sdr.LoopFilter.iir/", "api/sdr.LoopFilter.noise_bandwidth/", "api/sdr.LoopFilter.reset/", "api/sdr.NCO/", "api/sdr.NCO.K0/", "api/sdr.NCO.__init__/", "api/sdr.NCO.increment/", "api/sdr.NCO.offset/", "api/sdr.NCO.process/", "api/sdr.NCO.reset/", "api/sdr.NCO.step/", "api/sdr.gaussian/", "api/sdr.hexdump/", "api/sdr.pack/", "api/sdr.plot.filter/", "api/sdr.plot.frequency_response/", "api/sdr.plot.group_delay/", "api/sdr.plot.impulse_response/", "api/sdr.plot.step_response/", "api/sdr.plot.time_domain/", "api/sdr.plot.use_style/", "api/sdr.plot.zeros_poles/", "api/sdr.raised_cosine/", "api/sdr.root_raised_cosine/", "api/sdr.unpack/", "examples/farrow-resampler/", "examples/iir-filter/", "examples/phase-locked-loop/", "examples/pulse-shapes/", "", "release-notes/v0.0/", "release-notes/versioning/"]})