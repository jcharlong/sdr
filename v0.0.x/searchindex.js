Search.setIndex({"titles": ["sdr", "sdr.ClosedLoopPLL", "sdr.ClosedLoopPLL.Bn", "sdr.ClosedLoopPLL.BnT", "sdr.ClosedLoopPLL.K0", "sdr.ClosedLoopPLL.K1", "sdr.ClosedLoopPLL.K2", "sdr.ClosedLoopPLL.Kp", "sdr.ClosedLoopPLL.__init__", "sdr.ClosedLoopPLL.frequency_lock_time", "sdr.ClosedLoopPLL.iir", "sdr.ClosedLoopPLL.lock_time", "sdr.ClosedLoopPLL.omega_3dB", "sdr.ClosedLoopPLL.omega_n", "sdr.ClosedLoopPLL.phase_error_variance", "sdr.ClosedLoopPLL.phase_lock_time", "sdr.ClosedLoopPLL.sample_rate", "sdr.ClosedLoopPLL.zeta", "sdr.DDS", "sdr.DDS.__init__", "sdr.DDS.nco", "sdr.DDS.process", "sdr.DDS.reset", "sdr.DDS.step", "sdr.FIR", "sdr.FIR.__init__", "sdr.FIR.delay", "sdr.FIR.filter", "sdr.FIR.frequency_response", "sdr.FIR.frequency_response_log", "sdr.FIR.impulse_response", "sdr.FIR.order", "sdr.FIR.reset", "sdr.FIR.step_response", "sdr.FIR.streaming", "sdr.FIR.taps", "sdr.FarrowResampler", "sdr.FarrowResampler.__init__", "sdr.FarrowResampler.order", "sdr.FarrowResampler.resample", "sdr.FarrowResampler.reset", "sdr.FarrowResampler.streaming", "sdr.FarrowResampler.taps", "sdr.IIR", "sdr.IIR.ZerosPoles", "sdr.IIR.__init__", "sdr.IIR.a_taps", "sdr.IIR.b_taps", "sdr.IIR.filter", "sdr.IIR.frequency_response", "sdr.IIR.frequency_response_log", "sdr.IIR.gain", "sdr.IIR.impulse_response", "sdr.IIR.order", "sdr.IIR.poles", "sdr.IIR.reset", "sdr.IIR.step_response", "sdr.IIR.streaming", "sdr.IIR.zeros", "sdr.LoopFilter", "sdr.LoopFilter.K1", "sdr.LoopFilter.K2", "sdr.LoopFilter.__init__", "sdr.LoopFilter.damping_factor", "sdr.LoopFilter.filter", "sdr.LoopFilter.iir", "sdr.LoopFilter.noise_bandwidth", "sdr.LoopFilter.reset", "sdr.NCO", "sdr.NCO.K0", "sdr.NCO.__init__", "sdr.NCO.increment", "sdr.NCO.offset", "sdr.NCO.process", "sdr.NCO.reset", "sdr.NCO.step", "sdr.average_power", "sdr.awgn", "sdr.crest_factor", "sdr.gaussian", "sdr.hexdump", "sdr.pack", "sdr.papr", "sdr.peak_power", "sdr.peak_voltage", "sdr.plot.filter", "sdr.plot.frequency_response", "sdr.plot.group_delay", "sdr.plot.impulse_response", "sdr.plot.periodogram", "sdr.plot.spectrogram", "sdr.plot.step_response", "sdr.plot.time_domain", "sdr.plot.use_style", "sdr.plot.zeros_poles", "sdr.raised_cosine", "sdr.rms_voltage", "sdr.root_raised_cosine", "sdr.unpack", "Farrow arbitrary resampler", "FIR filters", "IIR filters", "Peak-to-average power", "Phase-locked loops", "Pulse shapes", "sdr", "v0.0", "Versioning"], "terms": {"class": [0, 1, 18, 24, 36, 43, 59, 68, 100, 101], "fir": [0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 85, 86, 87, 88, 91, 94, 105, 106], "implement": [0, 18, 24, 36, 43, 59, 65, 68, 99], "finit": [0, 24, 106], "impuls": [0, 24, 30, 43, 52, 79, 85, 88, 92, 102, 104, 106], "respons": [0, 24, 28, 29, 30, 33, 43, 49, 50, 52, 56, 79, 85, 86, 87, 88, 91, 104, 106], "iir": [0, 1, 10, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 85, 86, 87, 88, 91, 94, 100, 103, 105, 106], "an": [0, 24, 30, 43, 44, 45, 52, 81, 88, 98, 105], "infinit": [0, 43, 106], "gaussian": [0, 77, 79, 105, 106], "time_bandwidth": [0, 79], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 36, 39, 43, 44, 49, 50, 51, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 92, 95, 96, 97], "span": [0, 79, 95, 97, 102, 104], "int": [0, 18, 23, 24, 26, 28, 29, 30, 31, 33, 36, 38, 43, 49, 50, 52, 53, 56, 68, 75, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98], "sp": [0, 79, 95, 97, 102, 104], "ndarrai": [0, 18, 21, 23, 24, 27, 28, 29, 30, 33, 35, 36, 39, 42, 43, 46, 47, 48, 49, 50, 52, 54, 56, 58, 59, 64, 68, 73, 75, 77, 79, 81, 95, 97, 98], "return": [0, 1, 9, 11, 14, 15, 21, 23, 24, 27, 28, 29, 30, 33, 39, 43, 48, 49, 50, 52, 56, 64, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 95, 96, 97, 98, 100, 101], "raised_cosin": [0, 95, 104, 105, 106], "alpha": [0, 79, 93, 95, 97, 102, 104], "rais": [0, 92, 95, 97, 100], "cosin": [0, 92, 95, 97, 100], "rc": [0, 95], "root_raised_cosin": [0, 85, 86, 87, 88, 91, 92, 94, 97, 100, 102, 104, 105, 106], "squar": [0, 92, 96, 97, 100], "root": [0, 92, 96, 97, 100], "srrc": [0, 92, 97, 102], "farrowresampl": [0, 36, 37, 38, 39, 40, 41, 42, 99, 105, 106], "cubic": [0, 36], "farrow": [0, 36, 37, 38, 39, 40, 41, 42, 106], "arbitrari": [0, 36, 37, 38, 39, 40, 41, 42, 105, 106], "closedlooppl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 103, 105, 106], "A": [0, 1, 9, 11, 12, 13, 14, 15, 17, 24, 59, 80, 95, 97, 103], "defin": [0, 1, 24, 43, 77, 79, 101, 105], "perform": [0, 1, 100, 101, 105], "close": [0, 1, 8, 10, 106], "pll": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 106], "dd": [0, 18, 19, 20, 21, 22, 23, 68, 103, 105, 106], "direct": [0, 18, 19, 103, 106], "digit": [0, 1, 9, 11, 12, 13, 14, 15, 18, 19, 59, 95, 97, 103, 105, 106], "synthes": [0, 18, 19, 103, 106], "loopfilt": [0, 59, 60, 61, 62, 63, 64, 65, 66, 67, 103, 105, 106], "2nd": [0, 1, 59, 62, 103, 106], "order": [0, 1, 24, 31, 36, 38, 43, 53, 59, 62, 79, 95, 97, 103, 106], "proport": [0, 1, 5, 59, 60, 62, 106], "plu": [0, 1, 59, 62, 106], "integr": [0, 1, 6, 59, 61, 62, 101, 106], "ppi": [0, 59, 62], "nco": [0, 1, 4, 8, 18, 19, 20, 62, 68, 69, 70, 71, 72, 73, 74, 75, 103, 105, 106], "numer": [0, 1, 18, 20, 68, 70, 101, 103, 106], "control": [0, 1, 18, 20, 68, 70, 103, 106], "oscil": [0, 1, 18, 20, 68, 70, 103, 106], "awgn": [0, 77, 105], "x": [0, 1, 18, 21, 24, 27, 36, 39, 43, 48, 59, 64, 68, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 96, 98, 102, 103, 107], "arraylik": [0, 18, 21, 24, 25, 27, 36, 39, 40, 43, 44, 45, 48, 59, 64, 68, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 98], "snr": [0, 77], "none": [0, 24, 30, 33, 36, 40, 59, 67, 77, 81, 85, 88, 89, 90, 91, 98, 99], "add": [0, 77, 107], "addit": [0, 77, 86, 87, 88, 89, 90, 91, 92, 94], "white": [0, 77], "nois": [0, 1, 2, 3, 8, 14, 59, 62, 66, 77, 90, 103], "signal": [0, 1, 9, 11, 14, 15, 18, 21, 24, 27, 36, 39, 43, 48, 59, 64, 68, 73, 75, 76, 77, 78, 79, 82, 83, 84, 89, 90, 92, 96, 100, 101, 102, 103, 104], "n": [0, 1, 18, 21, 23, 24, 27, 28, 29, 30, 31, 33, 36, 39, 43, 48, 49, 50, 52, 53, 56, 59, 64, 68, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 103, 104], "average_pow": [0, 76, 82, 105], "averag": [0, 76, 77, 82, 89], "power": [0, 76, 77, 82, 83, 89, 104], "crest_factor": [0, 78, 82, 105, 106], "crest": [0, 78], "factor": [0, 1, 8, 17, 59, 62, 63, 78, 103], "papr": [0, 82, 102, 105, 106], "peak": [0, 78, 82, 83, 84], "ratio": [0, 14, 77, 82], "peak_pow": [0, 82, 83, 105], "peak_voltag": [0, 78, 84, 105], "voltag": [0, 84, 96], "rms_voltag": [0, 78, 96, 105], "mean": [0, 89, 96, 104], "rm": [0, 78, 96], "hexdump": [0, 80, 105, 106], "byte": [0, 80], "width": [0, 80], "16": [0, 80, 106], "str": [0, 80, 89, 90], "specifi": [0, 77, 80, 100, 101], "pack": [0, 80, 81, 105, 106], "bpe": [0, 81, 98], "binari": [0, 81, 98], "arrai": [0, 81, 92, 98, 101, 102], "multipl": [0, 81, 98], "bit": [0, 80, 81, 98, 106], "per": [0, 21, 73, 79, 80, 81, 95, 97, 98, 102, 104], "element": [0, 80, 81, 98], "unpack": [0, 80, 98, 105, 106], "use_styl": [0, 93], "appli": [0, 93], "": [0, 1, 9, 11, 12, 13, 15, 16, 24, 28, 29, 33, 43, 49, 50, 56, 85, 86, 87, 89, 90, 91, 92, 93, 99, 105], "default": [0, 30, 33, 90, 93], "matplotlib": [0, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105], "rcparam": [0, 93, 99, 103], "time_domain": [0, 77, 92, 102, 104, 105, 106], "sample_r": [0, 1, 8, 16, 28, 29, 49, 50, 85, 86, 87, 89, 90, 92, 99, 103, 104], "1": [0, 1, 8, 11, 15, 17, 18, 19, 28, 29, 43, 44, 49, 50, 59, 62, 63, 68, 70, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107], "0": [0, 8, 18, 19, 24, 28, 29, 43, 44, 49, 50, 62, 68, 70, 76, 77, 79, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107], "periodogram": [0, 89, 102, 105, 106], "estim": [0, 89, 90, 103], "spectral": [0, 89, 102, 104], "densiti": [0, 14, 89, 102, 104], "p_": [0, 76, 77, 82, 83, 89], "xx": [0, 89], "us": [0, 18, 20, 25, 36, 37, 44, 45, 59, 65, 80, 81, 85, 88, 89, 90, 91, 98, 100, 101, 104, 105, 107], "welch": [0, 89, 90], "method": [0, 89, 90, 100, 101], "spectrogram": [0, 90, 105, 106], "b": [0, 43, 45, 79, 80, 85, 86, 87, 88, 91, 94, 104], "h": [0, 24, 25, 28, 29, 30, 43, 49, 50, 52, 59, 79, 85, 86, 88, 102, 103, 104], "e": [0, 1, 18, 85, 86, 100, 101, 103], "j": [0, 1, 18, 43, 77, 85, 86, 100, 101, 103], "omega": [0, 19, 68, 70, 71, 85, 86, 87, 103], "step": [0, 18, 21, 23, 24, 33, 43, 56, 68, 73, 75, 85, 91], "zero": [0, 40, 43, 44, 58, 59, 81, 85, 86, 87, 88, 91, 92, 94, 100, 102, 103, 104], "pole": [0, 43, 44, 54, 85, 86, 87, 88, 91, 94, 100], "frequency_respons": [0, 24, 28, 29, 43, 49, 50, 86, 100, 101, 103, 104, 105, 106], "group_delai": [0, 87, 100, 101, 105, 106], "group": [0, 87], "delai": [0, 18, 24, 26, 36, 59, 68, 87, 103], "tau_g": [0, 87], "impulse_respons": [0, 24, 30, 43, 52, 79, 88, 95, 97, 100, 101, 104, 105, 106], "step_respons": [0, 24, 33, 43, 56, 91, 100, 101, 103, 105, 106], "zeros_pol": [0, 94, 101, 105, 106], "kwarg": [0, 86, 87, 88, 89, 90, 91, 92, 94], "sdr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107], "loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 105, 106], "thi": [1, 21, 24, 43, 73, 77, 85, 86, 87, 88, 89, 90, 91, 94, 99, 101, 103, 104], "i": [1, 8, 17, 24, 30, 33, 34, 36, 41, 43, 52, 56, 57, 59, 62, 63, 66, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107], "meant": 1, "analysi": [1, 8, 103, 106], "onli": [1, 24, 32, 36, 40, 43, 55, 77, 103], "block": [1, 18, 59, 68], "diagram": [1, 18, 59, 68], "bb": [1, 103], "ped": [1, 7, 8, 62, 103], "lf": [1, 103], "lo": [1, 103], "input": [1, 9, 11, 14, 15, 18, 21, 24, 25, 27, 30, 33, 36, 37, 39, 40, 43, 44, 45, 48, 52, 56, 59, 64, 68, 73, 77, 81, 88, 91, 98, 100, 101, 103], "local": [1, 103], "baseband": [1, 102, 103], "phase": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 105], "error": [1, 7, 8, 14, 59, 62, 103], "detector": [1, 7, 8, 62, 103], "filter": [1, 5, 6, 8, 10, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 79, 85, 86, 87, 88, 91, 92, 94, 95, 97, 102, 104, 105, 106], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 107], "transfer": [1, 10, 24, 43, 44, 59, 79, 100, 101, 103], "function": [1, 10, 24, 43, 44, 59, 79, 89, 90, 100, 101, 103, 104, 105, 106], "h_": [1, 103], "z": [1, 18, 24, 43, 59, 68, 100, 101, 103], "k_1": [1, 5, 59, 60, 103], "k_2": [1, 6, 59, 61, 103], "frac": [1, 9, 11, 14, 15, 43, 59, 76, 77, 78, 79, 82, 96, 103], "k_0": [1, 4, 8, 19, 62, 68, 69, 70, 103], "k_p": [1, 7, 8, 62, 103], "2": [1, 9, 11, 14, 28, 29, 49, 50, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "refer": [1, 9, 11, 12, 13, 14, 15, 36, 59, 78, 79, 82, 95, 97, 101, 104], "michael": [1, 9, 11, 12, 13, 14, 15, 59, 95, 97], "rice": [1, 9, 11, 12, 13, 14, 15, 59, 95, 97], "commun": [1, 9, 11, 12, 13, 14, 15, 59, 95, 97, 103, 105], "discret": [1, 9, 11, 12, 13, 14, 15, 59, 95, 97, 99, 103], "time": [1, 8, 9, 11, 12, 13, 14, 15, 24, 43, 59, 62, 76, 77, 78, 79, 82, 83, 84, 85, 89, 90, 92, 95, 96, 97, 99, 100, 101, 104], "approach": [1, 9, 11, 12, 13, 14, 15, 59, 95, 97, 103], "appendix": [1, 59, 95, 97], "c": [1, 9, 11, 12, 13, 14, 15, 59, 103], "lock": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 105], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 103], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 95, 97, 105], "noise_bandwidth": [1, 8, 59, 62, 66], "damping_factor": [1, 8, 59, 62, 63], "creat": [1, 8, 18, 19, 24, 25, 36, 37, 43, 44, 45, 59, 62, 68, 70, 92, 99, 102, 103, 104], "object": [1, 8, 101, 103], "frequency_lock_tim": [1, 9], "freq_offset": [1, 9, 11], "frequenc": [1, 9, 11, 13, 24, 28, 29, 43, 49, 50, 59, 85, 86, 87, 89, 90, 104], "lock_tim": [1, 11, 103], "phase_error_vari": [1, 14], "cn0": [1, 14], "varianc": [1, 14, 77], "steadi": [1, 14], "state": [1, 14, 24, 32, 34, 36, 40, 41, 43, 55, 57], "phase_lock_tim": [1, 15], "bn": [1, 2], "bandwidth": [1, 2, 3, 8, 12, 59, 62, 66, 79, 95, 97, 103, 104], "b_n": [1, 2, 3, 8, 9, 11, 14, 15, 59, 62, 66], "hz": [1, 2, 8, 9, 11, 14, 28, 29, 49, 50, 59, 62, 66, 79, 99], "bnt": [1, 3, 103], "normal": [1, 3, 8, 59, 62, 66, 79, 90, 103, 104], "t": [1, 3, 8, 59, 62, 66, 79, 80, 99], "repres": [1, 10], "k0": [1, 4, 8, 18, 19, 62, 68, 69, 70], "gain": [1, 4, 5, 6, 7, 8, 18, 19, 43, 44, 51, 59, 60, 61, 62, 68, 69, 70, 79, 103], "k1": [1, 5, 59, 60, 103], "k2": [1, 6, 59, 61, 103], "kp": [1, 7, 8, 62], "omega_3db": [1, 12], "3": [1, 9, 11, 12, 15, 79, 80, 81, 85, 86, 87, 88, 91, 92, 94, 98, 101, 103, 104, 105, 106], "db": [1, 12, 14, 77, 79, 82, 102, 104], "omega_": [1, 12], "textrm": [1, 12], "radian": [1, 12, 13, 14, 18, 19, 103], "omega_n": [1, 13, 103], "natur": [1, 13], "sampl": [1, 8, 16, 18, 19, 21, 23, 24, 26, 28, 29, 30, 33, 36, 40, 49, 50, 52, 56, 59, 62, 66, 68, 70, 71, 73, 75, 79, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 99, 102, 103, 104], "rate": [1, 8, 16, 28, 29, 36, 39, 49, 50, 85, 86, 87, 89, 90, 92], "f_": [1, 8, 16, 28, 29, 49, 50, 79, 85, 86, 87, 89, 90, 92, 99, 100, 101, 103, 104], "zeta": [1, 8, 17, 59, 62, 63], "damp": [1, 8, 17, 59, 62, 63, 103], "properti": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 17, 20, 26, 31, 34, 35, 38, 41, 42, 46, 47, 51, 53, 54, 57, 58, 60, 61, 63, 65, 66, 69, 71, 72], "paramet": [8, 9, 11, 14, 19, 21, 23, 25, 27, 28, 29, 30, 33, 37, 39, 40, 44, 45, 48, 49, 50, 52, 56, 62, 64, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98], "where": [8, 59, 62, 66, 77, 79, 100, 101, 105], "period": [8, 59, 62, 66], "second": [8, 9, 11, 15, 59, 62, 66, 79], "critic": [8, 17, 59, 62, 63, 103], "underdamp": [8, 17, 59, 62, 63], "overdamp": [8, 17, 59, 62, 63], "ted": [8, 62], "t_": [9, 11, 15, 39, 79, 104], "fl": [9, 11], "4": [9, 11, 29, 50, 77, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 106], "delta": [9, 11, 24, 30, 43, 52, 88, 100, 101], "f": [9, 11, 24, 28, 29, 43, 49, 50, 79, 99, 100, 101, 102, 103, 104], "offset": [9, 11, 18, 19, 68, 70, 72, 103], "take": [9, 11, 15], "onto": [9, 11, 15], "equat": [9, 11, 12, 13, 14, 15, 43], "39": 9, "pl": [11, 15], "38": 11, "34": 12, "33": 13, "sigma_": 14, "theta_": 14, "n_0": 14, "carrier": 14, "43": 14, "40": 15, "less": 17, "than": 17, "greater": 17, "note": [18, 24, 43, 59, 68, 77, 79, 90], "increment": [18, 19, 21, 68, 70, 71, 73, 103], "v": [18, 68], "y": [18, 21, 23, 24, 27, 39, 43, 48, 59, 64, 68, 73, 75, 77, 90, 92, 103], "output": [18, 21, 23, 24, 30, 33, 43, 44, 45, 52, 56, 59, 64, 68, 73, 75, 77, 81, 88, 91, 98, 99, 100, 101, 103], "complex": [18, 21, 23, 77, 99, 100, 101], "exponenti": [18, 21, 23, 99, 100, 101], "constant": [18, 19, 59, 68, 70, 71, 101, 103], "accumul": [18, 19, 68, 70, 71, 103], "absolut": [18, 19, 68, 70, 72], "unit": [18, 24, 33, 43, 56, 59, 68, 70, 71, 72, 76, 77, 83, 84, 91, 95, 96, 97, 100, 101, 103], "adder": [18, 59, 68, 103], "process": [18, 21, 68, 73, 101, 103], "variabl": [18, 21, 68, 73, 80, 103], "reset": [18, 22, 24, 32, 36, 40, 43, 55, 59, 67, 68, 74], "forward": [18, 23, 68, 75], "theta": [19, 68, 70, 72], "vari": [21, 73], "number": [23, 28, 29, 30, 33, 49, 50, 52, 56, 75, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98], "wrapper": [24, 43], "scipi": [24, 27, 43, 89, 90, 104, 105], "convolv": [24, 27, 92, 102], "It": [24, 43, 59, 77], "support": [24, 43], "one": [24, 43, 79, 80, 85, 86, 87, 89, 90, 100, 101, 102, 104], "stream": [24, 25, 32, 34, 36, 37, 40, 41, 43, 44, 45, 55, 57], "its": [24, 43, 44, 100, 101, 104], "feedforward": [24, 25, 35, 43, 45, 47, 85, 86, 87, 88, 91, 94, 100, 101], "coeffici": [24, 25, 43, 45, 85, 86, 87, 88, 91, 94, 100, 101], "h_i": [24, 25, 35, 100], "sum_": [24, 43, 76, 77, 96], "sum": [24, 43, 104], "limits_": [24, 43], "bool": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "fals": [24, 25, 36, 37, 43, 44, 45, 101, 104], "tupl": [24, 28, 29, 43, 49, 50], "frequency_response_log": [24, 29, 43, 50], "logarithm": [24, 29, 43, 50, 85, 86, 87, 89, 100, 101], "axi": [24, 29, 43, 50, 85, 86, 87, 89, 90, 92, 99], "when": [24, 30, 33, 43, 52, 56, 85, 86, 87, 88, 91, 99, 100, 101], "mode": [24, 25, 27, 32, 34, 36, 37, 40, 41, 43, 44, 45, 55, 57, 102], "u": [24, 33, 43, 56, 91, 100, 101], "indic": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "whether": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "tap": [24, 35, 36, 42, 43, 46, 47, 100, 101], "In": [25, 34, 37, 41, 44, 45, 57, 77, 79, 80, 81, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99], "previou": [25, 37, 40, 44, 45], "ar": [25, 29, 37, 44, 45, 50, 81, 85, 86, 87, 89, 90, 93, 99, 101, 103, 104, 105, 107], "preserv": [25, 34, 37, 41, 44, 45, 57], "between": [25, 34, 37, 41, 44, 45, 57, 89, 90, 103], "call": [25, 34, 37, 41, 44, 45, 57], "liter": [27, 86, 87], "full": 27, "valid": [27, 102], "same": [27, 100], "convolut": 27, "detail": 27, "1024": [28, 29, 49, 50, 85, 86, 87, 102, 104], "from": [28, 29, 43, 44, 49, 50, 90, 100, 101, 103, 105], "plot": [28, 29, 30, 33, 49, 50, 52, 56, 77, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106], "decad": [29, 50, 85, 86, 87, 100, 103], "space": [29, 50], "length": [30, 33, 79, 85, 88, 89, 90, 91, 95, 97, 99, 102, 104], "resampl": [36, 37, 38, 39, 40, 41, 42, 105, 106], "http": [36, 78, 79, 82], "wirelesspi": 36, "com": [36, 79], "fraction": [36, 40, 79, 99], "structur": 36, "new": [36, 37], "given": [36, 39, 100, 101], "r": [36, 39, 79, 95, 97, 101, 103, 104], "index": [36, 40], "vector": [40, 89, 90], "should": 40, "equal": 40, "three": [40, 99, 104], "If": [40, 77, 81, 85, 88, 89, 90, 91, 92, 98, 105], "lfilter": 43, "b_i": [43, 45, 47, 85, 86, 87, 88, 91, 94, 101], "feedback": [43, 45, 46, 85, 86, 87, 88, 91, 94, 101], "a_j": [43, 45, 46, 85, 86, 87, 88, 91, 94, 101], "These": [43, 93, 103], "differ": [43, 104], "a_0": 43, "left": [43, 76, 77, 79, 83, 84, 96], "m": 43, "right": [43, 76, 77, 79, 83, 84, 96], "classmethod": [43, 44], "zerospol": [43, 44, 85, 86, 87, 88, 91, 94, 101], "self": [43, 44], "100": [43, 52, 56, 77, 85, 88, 91, 92, 99], "a_tap": [43, 46, 85, 86, 87, 88, 91, 94, 101, 103], "b_tap": [43, 47, 85, 86, 87, 88, 91, 94, 101, 103], "can": [59, 77, 79, 81, 89, 90, 100, 101, 107], "track": 59, "cannot": 59, "howev": [59, 99], "chirp": 59, "ramp": 59, "underli": [59, 65], "measur": [76, 77, 78, 82, 83, 84, 96, 103, 105, 106], "domain": [76, 77, 78, 82, 83, 84, 85, 89, 90, 92, 96], "text": [76, 77, 78, 82, 83, 84, 96], "avg": [76, 77, 82], "seed": 77, "which": [77, 99, 103, 104], "ad": [77, 105, 106], "desir": 77, "explicitli": 77, "assum": [77, 81, 98], "contain": [77, 80], "known": 77, "comput": [77, 100, 101, 103, 104], "pass": [77, 86, 87, 88, 89, 90, 91, 92, 94, 100, 101], "must": [77, 79, 95, 97], "linear": 77, "random": [77, 92, 102], "gener": 77, "numpi": [77, 98, 99, 100, 101, 102, 103, 104, 105], "default_rng": 77, "noisi": 77, "w": [77, 99, 100, 101, 102, 103, 104], "sigma": 77, "For": [77, 85, 86, 87, 88, 91, 94, 100], "real": [77, 99, 100, 101, 102, 103], "sim": 77, "mathcal": 77, "cn": 77, "np": [77, 85, 86, 87, 88, 91, 92, 94, 99, 100, 101, 102, 103, 104], "sin": 77, "pi": [77, 79, 85, 86, 87, 88, 91, 92, 94, 99, 100, 101, 102, 103], "5": [77, 79, 80, 85, 86, 87, 88, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106], "arang": [77, 99, 102, 103], "10": [77, 79, 80, 82, 85, 86, 87, 88, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104], "plt": [77, 79, 85, 86, 87, 88, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104], "figur": [77, 79, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104], "figsiz": [77, 79, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104], "8": [77, 79, 80, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104], "label": [77, 79, 90, 92, 95, 97, 99, 102, 103, 104], "titl": [77, 92, 99, 102, 103, 104], "tight_layout": [77, 92, 102, 103, 104], "show": [77, 79, 85, 86, 87, 88, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104], "cf": 78, "v_": [78, 84, 96], "en": [78, 82], "wikipedia": [78, 82], "org": [78, 82], "wiki": [78, 82], "puls": [79, 92, 95, 97, 105, 106], "shape": [79, 92, 95, 97, 105, 106], "product": [79, 104], "sym": [79, 104], "side": [79, 85, 86, 87, 89, 90, 100, 101, 102, 104], "symbol": [79, 95, 97, 102, 104], "also": [79, 105], "thought": [79, 107], "smaller": [79, 104], "valu": [79, 90, 101], "produc": [79, 104], "wider": 79, "even": [79, 95, 97], "amplitud": [79, 99, 103], "so": [79, 105], "nomin": 79, "passband": [79, 102], "ha": [79, 103, 104], "exp": [79, 85, 86, 87, 88, 91, 92, 94, 99, 101, 102, 103], "relat": 79, "sqrt": [79, 96, 102, 103, 104], "ln": 79, "www": 79, "mathwork": 79, "help": 79, "ref": 79, "gaussdesign": 79, "html": 79, "onlinelibrari": 79, "wilei": 79, "doi": 79, "pdf": 79, "1002": 79, "9780470041956": 79, "app2": 79, "h_0p1": [79, 95, 97], "h_0p2": 79, "h_0p3": 79, "data": [80, 81, 98, 105], "displai": [80, 85, 86, 87, 89, 90], "each": [80, 89, 90], "consid": 80, "convert": 80, "line": 80, "string": [80, 89, 90], "print": [80, 99, 100, 101, 103], "quick": 80, "brown": 80, "fox": 80, "jump": 80, "over": 80, "lazi": 80, "dog": 80, "00000000": 80, "54": 80, "68": 80, "65": 80, "20": [80, 102, 104], "71": 80, "75": [80, 103], "69": 80, "63": 80, "6b": 80, "62": 80, "72": 80, "6f": 80, "77": 80, "6e": 80, "00000010": 80, "66": 80, "78": 80, "6a": 80, "6d": 80, "70": [80, 104], "73": 80, "76": 80, "74": 80, "00000020": 80, "6c": 80, "61": 80, "7a": 80, "79": 80, "64": [80, 101], "67": 80, "he": 80, "6": [80, 85, 86, 87, 88, 91, 92, 94, 100, 101, 103], "7": [80, 92], "9": [80, 95, 97, 102, 104, 106], "01": [80, 101, 103], "02": [80, 101, 103], "03": [80, 101], "04": [80, 101], "00000004": 80, "05": [80, 99, 101, 103], "06": 80, "07": 80, "08": 80, "00000008": 80, "09": 80, "0a": 80, "dtype": [81, 92, 98, 103], "dtypelik": [81, 98], "have": [81, 98], "most": [81, 98], "signific": [81, 98], "first": [81, 98], "enough": 81, "fill": 81, "last": 81, "remain": 81, "type": [81, 86, 87, 89, 98, 106], "smallest": 81, "unsign": 81, "integ": 81, "hold": 81, "out": [81, 93, 98], "uint8": [81, 98], "log_": 82, "max": [83, 84], "n_time": [85, 101], "n_freq": 85, "x_axi": [85, 86, 87, 89, 90, 100, 101, 102, 103], "two": [85, 86, 87, 89, 90, 99, 100, 101], "log": [85, 86, 87, 89, 100, 101, 103], "set": [85, 86, 87, 88, 89, 90, 91, 93, 94, 101], "n_t": 85, "n_f": 85, "scale": [85, 86, 87, 89, 90, 100, 101], "option": [85, 86, 87, 89, 90], "spectrum": [85, 86, 87, 89, 90], "h_srrc": [85, 86, 87, 88, 91, 92, 94], "1j": [85, 86, 87, 88, 91, 92, 94, 99, 101, 102, 103], "conj": [85, 86, 87, 88, 91, 94, 101, 103], "30": [85, 88, 91, 101], "keyword": [86, 87, 88, 89, 90, 91, 92, 94, 100, 101], "argument": [86, 87, 88, 89, 90, 91, 92, 94, 100, 101], "pyplot": [86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104], "ylim": [87, 100, 103, 104], "48": 87, "52": 87, "window": [89, 90], "hann": [89, 90], "overlap": [89, 90, 102], "fft": [89, 90], "median": 89, "segment": [89, 90], "256": [89, 90, 102], "point": [89, 90], "pcolormesh": 90, "By": 90, "color": [90, 99, 102, 103, 104], "bar": 90, "rang": [90, 103], "10th": 90, "100th": 90, "percentil": 90, "provid": [90, 105], "more": 90, "dynam": 90, "activ": 90, "chang": [90, 107], "vmin": 90, "vmax": 90, "bpsk": [92, 102], "1000": 92, "symbol_map": [92, 102], "randint": [92, 102], "10e3": 92, "qpsk": 92, "complex64": [92, 103], "style": 93, "mai": [93, 101], "revert": 93, "rcdefault": 93, "follow": [93, 103], "_rc_param": 93, "rc_param": 93, "ax": [93, 99, 103], "grid": [93, 99, 103, 104], "true": 93, "autolayout": 93, "max_open_warn": 93, "titleweight": 93, "bold": 93, "linestyl": [93, 99, 103, 104], "excess": [95, 97, 104], "le": [95, 97], "energi": [95, 97], "h_0p5": [95, 97], "h_0p9": [95, 97], "import": [99, 100, 101, 102, 103, 104, 105], "config": [99, 100, 101, 102, 103, 104], "inlinebackend": [99, 100, 101, 102, 103, 104], "print_figure_kwarg": [99, 100, 101, 102, 103, 104], "facecolor": [99, 100, 101, 102, 103, 104], "widget": [99, 100, 101, 102, 103, 104], "prop_cycl": [99, 103], "by_kei": [99, 103], "continu": 99, "freq": [99, 103], "tx": 99, "decai": [99, 101], "marker": [99, 100, 101], "o": 99, "fillstyl": 99, "imag": 99, "xlabel": [99, 103, 104], "ylabel": [99, 103, 104], "origin": 99, "legend": [99, 102, 103, 104], "both": [99, 103], "now": 99, "equival": 99, "accomplish": 99, "librari": [99, 105, 107], "def": 99, "resample_sign": 99, "new_sample_r": 99, "ty": 99, "size": [99, 102, 103, 104], "notic": [99, 104], "everi": 99, "200": 99, "four": 99, "400": 99, "other": [99, 107], "appear": 99, "50": [99, 102], "fourth": 99, "25": [99, 103, 104], "roughli": 99, "often": 99, "do": 99, "align": 99, "315": 99, "32": 99, "user": [100, 101], "below": [100, 101], "00095881": 100, "00175008": 100, "00423912": 100, "00588237": 100, "00615087": 100, "00474585": 100, "00170436": 100, "0025481": 100, "00721629": 100, "01123216": 100, "01342329": 100, "01273174": 100, "00845039": 100, "00043678": 100, "01073645": 100, "02372925": 100, "03650167": 100, "04650553": 100, "05098414": 100, "04734541": 100, "03355823": 100, "00851466": 100, "0276993": 100, "07367186": 100, "12670168": 100, "18306847": 100, "2381038": 100, "28726435": 100, "32607284": 100, "3509308": 100, "35948882": 100, "conveni": [100, 101], "evalu": [100, 101], "shift": [100, 101], "envelop": [100, 101], "through": [100, 101, 103], "easili": [100, 101], "here": [100, 101], "12": 100, "altern": 101, "conjug": 101, "0x000002214b040a88": 101, "47820725": 101, "00000000e": 101, "00": 101, "78207252e": 101, "58172329e": 101, "10862468e": 101, "86109590e": 101, "21565653e": 101, "01140214e": 101, "57286400e": 101, "67772160e": 101, "47338728e": 101, "10422993e": 101, "89312837e": 101, "12240078e": 101, "03953322e": 101, "69685122e": 101, "63882791e": 101, "81474977e": 101, "47193366e": 101, "85259041e": 101, "15647504e": 101, "23851924e": 101, "42176895e": 101, "84684395e": 101, "42721858e": 101, "72236648e": 101, "14721649e": 101, "10813095e": 101, "94024315e": 101, "78877688e": 101, "74077567e": 101, "87820725": 101, "53637958": 101, "94724205": 101, "13335164": 101, "1455082": 101, "04436799": 101, "88708159": 101, "71930943": 101, "5719707": 101, "46154771": 101, "39261642": 101, "36139242": 101, "35935288": 101, "3763214": 101, "40270968": 101, "43085717": 101, "45557651": 101, "47410241": 101, "48566716": 101, "49090568": 101, "49124786": 101, "48840102": 101, "4839738": 101, "47925143": 101, "47510421": 101, "47199608": 101, "47005584": 101, "46917696": 101, "46911955": 101, "denomin": 101, "73910363": 101, "30614675j": 101, "plane": 101, "linspac": 101, "endpoint": 101, "concaten": 101, "0x000002214dc574c8": 101, "lyon": 101, "understand": 101, "3rd": 101, "edit": 101, "section": [101, 103], "insid": 101, "circl": 101, "sinusoid": 101, "outsid": 101, "unstabl": 101, "increas": 101, "n_symbol": 102, "500": [102, 103], "x_bb_rect": 102, "papr_bb_rect": 102, "x_pb_rect": 102, "papr_pb_rect": 102, "x_bb_0p9": 102, "papr_bb_0p9": 102, "x_bb_0p5": 102, "papr_bb_0p5": 102, "x_bb_0p1": 102, "papr_bb_0p1": 102, "k": [102, 104], "2f": 102, "rf": [102, 103], "xlim": [102, 103, 104], "x_pb_0p9": 102, "papr_pb_0p9": 102, "x_pb_0p5": 102, "papr_pb_0p5": 102, "x_pb_0p1": 102, "papr_pb_0p1": 102, "configur": 103, "0x00000290f1ce3488": 103, "theta_0": 103, "phase_error": 103, "freq_estim": 103, "subplot": 103, "suptitl": 103, "ones": 103, "angl": 103, "part": 103, "unwrap": 103, "system": [103, 105], "avail": 103, "001": 103, "005": 103, "b_nt": 103, "0005": 103, "00001": 103, "0125": 103, "015": 103, "0175": 103, "t_lock": 103, "rectangular": 104, "rect": 104, "achiev": 104, "rc_0p1": 104, "rc_0p5": 104, "rc_0p9": 104, "nyquist": 104, "adjac": 104, "specif": 104, "pm": 104, "roll": 104, "60": 104, "total": 104, "nearli": 104, "compar": 104, "null": 104, "while": 104, "small": 104, "lobe": 104, "much": 104, "higher": 104, "h_rect": 104, "freqz": 104, "worn": 104, "whole": 104, "h_rc_0p1": 104, "h_rc_0p5": 104, "h_rc_0p9": 104, "rel": 104, "main": 104, "p_rect": 104, "log10": 104, "cumsum": 104, "ab": 104, "p_rc_0p1": 104, "p_rc_0p5": 104, "p_rc_0p9": 104, "One": 104, "within": 104, "variou": 104, "srrc_0p1": 104, "srrc_0p5": 104, "srrc_0p9": 104, "therefor": 104, "similar": 104, "significantli": 104, "due": 104, "being": 104, "h_srrc_0p1": 104, "h_srrc_0p5": 104, "h_srrc_0p9": 104, "p_srrc_0p1": 104, "p_srrc_0p5": 104, "p_srrc_0p9": 104, "gauss_0p1": 104, "gauss_0p2": 104, "gauss_0p3": 104, "python": 105, "packag": 105, "softwar": 105, "radio": 105, "goal": 105, "tool": 105, "design": 105, "build": 105, "analyz": 105, "reli": 105, "interoper": 105, "veri": 105, "possibl": 105, "numba": 105, "acceler": 105, "computation": 105, "intens": 105, "addition": 105, "aim": 105, "replic": 105, "relev": 105, "matlab": 105, "dsp": 105, "toolbox": 105, "we": 105, "progress": 105, "someth": 105, "you": 105, "d": 105, "like": 105, "includ": 105, "pleas": 105, "open": 105, "issu": 105, "github": 105, "impair": 105, "manipul": 105, "util": 105, "releas": 106, "juli": 106, "2023": 106, "helper": 106, "improv": 106, "annot": 106, "matt": 106, "hostett": 106, "mhostett": 106, "semant": 107, "major": 107, "minor": 107, "patch": 107, "introduc": 107, "api": 107, "featur": 107, "backward": 107, "compat": 107, "make": 107, "bug": 107, "fix": 107, "befor": 107, "There": 107, "guarante": 107, "them": 107, "thei": 107}, "objects": {"": [[0, 0, 0, 1, "sdr", ""]], "sdr": [[1, 1, 1, "", "ClosedLoopPLL", "A class that defines the performance of a closed-loop PLL."], [18, 1, 1, "", "DDS", "Implements a direct digital synthesizer (DDS)."], [24, 1, 1, "", "FIR", "Implements a finite impulse response (FIR) filter."], [36, 1, 1, "", "FarrowResampler", "Implements a cubic Farrow arbitrary resampler."], [43, 1, 1, "", "IIR", "Implements an infinite impulse response (IIR) filter."], [59, 1, 1, "", "LoopFilter", "Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."], [68, 1, 1, "", "NCO", "Implements a numerically-controlled oscillator (NCO)."], [76, 5, 1, "", "average_power", "Measures the average power of a time-domain signal $x[n]$."], [77, 5, 1, "", "awgn", "Adds additive white Gaussian noise (AWGN) to the time-domain signal $x[n]$."], [78, 5, 1, "", "crest_factor", "Measures the crest factor of a time-domain signal $x[n]$."], [79, 5, 1, "", "gaussian", "Returns a Gaussian pulse shape."], [80, 5, 1, "", "hexdump", "Returns a hexdump of the specified data."], [81, 5, 1, "", "pack", "Packs a binary array into an array with multiple bits per element."], [82, 5, 1, "", "papr", "Measures the peak-to-average power ratio (PAPR) of a time-domain signal $x[n]$."], [83, 5, 1, "", "peak_power", "Measures the peak power of a time-domain signal $x[n]$."], [84, 5, 1, "", "peak_voltage", "Measures the peak voltage of a time-domain signal $x[n]$."], [95, 5, 1, "", "raised_cosine", "Returns a raised cosine (RC) pulse shape."], [96, 5, 1, "", "rms_voltage", "Measures the root-mean-square (RMS) voltage of a time-domain signal $x[n]$."], [97, 5, 1, "", "root_raised_cosine", "Returns a square root raised cosine (SRRC) pulse shape."], [98, 5, 1, "", "unpack", "Unpacks an array with multiple bits per element into a binary array."]], "sdr.ClosedLoopPLL": [[2, 2, 1, "", "Bn", "The noise bandwidth $B_n$ of the PLL in Hz."], [3, 2, 1, "", "BnT", "The normalized noise bandwidth $B_n T$ of the PLL."], [4, 2, 1, "", "K0", "The NCO gain $K_0$."], [5, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [6, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [7, 2, 1, "", "Kp", "The phase error detector (PED) gain $K_p$."], [8, 3, 1, "", "__init__", "Creates a closed-loop PLL analysis object."], [9, 3, 1, "", "frequency_lock_time", "Returns the frequency lock time of the PLL."], [10, 2, 1, "", "iir", "The IIR filter that represents the closed-loop transfer function of the PLL."], [11, 3, 1, "", "lock_time", "Returns the lock time of the PLL."], [12, 2, 1, "", "omega_3dB", "The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."], [13, 2, 1, "", "omega_n", "The natural frequency $omega_n$ of the PLL in radians/s."], [14, 3, 1, "", "phase_error_variance", "Returns the variance of the phase error of the PLL in steady state."], [15, 3, 1, "", "phase_lock_time", "Returns the phase lock time of the PLL."], [16, 2, 1, "", "sample_rate", "The sample rate $f_s$ of the PLL in samples/s."], [17, 2, 1, "", "zeta", "The damping factor $zeta$ of the PLL."]], "sdr.ClosedLoopPLL.__init__": [[8, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [8, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [8, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [8, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [8, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the PLL in Hz."]], "sdr.ClosedLoopPLL.frequency_lock_time": [[9, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.lock_time": [[11, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.phase_error_variance": [[14, 4, 2, "p-cn0", "cn0", "The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]], "sdr.DDS": [[19, 3, 1, "", "__init__", "Creates a direct digital synthesizer (DDS)."], [20, 2, 1, "", "nco", "The numerically-controlled oscillator (NCO) used by the DDS."], [21, 3, 1, "", "process", "Steps the DDS with the variable phase increment signal $x[n]$."], [22, 3, 1, "", "reset", "Resets the DDS."], [23, 3, 1, "", "step", "Steps the DDS forward by $N$ samples."]], "sdr.DDS.__init__": [[19, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [19, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in radians/sample."], [19, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in radians."]], "sdr.DDS.process": [[21, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the DDS."]], "sdr.DDS.step": [[23, 4, 2, "p-N", "N", "The number of samples $N$ to step the DDS forward."]], "sdr.FIR": [[25, 3, 1, "", "__init__", "Creates a FIR filter with feedforward coefficients $h_i$."], [26, 2, 1, "", "delay", "The delay of the FIR filter in samples."], [27, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the FIR filter."], [28, 3, 1, "", "frequency_response", "Returns the frequency response $H(f)$ of the FIR filter."], [29, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(f)$ of the FIR filter on a logarithmic frequency axis."], [30, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the FIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [31, 2, 1, "", "order", "The order of the FIR filter, $N$."], [32, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [33, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the FIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [34, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [35, 2, 1, "", "taps", "The feedforward taps $h_i$."]], "sdr.FIR.__init__": [[25, 4, 2, "p-h", "h", "The feedforward coefficients $h_i$."], [25, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."]], "sdr.FIR.filter": [[27, 4, 2, "p-mode", "mode", "The convolution mode. See scipy.signal.convolve() for details."], [27, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.FIR.frequency_response": [[28, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [28, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.FIR.frequency_response_log": [[29, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [29, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [29, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.FIR.impulse_response": [[30, 4, 2, "p-N", "N", "The number of samples to return. The default is the filter length."]], "sdr.FIR.step_response": [[33, 4, 2, "p-N", "N", "The number of samples to return. The default is the filter length."]], "sdr.FarrowResampler": [[37, 3, 1, "", "__init__", "Creates a new Farrow arbitrary resampler."], [38, 2, 1, "", "order", "The order of the filter."], [39, 3, 1, "", "resample", "Resamples the input signal $x[n]$ by the given arbitrary rate $r$."], [40, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state and fractional sample index."], [41, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [42, 2, 1, "", "taps", "The Farrow filter taps."]], "sdr.FarrowResampler.__init__": [[37, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to resample()."]], "sdr.FarrowResampler.resample": [[39, 4, 2, "p-rate", "rate", "The resampling rate $r$."], [39, 4, 2, "p-x", "x", "The input signal $x[n] = x(n T_s)$."]], "sdr.FarrowResampler.reset": [[40, 4, 2, "p-state", "state", "The filter state to reset to. The state vector should equal the previous three inputs. If None, the filter state will be reset to zero."]], "sdr.IIR": [[44, 3, 1, "", "ZerosPoles", "Creates an IIR filter from its zeros, poles, and gain."], [45, 3, 1, "", "__init__", "Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."], [46, 2, 1, "", "a_taps", "The feedback taps $a_j$."], [47, 2, 1, "", "b_taps", "The feedforward taps $b_i$."], [48, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the IIR filter."], [49, 3, 1, "", "frequency_response", "Returns the frequency response $H(f)$ of the IIR filter."], [50, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(f)$ of the IIR filter on a logarithmic frequency axis."], [51, 2, 1, "", "gain", "The gain of the IIR filter."], [52, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the IIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [53, 2, 1, "", "order", "The order of the IIR filter, $N$."], [54, 2, 1, "", "poles", "The poles of the IIR filter."], [55, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [56, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the IIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [57, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [58, 2, 1, "", "zeros", "The zeros of the IIR filter."]], "sdr.IIR.ZerosPoles": [[44, 4, 2, "p-gain", "gain", "The gain of the transfer function."], [44, 4, 2, "p-poles", "poles", "The poles of the transfer function."], [44, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."], [44, 4, 2, "p-zeros", "zeros", "The zeros of the transfer function."]], "sdr.IIR.__init__": [[45, 4, 2, "p-a", "a", "The feedback coefficients $a_j$."], [45, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [45, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."]], "sdr.IIR.filter": [[48, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.IIR.frequency_response": [[49, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [49, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.frequency_response_log": [[50, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [50, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [50, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.impulse_response": [[52, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.IIR.step_response": [[56, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.LoopFilter": [[60, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [61, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [62, 3, 1, "", "__init__", "Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."], [63, 2, 1, "", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [64, 3, 1, "", "filter", "Filters the input signal $x[n]$."], [65, 2, 1, "", "iir", "The underlying IIR filter used to implement the loop filter."], [66, 2, 1, "", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [67, 3, 1, "", "reset", "Resets the loop filter."]], "sdr.LoopFilter.__init__": [[62, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [62, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [62, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [62, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]], "sdr.LoopFilter.filter": [[64, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.NCO": [[69, 2, 1, "", "K0", "The NCO gain $K_0$."], [70, 3, 1, "", "__init__", "Creates a numerically-controlled oscillator (NCO)."], [71, 2, 1, "", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [72, 2, 1, "", "offset", "The absolute offset $theta$ of the NCO in units."], [73, 3, 1, "", "process", "Steps the NCO with the variable-increment signal $x[n]$."], [74, 3, 1, "", "reset", "Resets the NCO."], [75, 3, 1, "", "step", "Steps the NCO forward by $N$ samples."]], "sdr.NCO.__init__": [[70, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [70, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [70, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in units."]], "sdr.NCO.process": [[73, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the NCO."]], "sdr.NCO.step": [[75, 4, 2, "p-N", "N", "The number of samples $N$ to step the NCO forward."]], "sdr.average_power": [[76, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.awgn": [[77, 4, 2, "p-noise", "noise", "The noise power (variance) in linear units. If noise is None, snr must be specified."], [77, 4, 2, "p-seed", "seed", "The seed for the random number generator. This is passed to numpy.random.default_rng()."], [77, 4, 2, "p-snr", "snr", "The desired signal-to-noise ratio (SNR) in dB. If specified, the average signal power is measured explicitly. It is assumed that $x[n]$ contains signal only. If the signal power is known, the desired noise variance can be computed and passed in noise. If snr is None, noise must be specified."], [77, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to which AWGN is added."]], "sdr.crest_factor": [[78, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.gaussian": [[79, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [79, 4, 2, "p-sps", "sps", "The number of samples per symbol."], [79, 4, 2, "p-time_bandwidth", "time_bandwidth", "The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds. The time-bandwidth product can also be thought of as the fractional bandwidth $B / f_{sym}$. Smaller values produce wider pulses."]], "sdr.hexdump": [[80, 4, 2, "p-data", "data", "The data to display. Each element is considered one byte. Use sdr.pack() or sdr.unpack() to convert data with variable bits per element."], [80, 4, 2, "p-width", "width", "The number of bytes per line."]], "sdr.pack": [[81, 4, 2, "p-bpe", "bpe", "The number of bits per element in the output array."], [81, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, the smallest unsigned integer dtype that can hold bpe bits is used."], [81, 4, 2, "p-x", "x", "The input binary array with 1 bit per element."]], "sdr.papr": [[82, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.peak_power": [[83, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.peak_voltage": [[84, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.plot": [[85, 5, 1, "", "filter", "Plots the frequency response $H(e^{jomega})$, impulse response $h[n]$, step response $s[n]$, and zeros and poles of the filter."], [86, 5, 1, "", "frequency_response", "Plots the frequency response $H(e^{jomega})$ of the filter."], [87, 5, 1, "", "group_delay", "Plots the group delay $tau_g(omega)$ of the IIR filter."], [88, 5, 1, "", "impulse_response", "Plots the impulse response $h[n]$ of a filter."], [89, 5, 1, "", "periodogram", "Plots the estimated power spectral density $P_{xx}$ of a time-domain signal $x[n]$ using Welch's method."], [90, 5, 1, "", "spectrogram", "Plots the spectrogram of a time-domain signal $x[n]$ using Welch's method."], [91, 5, 1, "", "step_response", "Plots the step response $s[n]$ of a filter."], [92, 5, 1, "", "time_domain", "Plots a time-domain signal $x[n]$."], [93, 5, 1, "", "use_style", "Applies sdr's default matplotlib rcParams."], [94, 5, 1, "", "zeros_poles", "Plots the zeros and poles of the filter."]], "sdr.plot.filter": [[85, 4, 2, "p-N_freq", "N_freq", "The number of samples $N_f$ in the frequency response."], [85, 4, 2, "p-N_time", "N_time", "The number of samples $N_t$ in the time domain. If None, the length of b is used for FIR filters and 100 for IIR filters."], [85, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [85, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [85, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [85, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [85, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.frequency_response": [[86, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [86, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [86, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [86, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [86, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [86, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.group_delay": [[87, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [87, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [87, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [87, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [87, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [87, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.impulse_response": [[88, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [88, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [88, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.periodogram": [[89, 4, 2, "p-average", "average", "The type of averaging to use. Options are to average the periodograms using the mean or median."], [89, 4, 2, "p-fft", "fft", "The number of points to use in the FFT. If None, the FFT length is set to length."], [89, 4, 2, "p-length", "length", "The length of each segment in samples. If None, the length is set to 256."], [89, 4, 2, "p-overlap", "overlap", "The number of samples to overlap between segments. If None, the overlap is set to length // 2."], [89, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s."], [89, 4, 2, "p-window", "window", "The windowing function to use. This can be a string or a vector of length length."], [89, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."], [89, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.spectrogram": [[90, 4, 2, "p-fft", "fft", "The number of points to use in the FFT. If None, the FFT length is set to length."], [90, 4, 2, "p-length", "length", "The length of each segment in samples. If None, the length is set to 256."], [90, 4, 2, "p-overlap", "overlap", "The number of samples to overlap between segments. If None, the overlap is set to length // 2."], [90, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s. If the sample rate is 1, the x-axis will be label as \"Samples\" and the y-axis as \"Normalized Frequency\"."], [90, 4, 2, "p-window", "window", "The windowing function to use. This can be a string or a vector of length length."], [90, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."], [90, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum or two-sided spectrum."]], "sdr.plot.step_response": [[91, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [91, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [91, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.time_domain": [[92, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s. If the sample rate is 1, the x-axis will be label as \"Samples\"."], [92, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."]], "sdr.plot.zeros_poles": [[94, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [94, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.raised_cosine": [[95, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [95, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [95, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.rms_voltage": [[96, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.root_raised_cosine": [[97, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [97, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [97, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.unpack": [[98, 4, 2, "p-bpe", "bpe", "The number of bits per element in the input array."], [98, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, numpy.uint8 is used."], [98, 4, 2, "p-x", "x", "The input array with bpe bits per element."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:parameter", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"]}, "titleterms": {"sdr": [0, 105], "filter": [0, 100, 101, 103], "puls": [0, 102, 104], "shape": [0, 102, 104], "resampl": [0, 99], "phase": [0, 103], "time": [0, 103], "lock": [0, 103], "loop": [0, 103], "impair": 0, "measur": 0, "data": 0, "manipul": 0, "plot": 0, "configur": 0, "domain": [0, 103], "frequenc": [0, 100, 101, 103], "analysi": 0, "note": 1, "constructor": [1, 18, 24, 36, 43, 59, 68], "method": [1, 18, 24, 36, 43, 59, 68], "properti": [1, 18, 24, 36, 43, 59, 68], "see": [18, 28, 29, 30, 33, 49, 50, 52, 56, 68, 78, 82, 85, 86, 87, 88, 91, 94], "also": [18, 28, 29, 30, 33, 49, 50, 52, 56, 68, 78, 82, 85, 86, 87, 88, 91, 94], "farrow": 99, "arbitrari": 99, "construct": 99, "an": [99, 100, 101], "input": 99, "signal": 99, "x": 99, "n": [99, 100, 101], "t_": 99, "rate": 99, "r": 99, "y": 99, "frac": 99, "upsampl": 99, "integ": 99, "downsampl": 99, "irrat": 99, "fir": 100, "creat": [100, 101], "examin": [100, 101], "impuls": [100, 101], "respons": [100, 101, 103], "h": [100, 101], "step": [100, 101, 103], "": [100, 101], "omega": [100, 101], "group": [100, 101], "delai": [100, 101], "tau_g": [100, 101], "fulli": [100, 101], "analyz": [100, 101, 103], "iir": 101, "zero": 101, "pole": 101, "digit": 101, "stabil": 101, "peak": 102, "averag": 102, "power": 102, "rectangular": 102, "squar": [102, 104], "root": [102, 104], "rais": [102, 104], "cosin": [102, 104], "design": 103, "proport": 103, "plu": 103, "integr": 103, "ppi": 103, "implement": 103, "pll": 103, "close": 103, "perform": 103, "compar": 103, "across": 103, "zeta": 103, "b_n": 103, "t": 103, "gaussian": 104, "featur": 105, "v0": 106, "0": 106, "2": 106, "chang": 106, "contributor": 106, "1": 106, "version": 107, "alpha": 107, "releas": 107, "beta": 107}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"sdr": [[0, "sdr"], [105, "sdr"]], "Filtering": [[0, "filtering"]], "Pulse shaping": [[0, "pulse-shaping"]], "Resampling": [[0, "resampling"]], "Phase/time-locked loops": [[0, "phase-time-locked-loops"]], "Impairments": [[0, "impairments"]], "Measurement": [[0, "measurement"]], "Data manipulation": [[0, "data-manipulation"]], "Plotting": [[0, "plotting"]], "Configuration": [[0, "configuration"]], "Time-domain": [[0, "time-domain"]], "Frequency-domain": [[0, "frequency-domain"]], "Filter analysis": [[0, "filter-analysis"]], "Note": [[1, null]], "Constructors": [[1, "constructors"], [18, "constructors"], [24, "constructors"], [36, "constructors"], [43, "constructors"], [59, "constructors"], [68, "constructors"]], "Methods": [[1, "methods"], [18, "methods"], [24, "methods"], [36, "methods"], [43, "methods"], [59, "methods"], [68, "methods"]], "Properties": [[1, "properties"], [18, "properties"], [24, "properties"], [36, "properties"], [43, "properties"], [59, "properties"], [68, "properties"]], "See also": [[18, null], [28, null], [29, null], [30, null], [33, null], [49, null], [50, null], [52, null], [56, null], [68, null], [78, null], [82, null], [85, null], [86, null], [87, null], [88, null], [91, null], [94, null]], "Farrow arbitrary resampler": [[99, "farrow-arbitrary-resampler"]], "Construct an input signal, x[n] = x(n T_s)": [[99, "construct-an-input-signal-x-n-x-n-t-s"]], "Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})": [[99, "resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]], "Upsample the signal by an integer rate": [[99, "upsample-the-signal-by-an-integer-rate"]], "Downsample the signal by an integer rate": [[99, "downsample-the-signal-by-an-integer-rate"]], "Upsample by an irrational rate": [[99, "upsample-by-an-irrational-rate"]], "Downsample by an irrational rate": [[99, "downsample-by-an-irrational-rate"]], "FIR filters": [[100, "fir-filters"]], "Create an FIR filter": [[100, "create-an-fir-filter"]], "Examine the impulse response, h[n]": [[100, "examine-the-impulse-response-h-n"], [101, "examine-the-impulse-response-h-n"]], "Examine the step response, s[n]": [[100, "examine-the-step-response-s-n"], [101, "examine-the-step-response-s-n"]], "Examine the frequency response, H(\\omega)": [[100, "examine-the-frequency-response-h-omega"], [101, "examine-the-frequency-response-h-omega"]], "Examine the group delay, \\tau_g(\\omega)": [[100, "examine-the-group-delay-tau-g-omega"], [101, "examine-the-group-delay-tau-g-omega"]], "Fully analyze a FIR filter": [[100, "fully-analyze-a-fir-filter"]], "IIR filters": [[101, "iir-filters"]], "Create an IIR filter": [[101, "create-an-iir-filter"]], "Examine the zeros and poles": [[101, "examine-the-zeros-and-poles"]], "Fully analyze an IIR filter": [[101, "fully-analyze-an-iir-filter"]], "Poles and digital filter stability": [[101, "poles-and-digital-filter-stability"]], "Peak-to-average power": [[102, "peak-to-average-power"]], "Rectangular pulse shape": [[102, "rectangular-pulse-shape"]], "Square-root raised cosine pulse shape": [[102, "square-root-raised-cosine-pulse-shape"]], "Phase-locked loops": [[103, "phase-locked-loops"]], "Design a proportional-plus-integrator (PPI) loop filter": [[103, "design-a-proportional-plus-integrator-ppi-loop-filter"]], "Implement a PLL in the phase domain": [[103, "implement-a-pll-in-the-phase-domain"]], "Implement a PLL in the time domain": [[103, "implement-a-pll-in-the-time-domain"]], "Analyze PLL closed-loop performance": [[103, "analyze-pll-closed-loop-performance"]], "Compare step and frequency response across \\zeta": [[103, "compare-step-and-frequency-response-across-zeta"]], "Compare step and frequency response across B_n T": [[103, "compare-step-and-frequency-response-across-b-n-t"]], "Compare lock time across B_n T": [[103, "compare-lock-time-across-b-n-t"]], "Pulse shapes": [[104, "pulse-shapes"]], "Raised cosine": [[104, "raised-cosine"]], "Square-root raised cosine": [[104, "square-root-raised-cosine"]], "Gaussian": [[104, "gaussian"]], "Features": [[105, "features"]], "v0.0": [[106, "v0-0"]], "v0.0.2": [[106, "v0-0-2"]], "Changes": [[106, "changes"], [106, "id1"]], "Contributors": [[106, "contributors"], [106, "id2"]], "v0.0.1": [[106, "v0-0-1"]], "Versioning": [[107, "versioning"]], "Alpha releases": [[107, "alpha-releases"]], "Beta releases": [[107, "beta-releases"]]}, "indexentries": {"module": [[0, "module-sdr"]], "sdr": [[0, "module-sdr"]]}, "docurls": ["api/", "api/sdr.ClosedLoopPLL/", "api/sdr.ClosedLoopPLL.Bn/", "api/sdr.ClosedLoopPLL.BnT/", "api/sdr.ClosedLoopPLL.K0/", "api/sdr.ClosedLoopPLL.K1/", "api/sdr.ClosedLoopPLL.K2/", "api/sdr.ClosedLoopPLL.Kp/", "api/sdr.ClosedLoopPLL.__init__/", "api/sdr.ClosedLoopPLL.frequency_lock_time/", "api/sdr.ClosedLoopPLL.iir/", "api/sdr.ClosedLoopPLL.lock_time/", "api/sdr.ClosedLoopPLL.omega_3dB/", "api/sdr.ClosedLoopPLL.omega_n/", "api/sdr.ClosedLoopPLL.phase_error_variance/", "api/sdr.ClosedLoopPLL.phase_lock_time/", "api/sdr.ClosedLoopPLL.sample_rate/", "api/sdr.ClosedLoopPLL.zeta/", "api/sdr.DDS/", "api/sdr.DDS.__init__/", "api/sdr.DDS.nco/", "api/sdr.DDS.process/", "api/sdr.DDS.reset/", "api/sdr.DDS.step/", "api/sdr.FIR/", "api/sdr.FIR.__init__/", "api/sdr.FIR.delay/", "api/sdr.FIR.filter/", "api/sdr.FIR.frequency_response/", "api/sdr.FIR.frequency_response_log/", "api/sdr.FIR.impulse_response/", "api/sdr.FIR.order/", "api/sdr.FIR.reset/", "api/sdr.FIR.step_response/", "api/sdr.FIR.streaming/", "api/sdr.FIR.taps/", "api/sdr.FarrowResampler/", "api/sdr.FarrowResampler.__init__/", "api/sdr.FarrowResampler.order/", "api/sdr.FarrowResampler.resample/", "api/sdr.FarrowResampler.reset/", "api/sdr.FarrowResampler.streaming/", "api/sdr.FarrowResampler.taps/", "api/sdr.IIR/", "api/sdr.IIR.ZerosPoles/", "api/sdr.IIR.__init__/", "api/sdr.IIR.a_taps/", "api/sdr.IIR.b_taps/", "api/sdr.IIR.filter/", "api/sdr.IIR.frequency_response/", "api/sdr.IIR.frequency_response_log/", "api/sdr.IIR.gain/", "api/sdr.IIR.impulse_response/", "api/sdr.IIR.order/", "api/sdr.IIR.poles/", "api/sdr.IIR.reset/", "api/sdr.IIR.step_response/", "api/sdr.IIR.streaming/", "api/sdr.IIR.zeros/", "api/sdr.LoopFilter/", "api/sdr.LoopFilter.K1/", "api/sdr.LoopFilter.K2/", "api/sdr.LoopFilter.__init__/", "api/sdr.LoopFilter.damping_factor/", "api/sdr.LoopFilter.filter/", "api/sdr.LoopFilter.iir/", "api/sdr.LoopFilter.noise_bandwidth/", "api/sdr.LoopFilter.reset/", "api/sdr.NCO/", "api/sdr.NCO.K0/", "api/sdr.NCO.__init__/", "api/sdr.NCO.increment/", "api/sdr.NCO.offset/", "api/sdr.NCO.process/", "api/sdr.NCO.reset/", "api/sdr.NCO.step/", "api/sdr.average_power/", "api/sdr.awgn/", "api/sdr.crest_factor/", "api/sdr.gaussian/", "api/sdr.hexdump/", "api/sdr.pack/", "api/sdr.papr/", "api/sdr.peak_power/", "api/sdr.peak_voltage/", "api/sdr.plot.filter/", "api/sdr.plot.frequency_response/", "api/sdr.plot.group_delay/", "api/sdr.plot.impulse_response/", "api/sdr.plot.periodogram/", "api/sdr.plot.spectrogram/", "api/sdr.plot.step_response/", "api/sdr.plot.time_domain/", "api/sdr.plot.use_style/", "api/sdr.plot.zeros_poles/", "api/sdr.raised_cosine/", "api/sdr.rms_voltage/", "api/sdr.root_raised_cosine/", "api/sdr.unpack/", "examples/farrow-resampler/", "examples/fir-filters/", "examples/iir-filters/", "examples/peak-to-average-power/", "examples/phase-locked-loop/", "examples/pulse-shapes/", "", "release-notes/v0.0/", "release-notes/versioning/"]})