Search.setIndex({"titles": ["sdr", "sdr.ClosedLoopPLL", "sdr.ClosedLoopPLL.Bn", "sdr.ClosedLoopPLL.BnT", "sdr.ClosedLoopPLL.K0", "sdr.ClosedLoopPLL.K1", "sdr.ClosedLoopPLL.K2", "sdr.ClosedLoopPLL.Kp", "sdr.ClosedLoopPLL.__init__", "sdr.ClosedLoopPLL.frequency_lock_time", "sdr.ClosedLoopPLL.iir", "sdr.ClosedLoopPLL.lock_time", "sdr.ClosedLoopPLL.omega_3dB", "sdr.ClosedLoopPLL.omega_n", "sdr.ClosedLoopPLL.phase_error_variance", "sdr.ClosedLoopPLL.phase_lock_time", "sdr.ClosedLoopPLL.sample_rate", "sdr.ClosedLoopPLL.zeta", "sdr.DDS", "sdr.DDS.__init__", "sdr.DDS.nco", "sdr.DDS.process", "sdr.DDS.reset", "sdr.DDS.step", "sdr.FIR", "sdr.FIR.__init__", "sdr.FIR.delay", "sdr.FIR.filter", "sdr.FIR.frequency_response", "sdr.FIR.frequency_response_log", "sdr.FIR.impulse_response", "sdr.FIR.order", "sdr.FIR.reset", "sdr.FIR.step_response", "sdr.FIR.streaming", "sdr.FIR.taps", "sdr.FarrowResampler", "sdr.FarrowResampler.__init__", "sdr.FarrowResampler.order", "sdr.FarrowResampler.resample", "sdr.FarrowResampler.reset", "sdr.FarrowResampler.streaming", "sdr.FarrowResampler.taps", "sdr.IIR", "sdr.IIR.ZerosPoles", "sdr.IIR.__init__", "sdr.IIR.a_taps", "sdr.IIR.b_taps", "sdr.IIR.filter", "sdr.IIR.frequency_response", "sdr.IIR.frequency_response_log", "sdr.IIR.gain", "sdr.IIR.impulse_response", "sdr.IIR.order", "sdr.IIR.poles", "sdr.IIR.reset", "sdr.IIR.step_response", "sdr.IIR.streaming", "sdr.IIR.zeros", "sdr.LoopFilter", "sdr.LoopFilter.K1", "sdr.LoopFilter.K2", "sdr.LoopFilter.__init__", "sdr.LoopFilter.damping_factor", "sdr.LoopFilter.filter", "sdr.LoopFilter.iir", "sdr.LoopFilter.noise_bandwidth", "sdr.LoopFilter.reset", "sdr.NCO", "sdr.NCO.K0", "sdr.NCO.__init__", "sdr.NCO.increment", "sdr.NCO.offset", "sdr.NCO.process", "sdr.NCO.reset", "sdr.NCO.step", "sdr.crest_factor", "sdr.gaussian", "sdr.hexdump", "sdr.pack", "sdr.papr", "sdr.plot.filter", "sdr.plot.frequency_response", "sdr.plot.group_delay", "sdr.plot.impulse_response", "sdr.plot.step_response", "sdr.plot.time_domain", "sdr.plot.use_style", "sdr.plot.zeros_poles", "sdr.raised_cosine", "sdr.root_raised_cosine", "sdr.unpack", "Farrow arbitrary resampler", "FIR filters", "IIR filters", "Phase-locked loops", "Pulse shapes", "sdr", "v0.0", "Versioning"], "terms": {"class": [0, 1, 18, 24, 36, 43, 59, 68, 93, 94], "fir": [0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 81, 82, 83, 84, 85, 88, 97], "implement": [0, 18, 24, 36, 43, 59, 65, 68, 92], "finit": [0, 24], "impuls": [0, 24, 30, 43, 52, 77, 81, 84, 86, 96, 98], "respons": [0, 24, 28, 29, 30, 33, 43, 49, 50, 52, 56, 77, 81, 82, 83, 84, 85, 96, 98], "iir": [0, 1, 10, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 81, 82, 83, 84, 85, 88, 93, 95, 97, 98], "an": [0, 24, 30, 43, 44, 45, 52, 79, 84, 91, 97], "infinit": [0, 43, 98], "gaussian": [0, 77, 97], "time_bandwidth": [0, 77], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 36, 39, 43, 44, 49, 50, 51, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 76, 77, 80, 81, 82, 83, 86, 89, 90], "span": [0, 77, 89, 90, 96], "int": [0, 18, 23, 24, 26, 28, 29, 30, 31, 33, 36, 38, 43, 49, 50, 52, 53, 56, 68, 75, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91], "sp": [0, 77, 89, 90, 96], "ndarrai": [0, 18, 21, 23, 24, 27, 28, 29, 30, 33, 35, 36, 39, 42, 43, 46, 47, 48, 49, 50, 52, 54, 56, 58, 59, 64, 68, 73, 75, 77, 79, 89, 90, 91], "return": [0, 1, 9, 11, 14, 15, 21, 23, 24, 27, 28, 29, 30, 33, 39, 43, 48, 49, 50, 52, 56, 64, 73, 75, 76, 77, 78, 79, 80, 89, 90, 91, 93, 94], "raised_cosin": [0, 89, 96, 97], "alpha": [0, 77, 87, 89, 90, 96], "rais": [0, 86, 89, 90, 93], "cosin": [0, 86, 89, 90, 93], "rc": [0, 89], "root_raised_cosin": [0, 81, 82, 83, 84, 85, 86, 88, 90, 93, 96, 97], "squar": [0, 86, 90, 93], "root": [0, 86, 90, 93], "srrc": [0, 86, 90], "farrowresampl": [0, 36, 37, 38, 39, 40, 41, 42, 92, 97, 98], "cubic": [0, 36], "farrow": [0, 36, 37, 38, 39, 40, 41, 42, 98], "arbitrari": [0, 36, 37, 38, 39, 40, 41, 42, 97, 98], "closedlooppl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 95, 97, 98], "A": [0, 1, 9, 11, 12, 13, 14, 15, 17, 24, 59, 78, 89, 90, 95], "defin": [0, 1, 24, 43, 77, 94, 97], "perform": [0, 1, 93, 94, 97], "close": [0, 1, 8, 10, 98], "pll": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 98], "dd": [0, 18, 19, 20, 21, 22, 23, 68, 95, 97, 98], "direct": [0, 18, 19, 95, 98], "digit": [0, 1, 9, 11, 12, 13, 14, 15, 18, 19, 59, 89, 90, 95, 97, 98], "synthes": [0, 18, 19, 95, 98], "loopfilt": [0, 59, 60, 61, 62, 63, 64, 65, 66, 67, 95, 97, 98], "2nd": [0, 1, 59, 62, 95, 98], "order": [0, 1, 24, 31, 36, 38, 43, 53, 59, 62, 77, 89, 90, 95, 98], "proport": [0, 1, 5, 59, 60, 62, 98], "plu": [0, 1, 59, 62, 98], "integr": [0, 1, 6, 59, 61, 62, 94, 98], "ppi": [0, 59, 62], "nco": [0, 1, 4, 8, 18, 19, 20, 62, 68, 69, 70, 71, 72, 73, 74, 75, 95, 97, 98], "numer": [0, 1, 18, 20, 68, 70, 94, 95, 98], "control": [0, 1, 18, 20, 68, 70, 95, 98], "oscil": [0, 1, 18, 20, 68, 70, 95, 98], "crest_factor": [0, 76, 80, 97], "x": [0, 1, 18, 21, 24, 27, 36, 39, 43, 48, 59, 64, 68, 73, 76, 79, 80, 81, 82, 83, 86, 91, 95, 99], "arraylik": [0, 18, 21, 24, 25, 27, 36, 39, 40, 43, 44, 45, 48, 59, 64, 68, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91], "crest": [0, 76], "factor": [0, 1, 8, 17, 59, 62, 63, 76, 95], "signal": [0, 1, 9, 11, 14, 15, 18, 21, 24, 27, 36, 39, 43, 48, 59, 64, 68, 73, 75, 76, 77, 80, 86, 93, 94, 95, 96], "papr": [0, 80, 97], "peak": [0, 76, 80], "averag": [0, 80], "power": [0, 80, 96], "ratio": [0, 14, 80], "hexdump": [0, 78, 97], "byte": [0, 78], "width": [0, 78], "16": [0, 78], "str": [0, 78], "specifi": [0, 78, 93, 94], "pack": [0, 78, 79, 97], "bpe": [0, 79, 91], "binari": [0, 79, 91], "arrai": [0, 79, 86, 91, 94], "multipl": [0, 79, 91], "bit": [0, 78, 79, 91], "per": [0, 21, 73, 77, 78, 79, 89, 90, 91, 96], "element": [0, 78, 79, 91], "unpack": [0, 78, 91, 97], "use_styl": [0, 87], "appli": [0, 87], "": [0, 1, 9, 11, 12, 13, 15, 16, 24, 28, 29, 33, 43, 49, 50, 56, 81, 82, 83, 85, 86, 87, 92, 97], "default": [0, 30, 33, 87], "matplotlib": [0, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97], "rcparam": [0, 87, 92, 95], "time_domain": [0, 86, 96, 97], "sample_r": [0, 1, 8, 16, 28, 29, 49, 50, 81, 82, 83, 86, 92, 95, 96], "1": [0, 1, 8, 11, 15, 17, 18, 19, 28, 29, 43, 44, 49, 50, 59, 62, 63, 68, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99], "0": [0, 8, 18, 19, 24, 28, 29, 43, 44, 49, 50, 62, 68, 70, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99], "n": [0, 1, 18, 21, 23, 24, 27, 28, 29, 30, 31, 33, 36, 39, 43, 48, 49, 50, 52, 53, 56, 59, 64, 68, 73, 75, 76, 80, 81, 82, 83, 84, 85, 86, 95, 96], "b": [0, 43, 45, 77, 78, 81, 82, 83, 84, 85, 88, 96], "h": [0, 24, 25, 28, 29, 30, 43, 49, 50, 52, 59, 77, 81, 82, 84, 95, 96], "e": [0, 1, 18, 81, 82, 93, 94, 95], "j": [0, 1, 18, 43, 81, 82, 93, 94, 95], "omega": [0, 19, 68, 70, 71, 81, 82, 83, 95], "step": [0, 18, 21, 23, 24, 33, 43, 56, 68, 73, 75, 81, 85], "zero": [0, 40, 43, 44, 58, 59, 79, 81, 82, 83, 84, 85, 86, 88, 93, 95, 96], "pole": [0, 43, 44, 54, 81, 82, 83, 84, 85, 88, 93], "frequency_respons": [0, 24, 28, 29, 43, 49, 50, 82, 93, 94, 95, 96, 97], "group_delai": [0, 83, 93, 94, 97], "group": [0, 83], "delai": [0, 18, 24, 26, 36, 59, 68, 83, 95], "tau_g": [0, 83], "impulse_respons": [0, 24, 30, 43, 52, 77, 84, 89, 90, 93, 94, 96, 97], "step_respons": [0, 24, 33, 43, 56, 85, 93, 94, 95, 97], "zeros_pol": [0, 88, 94, 97], "kwarg": [0, 82, 83, 84, 85, 86, 88], "sdr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99], "loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97, 98], "thi": [1, 21, 24, 43, 73, 81, 82, 83, 84, 85, 88, 92, 94, 95, 96], "i": [1, 8, 17, 24, 30, 33, 34, 36, 41, 43, 52, 56, 57, 59, 62, 63, 66, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99], "meant": 1, "analysi": [1, 8, 95, 98], "onli": [1, 24, 32, 36, 40, 43, 55, 95], "block": [1, 18, 59, 68], "diagram": [1, 18, 59, 68], "bb": [1, 95], "ped": [1, 7, 8, 62, 95], "lf": [1, 95], "lo": [1, 95], "input": [1, 9, 11, 14, 15, 18, 21, 24, 25, 27, 30, 33, 36, 37, 39, 40, 43, 44, 45, 48, 52, 56, 59, 64, 68, 73, 79, 84, 85, 91, 93, 94, 95], "local": [1, 95], "baseband": [1, 95], "phase": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "error": [1, 7, 8, 14, 59, 62, 95], "detector": [1, 7, 8, 62, 95], "filter": [1, 5, 6, 8, 10, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 81, 82, 83, 84, 85, 86, 88, 89, 90, 96, 97, 98], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99], "transfer": [1, 10, 24, 43, 44, 59, 77, 93, 94, 95], "function": [1, 10, 24, 43, 44, 59, 77, 93, 94, 95, 96, 97], "h_": [1, 95], "z": [1, 18, 24, 43, 59, 68, 93, 94, 95], "k_1": [1, 5, 59, 60, 95], "k_2": [1, 6, 59, 61, 95], "frac": [1, 9, 11, 14, 15, 43, 59, 76, 77, 80, 95], "k_0": [1, 4, 8, 19, 62, 68, 69, 70, 95], "k_p": [1, 7, 8, 62, 95], "2": [1, 9, 11, 14, 28, 29, 49, 50, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "refer": [1, 9, 11, 12, 13, 14, 15, 36, 59, 76, 77, 80, 89, 90, 94, 96], "michael": [1, 9, 11, 12, 13, 14, 15, 59, 89, 90], "rice": [1, 9, 11, 12, 13, 14, 15, 59, 89, 90], "commun": [1, 9, 11, 12, 13, 14, 15, 59, 89, 90, 95, 97], "discret": [1, 9, 11, 12, 13, 14, 15, 59, 89, 90, 92, 95], "time": [1, 8, 9, 11, 12, 13, 14, 15, 24, 43, 59, 62, 76, 77, 80, 81, 86, 89, 90, 92, 93, 94, 96], "approach": [1, 9, 11, 12, 13, 14, 15, 59, 89, 90, 95], "appendix": [1, 59, 89, 90], "c": [1, 9, 11, 12, 13, 14, 15, 59, 95], "lock": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 97], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 89, 90, 97], "noise_bandwidth": [1, 8, 59, 62, 66], "damping_factor": [1, 8, 59, 62, 63], "creat": [1, 8, 18, 19, 24, 25, 36, 37, 43, 44, 45, 59, 62, 68, 70, 86, 92, 95, 96], "object": [1, 8, 94, 95], "frequency_lock_tim": [1, 9], "freq_offset": [1, 9, 11], "frequenc": [1, 9, 11, 13, 24, 28, 29, 43, 49, 50, 59, 81, 82, 83, 96], "lock_tim": [1, 11, 95], "phase_error_vari": [1, 14], "cn0": [1, 14], "varianc": [1, 14], "steadi": [1, 14], "state": [1, 14, 24, 32, 34, 36, 40, 41, 43, 55, 57], "phase_lock_tim": [1, 15], "bn": [1, 2], "nois": [1, 2, 3, 8, 14, 59, 62, 66, 95], "bandwidth": [1, 2, 3, 8, 12, 59, 62, 66, 77, 89, 90, 95, 96], "b_n": [1, 2, 3, 8, 9, 11, 14, 15, 59, 62, 66], "hz": [1, 2, 8, 9, 11, 14, 28, 29, 49, 50, 59, 62, 66, 77, 92], "bnt": [1, 3, 95], "normal": [1, 3, 8, 59, 62, 66, 77, 95, 96], "t": [1, 3, 8, 59, 62, 66, 77, 78, 92], "repres": [1, 10], "k0": [1, 4, 8, 18, 19, 62, 68, 69, 70], "gain": [1, 4, 5, 6, 7, 8, 18, 19, 43, 44, 51, 59, 60, 61, 62, 68, 69, 70, 77, 95], "k1": [1, 5, 59, 60, 95], "k2": [1, 6, 59, 61, 95], "kp": [1, 7, 8, 62], "omega_3db": [1, 12], "3": [1, 9, 11, 12, 15, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 91, 94, 95, 96, 97, 98], "db": [1, 12, 14, 77, 80, 96], "omega_": [1, 12], "textrm": [1, 12], "radian": [1, 12, 13, 14, 18, 19, 95], "omega_n": [1, 13, 95], "natur": [1, 13], "sampl": [1, 8, 16, 18, 19, 21, 23, 24, 26, 28, 29, 30, 33, 36, 40, 49, 50, 52, 56, 59, 62, 66, 68, 70, 71, 73, 75, 77, 81, 82, 83, 84, 85, 86, 89, 90, 92, 95, 96], "rate": [1, 8, 16, 28, 29, 36, 39, 49, 50, 81, 82, 83, 86], "f_": [1, 8, 16, 28, 29, 49, 50, 77, 81, 82, 83, 86, 92, 93, 94, 95, 96], "zeta": [1, 8, 17, 59, 62, 63], "damp": [1, 8, 17, 59, 62, 63, 95], "properti": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 17, 20, 26, 31, 34, 35, 38, 41, 42, 46, 47, 51, 53, 54, 57, 58, 60, 61, 63, 65, 66, 69, 71, 72], "paramet": [8, 9, 11, 14, 19, 21, 23, 25, 27, 28, 29, 30, 33, 37, 39, 40, 44, 45, 48, 49, 50, 52, 56, 62, 64, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91], "where": [8, 59, 62, 66, 77, 93, 94, 97], "period": [8, 59, 62, 66], "second": [8, 9, 11, 15, 59, 62, 66, 77], "critic": [8, 17, 59, 62, 63, 95], "underdamp": [8, 17, 59, 62, 63], "overdamp": [8, 17, 59, 62, 63], "ted": [8, 62], "t_": [9, 11, 15, 39, 77, 96], "fl": [9, 11], "4": [9, 11, 29, 50, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98], "delta": [9, 11, 24, 30, 43, 52, 84, 93, 94], "f": [9, 11, 24, 28, 29, 43, 49, 50, 77, 92, 93, 94, 95, 96], "offset": [9, 11, 18, 19, 68, 70, 72, 95], "take": [9, 11, 15], "onto": [9, 11, 15], "equat": [9, 11, 12, 13, 14, 15, 43], "39": 9, "pl": [11, 15], "38": 11, "34": 12, "33": 13, "sigma_": 14, "theta_": 14, "n_0": 14, "carrier": 14, "densiti": [14, 96], "43": 14, "40": 15, "less": 17, "than": 17, "greater": 17, "note": [18, 24, 43, 59, 68, 76, 77, 80], "increment": [18, 19, 21, 68, 70, 71, 73, 95], "v": [18, 68], "y": [18, 21, 23, 24, 27, 39, 43, 48, 59, 64, 68, 73, 75, 86, 95], "output": [18, 21, 23, 24, 30, 33, 43, 44, 45, 52, 56, 59, 64, 68, 73, 75, 79, 84, 85, 91, 92, 93, 94, 95], "complex": [18, 21, 23, 92, 93, 94], "exponenti": [18, 21, 23, 92, 93, 94], "constant": [18, 19, 59, 68, 70, 71, 94, 95], "accumul": [18, 19, 68, 70, 71, 95], "absolut": [18, 19, 68, 70, 72], "unit": [18, 24, 33, 43, 56, 59, 68, 70, 71, 72, 85, 89, 90, 93, 94, 95], "adder": [18, 59, 68, 95], "process": [18, 21, 68, 73, 94, 95], "variabl": [18, 21, 68, 73, 78, 95], "reset": [18, 22, 24, 32, 36, 40, 43, 55, 59, 67, 68, 74], "forward": [18, 23, 68, 75], "us": [18, 20, 25, 36, 37, 44, 45, 59, 65, 78, 79, 81, 84, 85, 91, 93, 94, 96, 97, 99], "theta": [19, 68, 70, 72], "vari": [21, 73], "number": [23, 28, 29, 30, 33, 49, 50, 52, 56, 75, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91], "wrapper": [24, 43], "scipi": [24, 27, 43, 96, 97], "convolv": [24, 27, 86], "It": [24, 43, 59], "support": [24, 43], "one": [24, 43, 77, 78, 81, 82, 83, 93, 94, 96], "stream": [24, 25, 32, 34, 36, 37, 40, 41, 43, 44, 45, 55, 57], "its": [24, 43, 44, 93, 94, 96], "feedforward": [24, 25, 35, 43, 45, 47, 81, 82, 83, 84, 85, 88, 93, 94], "coeffici": [24, 25, 43, 45, 81, 82, 83, 84, 85, 88, 93, 94], "h_i": [24, 25, 35, 93], "sum_": [24, 43, 76, 80], "sum": [24, 43, 96], "limits_": [24, 43], "bool": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "fals": [24, 25, 36, 37, 43, 44, 45, 94, 96], "tupl": [24, 28, 29, 43, 49, 50], "frequency_response_log": [24, 29, 43, 50], "logarithm": [24, 29, 43, 50, 81, 82, 83, 93, 94], "axi": [24, 29, 43, 50, 81, 82, 83, 86, 92], "none": [24, 30, 33, 36, 40, 59, 67, 79, 81, 84, 85, 91, 92], "when": [24, 30, 33, 43, 52, 56, 81, 82, 83, 84, 85, 92, 93, 94], "mode": [24, 25, 27, 32, 34, 36, 37, 40, 41, 43, 44, 45, 55, 57], "u": [24, 33, 43, 56, 85, 93, 94], "indic": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "whether": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "tap": [24, 35, 36, 42, 43, 46, 47, 93, 94], "In": [25, 34, 37, 41, 44, 45, 57, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "previou": [25, 37, 40, 44, 45], "ar": [25, 29, 37, 44, 45, 50, 79, 81, 82, 83, 87, 92, 94, 95, 96, 97, 99], "preserv": [25, 34, 37, 41, 44, 45, 57], "between": [25, 34, 37, 41, 44, 45, 57, 95], "call": [25, 34, 37, 41, 44, 45, 57], "liter": [27, 82, 83], "full": 27, "valid": 27, "same": [27, 93], "convolut": 27, "detail": 27, "1024": [28, 29, 49, 50, 81, 82, 83, 96], "from": [28, 29, 43, 44, 49, 50, 93, 94, 95, 97], "plot": [28, 29, 30, 33, 49, 50, 52, 56, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97], "decad": [29, 50, 81, 82, 83, 93, 95], "space": [29, 50], "length": [30, 33, 77, 81, 84, 85, 89, 90, 92, 96], "resampl": [36, 37, 38, 39, 40, 41, 42, 97, 98], "http": [36, 76, 77, 80], "wirelesspi": 36, "com": [36, 77], "fraction": [36, 40, 77, 92], "structur": 36, "new": [36, 37], "given": [36, 39, 93, 94], "r": [36, 39, 77, 89, 90, 94, 95, 96], "index": [36, 40], "vector": 40, "should": 40, "equal": 40, "three": [40, 92, 96], "If": [40, 79, 81, 84, 85, 86, 91, 97], "lfilter": 43, "b_i": [43, 45, 47, 81, 82, 83, 84, 85, 88, 94], "feedback": [43, 45, 46, 81, 82, 83, 84, 85, 88, 94], "a_j": [43, 45, 46, 81, 82, 83, 84, 85, 88, 94], "These": [43, 87, 95], "differ": [43, 96], "a_0": 43, "left": [43, 76, 77, 80], "m": 43, "right": [43, 76, 77, 80], "classmethod": [43, 44], "zerospol": [43, 44, 81, 82, 83, 84, 85, 88, 94], "self": [43, 44], "100": [43, 52, 56, 81, 84, 85, 86, 92], "a_tap": [43, 46, 81, 82, 83, 84, 85, 88, 94, 95], "b_tap": [43, 47, 81, 82, 83, 84, 85, 88, 94, 95], "can": [59, 77, 79, 93, 94, 99], "track": 59, "cannot": 59, "howev": [59, 92], "chirp": 59, "ramp": 59, "underli": [59, 65], "measur": [76, 80, 95, 97], "domain": [76, 80, 81, 86], "text": [76, 80], "cf": 76, "v_": 76, "rm": 76, "max": [76, 80], "sqrt": [76, 77, 95, 96], "en": [76, 80], "wikipedia": [76, 80], "org": [76, 80], "wiki": [76, 80], "puls": [77, 86, 89, 90, 97], "shape": [77, 86, 89, 90, 97], "product": [77, 96], "sym": [77, 96], "side": [77, 81, 82, 83, 93, 94, 96], "symbol": [77, 89, 90, 96], "also": [77, 97], "thought": [77, 99], "smaller": [77, 96], "valu": [77, 94], "produc": [77, 96], "wider": 77, "must": [77, 89, 90], "even": [77, 89, 90], "amplitud": [77, 92, 95], "so": [77, 97], "nomin": 77, "passband": 77, "ha": [77, 95, 96], "exp": [77, 81, 82, 83, 84, 85, 86, 88, 92, 94, 95], "relat": 77, "ln": 77, "pi": [77, 81, 82, 83, 84, 85, 86, 88, 92, 93, 94, 95], "www": 77, "mathwork": 77, "help": 77, "ref": 77, "gaussdesign": 77, "html": 77, "onlinelibrari": 77, "wilei": 77, "doi": 77, "pdf": 77, "10": [77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96], "1002": 77, "9780470041956": 77, "app2": 77, "h_0p1": [77, 89, 90], "5": [77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98], "h_0p2": 77, "h_0p3": 77, "plt": [77, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96], "figur": [77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96], "figsiz": [77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96], "8": [77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96], "label": [77, 86, 89, 90, 92, 95, 96], "show": [77, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96], "data": [78, 79, 91, 97], "displai": [78, 81, 82, 83], "each": 78, "consid": 78, "convert": 78, "line": 78, "string": 78, "contain": 78, "print": [78, 92, 93, 94, 95], "quick": 78, "brown": 78, "fox": 78, "jump": 78, "over": 78, "lazi": 78, "dog": 78, "00000000": 78, "54": 78, "68": 78, "65": 78, "20": [78, 96], "71": 78, "75": [78, 95], "69": 78, "63": 78, "6b": 78, "62": 78, "72": 78, "6f": 78, "77": 78, "6e": 78, "00000010": 78, "66": 78, "78": 78, "6a": 78, "6d": 78, "70": [78, 96], "73": 78, "76": 78, "74": 78, "00000020": 78, "6c": 78, "61": 78, "7a": 78, "79": 78, "64": [78, 94], "67": 78, "he": 78, "6": [78, 81, 82, 83, 84, 85, 86, 88, 93, 94, 95], "7": [78, 86], "9": [78, 89, 90, 96, 98], "01": [78, 94, 95], "02": [78, 94, 95], "03": [78, 94], "04": [78, 94], "00000004": 78, "05": [78, 92, 94, 95], "06": 78, "07": 78, "08": 78, "00000008": 78, "09": 78, "0a": 78, "dtype": [79, 86, 91, 95], "dtypelik": [79, 91], "assum": [79, 91], "have": [79, 91], "most": [79, 91], "signific": [79, 91], "first": [79, 91], "enough": 79, "fill": 79, "last": 79, "remain": 79, "type": [79, 82, 83, 91], "smallest": 79, "unsign": 79, "integ": 79, "hold": 79, "out": [79, 87, 91], "uint8": [79, 91], "log_": 80, "p_": 80, "avg": 80, "n_time": [81, 94], "n_freq": 81, "x_axi": [81, 82, 83, 93, 94, 95], "two": [81, 82, 83, 92, 93, 94], "log": [81, 82, 83, 93, 94, 95], "For": [81, 82, 83, 84, 85, 88, 93], "set": [81, 82, 83, 84, 85, 87, 88, 94], "n_t": 81, "n_f": 81, "scale": [81, 82, 83, 93, 94], "option": [81, 82, 83], "spectrum": [81, 82, 83], "h_srrc": [81, 82, 83, 84, 85, 86, 88], "np": [81, 82, 83, 84, 85, 86, 88, 92, 93, 94, 95, 96], "1j": [81, 82, 83, 84, 85, 86, 88, 92, 94, 95], "conj": [81, 82, 83, 84, 85, 88, 94, 95], "30": [81, 84, 85, 94], "addit": [82, 83, 84, 85, 86, 88], "keyword": [82, 83, 84, 85, 86, 88, 93, 94], "argument": [82, 83, 84, 85, 86, 88, 93, 94], "pass": [82, 83, 84, 85, 86, 88, 93, 94], "pyplot": [82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96], "ylim": [83, 93, 95, 96], "48": 83, "52": 83, "bpsk": 86, "1000": 86, "symbol_map": 86, "random": 86, "randint": 86, "10e3": 86, "titl": [86, 92, 95, 96], "tight_layout": [86, 95, 96], "qpsk": 86, "complex64": [86, 95], "style": 87, "mai": [87, 94], "revert": 87, "rcdefault": 87, "follow": [87, 95], "_rc_param": 87, "rc_param": 87, "ax": [87, 92, 95], "grid": [87, 92, 95, 96], "true": 87, "autolayout": 87, "max_open_warn": 87, "titleweight": 87, "bold": 87, "linestyl": [87, 92, 95, 96], "excess": [89, 90, 96], "le": [89, 90], "energi": [89, 90], "h_0p5": [89, 90], "h_0p9": [89, 90], "numpi": [91, 92, 93, 94, 95, 96, 97], "import": [92, 93, 94, 95, 96, 97], "config": [92, 93, 94, 95, 96], "inlinebackend": [92, 93, 94, 95, 96], "print_figure_kwarg": [92, 93, 94, 95, 96], "facecolor": [92, 93, 94, 95, 96], "w": [92, 93, 94, 95, 96], "widget": [92, 93, 94, 95, 96], "color": [92, 95, 96], "prop_cycl": [92, 95], "by_kei": [92, 95], "continu": 92, "freq": [92, 95], "tx": 92, "arang": [92, 95], "decai": [92, 94], "real": [92, 93, 94, 95], "marker": [92, 93, 94], "o": 92, "fillstyl": 92, "imag": 92, "xlabel": [92, 95, 96], "ylabel": [92, 95, 96], "origin": 92, "legend": [92, 95, 96], "which": [92, 95, 96], "both": [92, 95], "now": 92, "equival": 92, "accomplish": 92, "librari": [92, 97, 99], "def": 92, "resample_sign": 92, "new_sample_r": 92, "ty": 92, "size": [92, 95, 96], "notic": [92, 96], "everi": 92, "200": 92, "four": 92, "400": 92, "other": [92, 99], "appear": 92, "50": 92, "fourth": 92, "25": [92, 95, 96], "roughli": 92, "often": 92, "do": 92, "align": 92, "315": 92, "32": 92, "user": [93, 94], "below": [93, 94], "comput": [93, 94, 95, 96], "method": [93, 94], "00095881": 93, "00175008": 93, "00423912": 93, "00588237": 93, "00615087": 93, "00474585": 93, "00170436": 93, "0025481": 93, "00721629": 93, "01123216": 93, "01342329": 93, "01273174": 93, "00845039": 93, "00043678": 93, "01073645": 93, "02372925": 93, "03650167": 93, "04650553": 93, "05098414": 93, "04734541": 93, "03355823": 93, "00851466": 93, "0276993": 93, "07367186": 93, "12670168": 93, "18306847": 93, "2381038": 93, "28726435": 93, "32607284": 93, "3509308": 93, "35948882": 93, "conveni": [93, 94], "evalu": [93, 94], "shift": [93, 94], "envelop": [93, 94], "through": [93, 94, 95], "easili": [93, 94], "here": [93, 94], "12": 93, "altern": 94, "conjug": 94, "0x000002214b040a88": 94, "47820725": 94, "00000000e": 94, "00": 94, "78207252e": 94, "58172329e": 94, "10862468e": 94, "86109590e": 94, "21565653e": 94, "01140214e": 94, "57286400e": 94, "67772160e": 94, "47338728e": 94, "10422993e": 94, "89312837e": 94, "12240078e": 94, "03953322e": 94, "69685122e": 94, "63882791e": 94, "81474977e": 94, "47193366e": 94, "85259041e": 94, "15647504e": 94, "23851924e": 94, "42176895e": 94, "84684395e": 94, "42721858e": 94, "72236648e": 94, "14721649e": 94, "10813095e": 94, "94024315e": 94, "78877688e": 94, "74077567e": 94, "87820725": 94, "53637958": 94, "94724205": 94, "13335164": 94, "1455082": 94, "04436799": 94, "88708159": 94, "71930943": 94, "5719707": 94, "46154771": 94, "39261642": 94, "36139242": 94, "35935288": 94, "3763214": 94, "40270968": 94, "43085717": 94, "45557651": 94, "47410241": 94, "48566716": 94, "49090568": 94, "49124786": 94, "48840102": 94, "4839738": 94, "47925143": 94, "47510421": 94, "47199608": 94, "47005584": 94, "46917696": 94, "46911955": 94, "denomin": 94, "73910363": 94, "30614675j": 94, "plane": 94, "linspac": 94, "endpoint": 94, "concaten": 94, "0x000002214dc574c8": 94, "lyon": 94, "understand": 94, "3rd": 94, "edit": 94, "section": [94, 95], "insid": 94, "circl": 94, "sinusoid": 94, "outsid": 94, "unstabl": 94, "increas": 94, "configur": 95, "0x00000290f1ce3488": 95, "theta_0": 95, "phase_error": 95, "freq_estim": 95, "estim": 95, "rang": 95, "subplot": 95, "suptitl": 95, "ones": 95, "angl": 95, "part": 95, "unwrap": 95, "system": [95, 97], "avail": 95, "500": 95, "rf": 95, "xlim": [95, 96], "001": 95, "005": 95, "b_nt": 95, "0005": 95, "00001": 95, "0125": 95, "015": 95, "0175": 95, "t_lock": 95, "rectangular": 96, "rect": 96, "achiev": 96, "rc_0p1": 96, "rc_0p5": 96, "rc_0p9": 96, "k": 96, "nyquist": 96, "mean": 96, "adjac": 96, "specif": 96, "pm": 96, "roll": 96, "60": 96, "total": 96, "nearli": 96, "compar": 96, "null": 96, "while": 96, "small": 96, "lobe": 96, "much": 96, "higher": 96, "spectral": 96, "h_rect": 96, "freqz": 96, "worn": 96, "whole": 96, "h_rc_0p1": 96, "h_rc_0p5": 96, "h_rc_0p9": 96, "rel": 96, "main": 96, "p_rect": 96, "log10": 96, "cumsum": 96, "ab": 96, "p_rc_0p1": 96, "p_rc_0p5": 96, "p_rc_0p9": 96, "One": 96, "within": 96, "variou": 96, "srrc_0p1": 96, "srrc_0p5": 96, "srrc_0p9": 96, "therefor": 96, "similar": 96, "significantli": 96, "due": 96, "being": 96, "h_srrc_0p1": 96, "h_srrc_0p5": 96, "h_srrc_0p9": 96, "p_srrc_0p1": 96, "p_srrc_0p5": 96, "p_srrc_0p9": 96, "gauss_0p1": 96, "gauss_0p2": 96, "gauss_0p3": 96, "python": 97, "packag": 97, "softwar": 97, "radio": 97, "goal": 97, "provid": 97, "tool": 97, "design": 97, "build": 97, "analyz": 97, "reli": 97, "interoper": 97, "veri": 97, "possibl": 97, "numba": 97, "acceler": 97, "computation": 97, "intens": 97, "addition": 97, "aim": 97, "replic": 97, "relev": 97, "matlab": 97, "dsp": 97, "toolbox": 97, "we": 97, "progress": 97, "ad": [97, 98], "someth": 97, "you": 97, "d": 97, "like": 97, "includ": 97, "pleas": 97, "open": 97, "issu": 97, "github": 97, "manipul": 97, "util": 97, "releas": 98, "juli": 98, "2023": 98, "matt": 98, "hostett": 98, "mhostett": 98, "semant": 99, "major": 99, "minor": 99, "patch": 99, "introduc": 99, "api": 99, "chang": 99, "featur": 99, "add": 99, "backward": 99, "compat": 99, "make": 99, "bug": 99, "fix": 99, "befor": 99, "There": 99, "guarante": 99, "them": 99, "thei": 99}, "objects": {"": [[0, 0, 0, 1, "sdr", ""]], "sdr": [[1, 1, 1, "", "ClosedLoopPLL", "A class that defines the performance of a closed-loop PLL."], [18, 1, 1, "", "DDS", "Implements a direct digital synthesizer (DDS)."], [24, 1, 1, "", "FIR", "Implements a finite impulse response (FIR) filter."], [36, 1, 1, "", "FarrowResampler", "Implements a cubic Farrow arbitrary resampler."], [43, 1, 1, "", "IIR", "Implements an infinite impulse response (IIR) filter."], [59, 1, 1, "", "LoopFilter", "Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."], [68, 1, 1, "", "NCO", "Implements a numerically-controlled oscillator (NCO)."], [76, 5, 1, "", "crest_factor", "Measures the crest factor of a signal."], [77, 5, 1, "", "gaussian", "Returns a Gaussian pulse shape."], [78, 5, 1, "", "hexdump", "Returns a hexdump of the specified data."], [79, 5, 1, "", "pack", "Packs a binary array into an array with multiple bits per element."], [80, 5, 1, "", "papr", "Measures the peak-to-average power ratio (PAPR) of a signal."], [89, 5, 1, "", "raised_cosine", "Returns a raised cosine (RC) pulse shape."], [90, 5, 1, "", "root_raised_cosine", "Returns a square root raised cosine (SRRC) pulse shape."], [91, 5, 1, "", "unpack", "Unpacks an array with multiple bits per element into a binary array."]], "sdr.ClosedLoopPLL": [[2, 2, 1, "", "Bn", "The noise bandwidth $B_n$ of the PLL in Hz."], [3, 2, 1, "", "BnT", "The normalized noise bandwidth $B_n T$ of the PLL."], [4, 2, 1, "", "K0", "The NCO gain $K_0$."], [5, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [6, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [7, 2, 1, "", "Kp", "The phase error detector (PED) gain $K_p$."], [8, 3, 1, "", "__init__", "Creates a closed-loop PLL analysis object."], [9, 3, 1, "", "frequency_lock_time", "Returns the frequency lock time of the PLL."], [10, 2, 1, "", "iir", "The IIR filter that represents the closed-loop transfer function of the PLL."], [11, 3, 1, "", "lock_time", "Returns the lock time of the PLL."], [12, 2, 1, "", "omega_3dB", "The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."], [13, 2, 1, "", "omega_n", "The natural frequency $omega_n$ of the PLL in radians/s."], [14, 3, 1, "", "phase_error_variance", "Returns the variance of the phase error of the PLL in steady state."], [15, 3, 1, "", "phase_lock_time", "Returns the phase lock time of the PLL."], [16, 2, 1, "", "sample_rate", "The sample rate $f_s$ of the PLL in samples/s."], [17, 2, 1, "", "zeta", "The damping factor $zeta$ of the PLL."]], "sdr.ClosedLoopPLL.__init__": [[8, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [8, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [8, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [8, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [8, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the PLL in Hz."]], "sdr.ClosedLoopPLL.frequency_lock_time": [[9, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.lock_time": [[11, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.phase_error_variance": [[14, 4, 2, "p-cn0", "cn0", "The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]], "sdr.DDS": [[19, 3, 1, "", "__init__", "Creates a direct digital synthesizer (DDS)."], [20, 2, 1, "", "nco", "The numerically-controlled oscillator (NCO) used by the DDS."], [21, 3, 1, "", "process", "Steps the DDS with the variable phase increment signal $x[n]$."], [22, 3, 1, "", "reset", "Resets the DDS."], [23, 3, 1, "", "step", "Steps the DDS forward by $N$ samples."]], "sdr.DDS.__init__": [[19, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [19, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in radians/sample."], [19, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in radians."]], "sdr.DDS.process": [[21, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the DDS."]], "sdr.DDS.step": [[23, 4, 2, "p-N", "N", "The number of samples $N$ to step the DDS forward."]], "sdr.FIR": [[25, 3, 1, "", "__init__", "Creates a FIR filter with feedforward coefficients $h_i$."], [26, 2, 1, "", "delay", "The delay of the FIR filter in samples."], [27, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the FIR filter."], [28, 3, 1, "", "frequency_response", "Returns the frequency response $H(f)$ of the FIR filter."], [29, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(f)$ of the FIR filter on a logarithmic frequency axis."], [30, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the FIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [31, 2, 1, "", "order", "The order of the FIR filter, $N$."], [32, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [33, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the FIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [34, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [35, 2, 1, "", "taps", "The feedforward taps $h_i$."]], "sdr.FIR.__init__": [[25, 4, 2, "p-h", "h", "The feedforward coefficients $h_i$."], [25, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."]], "sdr.FIR.filter": [[27, 4, 2, "p-mode", "mode", "The convolution mode. See scipy.signal.convolve() for details."], [27, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.FIR.frequency_response": [[28, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [28, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.FIR.frequency_response_log": [[29, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [29, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [29, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.FIR.impulse_response": [[30, 4, 2, "p-N", "N", "The number of samples to return. The default is the filter length."]], "sdr.FIR.step_response": [[33, 4, 2, "p-N", "N", "The number of samples to return. The default is the filter length."]], "sdr.FarrowResampler": [[37, 3, 1, "", "__init__", "Creates a new Farrow arbitrary resampler."], [38, 2, 1, "", "order", "The order of the filter."], [39, 3, 1, "", "resample", "Resamples the input signal $x[n]$ by the given arbitrary rate $r$."], [40, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state and fractional sample index."], [41, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [42, 2, 1, "", "taps", "The Farrow filter taps."]], "sdr.FarrowResampler.__init__": [[37, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to resample()."]], "sdr.FarrowResampler.resample": [[39, 4, 2, "p-rate", "rate", "The resampling rate $r$."], [39, 4, 2, "p-x", "x", "The input signal $x[n] = x(n T_s)$."]], "sdr.FarrowResampler.reset": [[40, 4, 2, "p-state", "state", "The filter state to reset to. The state vector should equal the previous three inputs. If None, the filter state will be reset to zero."]], "sdr.IIR": [[44, 3, 1, "", "ZerosPoles", "Creates an IIR filter from its zeros, poles, and gain."], [45, 3, 1, "", "__init__", "Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."], [46, 2, 1, "", "a_taps", "The feedback taps $a_j$."], [47, 2, 1, "", "b_taps", "The feedforward taps $b_i$."], [48, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the IIR filter."], [49, 3, 1, "", "frequency_response", "Returns the frequency response $H(f)$ of the IIR filter."], [50, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(f)$ of the IIR filter on a logarithmic frequency axis."], [51, 2, 1, "", "gain", "The gain of the IIR filter."], [52, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the IIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [53, 2, 1, "", "order", "The order of the IIR filter, $N$."], [54, 2, 1, "", "poles", "The poles of the IIR filter."], [55, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [56, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the IIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [57, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [58, 2, 1, "", "zeros", "The zeros of the IIR filter."]], "sdr.IIR.ZerosPoles": [[44, 4, 2, "p-gain", "gain", "The gain of the transfer function."], [44, 4, 2, "p-poles", "poles", "The poles of the transfer function."], [44, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."], [44, 4, 2, "p-zeros", "zeros", "The zeros of the transfer function."]], "sdr.IIR.__init__": [[45, 4, 2, "p-a", "a", "The feedback coefficients $a_j$."], [45, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [45, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."]], "sdr.IIR.filter": [[48, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.IIR.frequency_response": [[49, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [49, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.frequency_response_log": [[50, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [50, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [50, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.impulse_response": [[52, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.IIR.step_response": [[56, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.LoopFilter": [[60, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [61, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [62, 3, 1, "", "__init__", "Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."], [63, 2, 1, "", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [64, 3, 1, "", "filter", "Filters the input signal $x[n]$."], [65, 2, 1, "", "iir", "The underlying IIR filter used to implement the loop filter."], [66, 2, 1, "", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [67, 3, 1, "", "reset", "Resets the loop filter."]], "sdr.LoopFilter.__init__": [[62, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [62, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [62, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [62, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]], "sdr.LoopFilter.filter": [[64, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.NCO": [[69, 2, 1, "", "K0", "The NCO gain $K_0$."], [70, 3, 1, "", "__init__", "Creates a numerically-controlled oscillator (NCO)."], [71, 2, 1, "", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [72, 2, 1, "", "offset", "The absolute offset $theta$ of the NCO in units."], [73, 3, 1, "", "process", "Steps the NCO with the variable-increment signal $x[n]$."], [74, 3, 1, "", "reset", "Resets the NCO."], [75, 3, 1, "", "step", "Steps the NCO forward by $N$ samples."]], "sdr.NCO.__init__": [[70, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [70, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [70, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in units."]], "sdr.NCO.process": [[73, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the NCO."]], "sdr.NCO.step": [[75, 4, 2, "p-N", "N", "The number of samples $N$ to step the NCO forward."]], "sdr.crest_factor": [[76, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.gaussian": [[77, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [77, 4, 2, "p-sps", "sps", "The number of samples per symbol."], [77, 4, 2, "p-time_bandwidth", "time_bandwidth", "The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds. The time-bandwidth product can also be thought of as the fractional bandwidth $B / f_{sym}$. Smaller values produce wider pulses."]], "sdr.hexdump": [[78, 4, 2, "p-data", "data", "The data to display. Each element is considered one byte. Use sdr.pack() or sdr.unpack() to convert data with variable bits per element."], [78, 4, 2, "p-width", "width", "The number of bytes per line."]], "sdr.pack": [[79, 4, 2, "p-bpe", "bpe", "The number of bits per element in the output array."], [79, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, the smallest unsigned integer dtype that can hold bpe bits is used."], [79, 4, 2, "p-x", "x", "The input binary array with 1 bit per element."]], "sdr.papr": [[80, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.plot": [[81, 5, 1, "", "filter", "Plots the frequency response $H(e^{jomega})$, impulse response $h[n]$, step response $s[n]$, and zeros and poles of the filter."], [82, 5, 1, "", "frequency_response", "Plots the frequency response $H(e^{jomega})$ of the filter."], [83, 5, 1, "", "group_delay", "Plots the group delay $tau_g(omega)$ of the IIR filter."], [84, 5, 1, "", "impulse_response", "Plots the impulse response $h[n]$ of a filter."], [85, 5, 1, "", "step_response", "Plots the step response $s[n]$ of a filter."], [86, 5, 1, "", "time_domain", "Plots a time-domain signal $x[n]$."], [87, 5, 1, "", "use_style", "Applies sdr's default matplotlib rcParams."], [88, 5, 1, "", "zeros_poles", "Plots the zeros and poles of the filter."]], "sdr.plot.filter": [[81, 4, 2, "p-N_freq", "N_freq", "The number of samples $N_f$ in the frequency response."], [81, 4, 2, "p-N_time", "N_time", "The number of samples $N_t$ in the time domain. If None, the length of b is used for FIR filters and 100 for IIR filters."], [81, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [81, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [81, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [81, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [81, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.frequency_response": [[82, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [82, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [82, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [82, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [82, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [82, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.group_delay": [[83, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [83, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [83, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [83, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [83, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [83, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.impulse_response": [[84, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [84, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [84, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.step_response": [[85, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [85, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [85, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.time_domain": [[86, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s. If the sample rate is 1, the x-axis will be label as \"Samples\"."], [86, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."]], "sdr.plot.zeros_poles": [[88, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [88, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.raised_cosine": [[89, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [89, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [89, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.root_raised_cosine": [[90, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [90, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [90, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.unpack": [[91, 4, 2, "p-bpe", "bpe", "The number of bits per element in the input array."], [91, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, numpy.uint8 is used."], [91, 4, 2, "p-x", "x", "The input array with bpe bits per element."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:parameter", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"]}, "titleterms": {"sdr": [0, 97], "filter": [0, 93, 94, 95], "puls": [0, 96], "shape": [0, 96], "resampl": [0, 92], "phase": [0, 95], "time": [0, 95], "lock": [0, 95], "loop": [0, 95], "measur": 0, "data": 0, "manipul": 0, "plot": 0, "configur": 0, "domain": [0, 95], "frequenc": [0, 93, 94, 95], "analysi": 0, "note": 1, "constructor": [1, 18, 24, 36, 43, 59, 68], "method": [1, 18, 24, 36, 43, 59, 68], "properti": [1, 18, 24, 36, 43, 59, 68], "see": [18, 28, 29, 30, 33, 49, 50, 52, 56, 68, 81, 82, 83, 84, 85, 88], "also": [18, 28, 29, 30, 33, 49, 50, 52, 56, 68, 81, 82, 83, 84, 85, 88], "farrow": 92, "arbitrari": 92, "construct": 92, "an": [92, 93, 94], "input": 92, "signal": 92, "x": 92, "n": [92, 93, 94], "t_": 92, "rate": 92, "r": 92, "y": 92, "frac": 92, "upsampl": 92, "integ": 92, "downsampl": 92, "irrat": 92, "fir": 93, "creat": [93, 94], "examin": [93, 94], "impuls": [93, 94], "respons": [93, 94, 95], "h": [93, 94], "step": [93, 94, 95], "": [93, 94], "omega": [93, 94], "group": [93, 94], "delai": [93, 94], "tau_g": [93, 94], "fulli": [93, 94], "analyz": [93, 94, 95], "iir": 94, "zero": 94, "pole": 94, "digit": 94, "stabil": 94, "design": 95, "proport": 95, "plu": 95, "integr": 95, "ppi": 95, "implement": 95, "pll": 95, "close": 95, "perform": 95, "compar": 95, "across": 95, "zeta": 95, "b_n": 95, "t": 95, "rais": 96, "cosin": 96, "squar": 96, "root": 96, "gaussian": 96, "featur": 97, "v0": 98, "0": 98, "1": 98, "chang": 98, "contributor": 98, "version": 99, "alpha": 99, "releas": 99, "beta": 99}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"sdr": [[0, "sdr"], [97, "sdr"]], "Filtering": [[0, "filtering"]], "Pulse shaping": [[0, "pulse-shaping"]], "Resampling": [[0, "resampling"]], "Phase/time-locked loops": [[0, "phase-time-locked-loops"]], "Measurement": [[0, "measurement"]], "Data manipulation": [[0, "data-manipulation"]], "Plotting": [[0, "plotting"]], "Configuration": [[0, "configuration"]], "Time-domain": [[0, "time-domain"]], "Frequency-domain": [[0, "frequency-domain"]], "Filter analysis": [[0, "filter-analysis"]], "Note": [[1, null]], "Constructors": [[1, "constructors"], [18, "constructors"], [24, "constructors"], [36, "constructors"], [43, "constructors"], [59, "constructors"], [68, "constructors"]], "Methods": [[1, "methods"], [18, "methods"], [24, "methods"], [36, "methods"], [43, "methods"], [59, "methods"], [68, "methods"]], "Properties": [[1, "properties"], [18, "properties"], [24, "properties"], [36, "properties"], [43, "properties"], [59, "properties"], [68, "properties"]], "See also": [[18, null], [28, null], [29, null], [30, null], [33, null], [49, null], [50, null], [52, null], [56, null], [68, null], [81, null], [82, null], [83, null], [84, null], [85, null], [88, null]], "Farrow arbitrary resampler": [[92, "farrow-arbitrary-resampler"]], "Construct an input signal, x[n] = x(n T_s)": [[92, "construct-an-input-signal-x-n-x-n-t-s"]], "Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})": [[92, "resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]], "Upsample the signal by an integer rate": [[92, "upsample-the-signal-by-an-integer-rate"]], "Downsample the signal by an integer rate": [[92, "downsample-the-signal-by-an-integer-rate"]], "Upsample by an irrational rate": [[92, "upsample-by-an-irrational-rate"]], "Downsample by an irrational rate": [[92, "downsample-by-an-irrational-rate"]], "FIR filters": [[93, "fir-filters"]], "Create an FIR filter": [[93, "create-an-fir-filter"]], "Examine the impulse response, h[n]": [[93, "examine-the-impulse-response-h-n"], [94, "examine-the-impulse-response-h-n"]], "Examine the step response, s[n]": [[93, "examine-the-step-response-s-n"], [94, "examine-the-step-response-s-n"]], "Examine the frequency response, H(\\omega)": [[93, "examine-the-frequency-response-h-omega"], [94, "examine-the-frequency-response-h-omega"]], "Examine the group delay, \\tau_g(\\omega)": [[93, "examine-the-group-delay-tau-g-omega"], [94, "examine-the-group-delay-tau-g-omega"]], "Fully analyze a FIR filter": [[93, "fully-analyze-a-fir-filter"]], "IIR filters": [[94, "iir-filters"]], "Create an IIR filter": [[94, "create-an-iir-filter"]], "Examine the zeros and poles": [[94, "examine-the-zeros-and-poles"]], "Fully analyze an IIR filter": [[94, "fully-analyze-an-iir-filter"]], "Poles and digital filter stability": [[94, "poles-and-digital-filter-stability"]], "Phase-locked loops": [[95, "phase-locked-loops"]], "Design a proportional-plus-integrator (PPI) loop filter": [[95, "design-a-proportional-plus-integrator-ppi-loop-filter"]], "Implement a PLL in the phase domain": [[95, "implement-a-pll-in-the-phase-domain"]], "Implement a PLL in the time domain": [[95, "implement-a-pll-in-the-time-domain"]], "Analyze PLL closed-loop performance": [[95, "analyze-pll-closed-loop-performance"]], "Compare step and frequency response across \\zeta": [[95, "compare-step-and-frequency-response-across-zeta"]], "Compare step and frequency response across B_n T": [[95, "compare-step-and-frequency-response-across-b-n-t"]], "Compare lock time across B_n T": [[95, "compare-lock-time-across-b-n-t"]], "Pulse shapes": [[96, "pulse-shapes"]], "Raised cosine": [[96, "raised-cosine"]], "Square-root raised cosine": [[96, "square-root-raised-cosine"]], "Gaussian": [[96, "gaussian"]], "Features": [[97, "features"]], "v0.0": [[98, "v0-0"]], "v0.0.1": [[98, "v0-0-1"]], "Changes": [[98, "changes"]], "Contributors": [[98, "contributors"]], "Versioning": [[99, "versioning"]], "Alpha releases": [[99, "alpha-releases"]], "Beta releases": [[99, "beta-releases"]]}, "indexentries": {"module": [[0, "module-sdr"]], "sdr": [[0, "module-sdr"]]}, "docurls": ["api/", "api/sdr.ClosedLoopPLL/", "api/sdr.ClosedLoopPLL.Bn/", "api/sdr.ClosedLoopPLL.BnT/", "api/sdr.ClosedLoopPLL.K0/", "api/sdr.ClosedLoopPLL.K1/", "api/sdr.ClosedLoopPLL.K2/", "api/sdr.ClosedLoopPLL.Kp/", "api/sdr.ClosedLoopPLL.__init__/", "api/sdr.ClosedLoopPLL.frequency_lock_time/", "api/sdr.ClosedLoopPLL.iir/", "api/sdr.ClosedLoopPLL.lock_time/", "api/sdr.ClosedLoopPLL.omega_3dB/", "api/sdr.ClosedLoopPLL.omega_n/", "api/sdr.ClosedLoopPLL.phase_error_variance/", "api/sdr.ClosedLoopPLL.phase_lock_time/", "api/sdr.ClosedLoopPLL.sample_rate/", "api/sdr.ClosedLoopPLL.zeta/", "api/sdr.DDS/", "api/sdr.DDS.__init__/", "api/sdr.DDS.nco/", "api/sdr.DDS.process/", "api/sdr.DDS.reset/", "api/sdr.DDS.step/", "api/sdr.FIR/", "api/sdr.FIR.__init__/", "api/sdr.FIR.delay/", "api/sdr.FIR.filter/", "api/sdr.FIR.frequency_response/", "api/sdr.FIR.frequency_response_log/", "api/sdr.FIR.impulse_response/", "api/sdr.FIR.order/", "api/sdr.FIR.reset/", "api/sdr.FIR.step_response/", "api/sdr.FIR.streaming/", "api/sdr.FIR.taps/", "api/sdr.FarrowResampler/", "api/sdr.FarrowResampler.__init__/", "api/sdr.FarrowResampler.order/", "api/sdr.FarrowResampler.resample/", "api/sdr.FarrowResampler.reset/", "api/sdr.FarrowResampler.streaming/", "api/sdr.FarrowResampler.taps/", "api/sdr.IIR/", "api/sdr.IIR.ZerosPoles/", "api/sdr.IIR.__init__/", "api/sdr.IIR.a_taps/", "api/sdr.IIR.b_taps/", "api/sdr.IIR.filter/", "api/sdr.IIR.frequency_response/", "api/sdr.IIR.frequency_response_log/", "api/sdr.IIR.gain/", "api/sdr.IIR.impulse_response/", "api/sdr.IIR.order/", "api/sdr.IIR.poles/", "api/sdr.IIR.reset/", "api/sdr.IIR.step_response/", "api/sdr.IIR.streaming/", "api/sdr.IIR.zeros/", "api/sdr.LoopFilter/", "api/sdr.LoopFilter.K1/", "api/sdr.LoopFilter.K2/", "api/sdr.LoopFilter.__init__/", "api/sdr.LoopFilter.damping_factor/", "api/sdr.LoopFilter.filter/", "api/sdr.LoopFilter.iir/", "api/sdr.LoopFilter.noise_bandwidth/", "api/sdr.LoopFilter.reset/", "api/sdr.NCO/", "api/sdr.NCO.K0/", "api/sdr.NCO.__init__/", "api/sdr.NCO.increment/", "api/sdr.NCO.offset/", "api/sdr.NCO.process/", "api/sdr.NCO.reset/", "api/sdr.NCO.step/", "api/sdr.crest_factor/", "api/sdr.gaussian/", "api/sdr.hexdump/", "api/sdr.pack/", "api/sdr.papr/", "api/sdr.plot.filter/", "api/sdr.plot.frequency_response/", "api/sdr.plot.group_delay/", "api/sdr.plot.impulse_response/", "api/sdr.plot.step_response/", "api/sdr.plot.time_domain/", "api/sdr.plot.use_style/", "api/sdr.plot.zeros_poles/", "api/sdr.raised_cosine/", "api/sdr.root_raised_cosine/", "api/sdr.unpack/", "examples/farrow-resampler/", "examples/fir-filters/", "examples/iir-filters/", "examples/phase-locked-loop/", "examples/pulse-shapes/", "", "release-notes/v0.0/", "release-notes/versioning/"]})