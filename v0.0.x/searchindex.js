Search.setIndex({"titles": ["sdr", "sdr.ClosedLoopPLL", "sdr.ClosedLoopPLL.Bn", "sdr.ClosedLoopPLL.BnT", "sdr.ClosedLoopPLL.K0", "sdr.ClosedLoopPLL.K1", "sdr.ClosedLoopPLL.K2", "sdr.ClosedLoopPLL.Kp", "sdr.ClosedLoopPLL.__init__", "sdr.ClosedLoopPLL.frequency_lock_time", "sdr.ClosedLoopPLL.iir", "sdr.ClosedLoopPLL.lock_time", "sdr.ClosedLoopPLL.omega_3dB", "sdr.ClosedLoopPLL.omega_n", "sdr.ClosedLoopPLL.phase_error_variance", "sdr.ClosedLoopPLL.phase_lock_time", "sdr.ClosedLoopPLL.sample_rate", "sdr.ClosedLoopPLL.zeta", "sdr.DDS", "sdr.DDS.__init__", "sdr.DDS.nco", "sdr.DDS.process", "sdr.DDS.reset", "sdr.DDS.step", "sdr.FIR", "sdr.FIR.__init__", "sdr.FIR.delay", "sdr.FIR.filter", "sdr.FIR.frequency_response", "sdr.FIR.frequency_response_log", "sdr.FIR.impulse_response", "sdr.FIR.order", "sdr.FIR.reset", "sdr.FIR.step_response", "sdr.FIR.streaming", "sdr.FIR.taps", "sdr.FarrowResampler", "sdr.FarrowResampler.__init__", "sdr.FarrowResampler.order", "sdr.FarrowResampler.resample", "sdr.FarrowResampler.reset", "sdr.FarrowResampler.streaming", "sdr.FarrowResampler.taps", "sdr.IIR", "sdr.IIR.ZerosPoles", "sdr.IIR.__init__", "sdr.IIR.a_taps", "sdr.IIR.b_taps", "sdr.IIR.filter", "sdr.IIR.frequency_response", "sdr.IIR.frequency_response_log", "sdr.IIR.gain", "sdr.IIR.impulse_response", "sdr.IIR.order", "sdr.IIR.poles", "sdr.IIR.reset", "sdr.IIR.step_response", "sdr.IIR.streaming", "sdr.IIR.zeros", "sdr.LoopFilter", "sdr.LoopFilter.K1", "sdr.LoopFilter.K2", "sdr.LoopFilter.__init__", "sdr.LoopFilter.damping_factor", "sdr.LoopFilter.filter", "sdr.LoopFilter.iir", "sdr.LoopFilter.noise_bandwidth", "sdr.LoopFilter.reset", "sdr.NCO", "sdr.NCO.K0", "sdr.NCO.__init__", "sdr.NCO.increment", "sdr.NCO.offset", "sdr.NCO.process", "sdr.NCO.reset", "sdr.NCO.step", "sdr.crest_factor", "sdr.gaussian", "sdr.hexdump", "sdr.pack", "sdr.papr", "sdr.plot.filter", "sdr.plot.frequency_response", "sdr.plot.group_delay", "sdr.plot.impulse_response", "sdr.plot.periodogram", "sdr.plot.step_response", "sdr.plot.time_domain", "sdr.plot.use_style", "sdr.plot.zeros_poles", "sdr.raised_cosine", "sdr.root_raised_cosine", "sdr.unpack", "Farrow arbitrary resampler", "FIR filters", "IIR filters", "Peak-to-average power", "Phase-locked loops", "Pulse shapes", "sdr", "v0.0", "Versioning"], "terms": {"class": [0, 1, 18, 24, 36, 43, 59, 68, 94, 95], "fir": [0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 81, 82, 83, 84, 86, 89, 99], "implement": [0, 18, 24, 36, 43, 59, 65, 68, 93], "finit": [0, 24], "impuls": [0, 24, 30, 43, 52, 77, 81, 84, 87, 96, 98, 100], "respons": [0, 24, 28, 29, 30, 33, 43, 49, 50, 52, 56, 77, 81, 82, 83, 84, 86, 98, 100], "iir": [0, 1, 10, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 81, 82, 83, 84, 86, 89, 94, 97, 99, 100], "an": [0, 24, 30, 43, 44, 45, 52, 79, 84, 92, 99], "infinit": [0, 43, 100], "gaussian": [0, 77, 99], "time_bandwidth": [0, 77], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 36, 39, 43, 44, 49, 50, 51, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 76, 77, 80, 81, 82, 83, 85, 87, 90, 91], "span": [0, 77, 90, 91, 96, 98], "int": [0, 18, 23, 24, 26, 28, 29, 30, 31, 33, 36, 38, 43, 49, 50, 52, 53, 56, 68, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 90, 91, 92], "sp": [0, 77, 90, 91, 96, 98], "ndarrai": [0, 18, 21, 23, 24, 27, 28, 29, 30, 33, 35, 36, 39, 42, 43, 46, 47, 48, 49, 50, 52, 54, 56, 58, 59, 64, 68, 73, 75, 77, 79, 90, 91, 92], "return": [0, 1, 9, 11, 14, 15, 21, 23, 24, 27, 28, 29, 30, 33, 39, 43, 48, 49, 50, 52, 56, 64, 73, 75, 76, 77, 78, 79, 80, 90, 91, 92, 94, 95], "raised_cosin": [0, 90, 98, 99], "alpha": [0, 77, 88, 90, 91, 96, 98], "rais": [0, 87, 90, 91, 94], "cosin": [0, 87, 90, 91, 94], "rc": [0, 90], "root_raised_cosin": [0, 81, 82, 83, 84, 86, 87, 89, 91, 94, 96, 98, 99], "squar": [0, 87, 91, 94], "root": [0, 87, 91, 94], "srrc": [0, 87, 91, 96], "farrowresampl": [0, 36, 37, 38, 39, 40, 41, 42, 93, 99, 100], "cubic": [0, 36], "farrow": [0, 36, 37, 38, 39, 40, 41, 42, 100], "arbitrari": [0, 36, 37, 38, 39, 40, 41, 42, 99, 100], "closedlooppl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 97, 99, 100], "A": [0, 1, 9, 11, 12, 13, 14, 15, 17, 24, 59, 78, 90, 91, 97], "defin": [0, 1, 24, 43, 77, 95, 99], "perform": [0, 1, 94, 95, 99], "close": [0, 1, 8, 10, 100], "pll": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 100], "dd": [0, 18, 19, 20, 21, 22, 23, 68, 97, 99, 100], "direct": [0, 18, 19, 97, 100], "digit": [0, 1, 9, 11, 12, 13, 14, 15, 18, 19, 59, 90, 91, 97, 99, 100], "synthes": [0, 18, 19, 97, 100], "loopfilt": [0, 59, 60, 61, 62, 63, 64, 65, 66, 67, 97, 99, 100], "2nd": [0, 1, 59, 62, 97, 100], "order": [0, 1, 24, 31, 36, 38, 43, 53, 59, 62, 77, 90, 91, 97, 100], "proport": [0, 1, 5, 59, 60, 62, 100], "plu": [0, 1, 59, 62, 100], "integr": [0, 1, 6, 59, 61, 62, 95, 100], "ppi": [0, 59, 62], "nco": [0, 1, 4, 8, 18, 19, 20, 62, 68, 69, 70, 71, 72, 73, 74, 75, 97, 99, 100], "numer": [0, 1, 18, 20, 68, 70, 95, 97, 100], "control": [0, 1, 18, 20, 68, 70, 97, 100], "oscil": [0, 1, 18, 20, 68, 70, 97, 100], "crest_factor": [0, 76, 80, 99], "x": [0, 1, 18, 21, 24, 27, 36, 39, 43, 48, 59, 64, 68, 73, 76, 79, 80, 81, 82, 83, 85, 87, 92, 96, 97, 101], "arraylik": [0, 18, 21, 24, 25, 27, 36, 39, 40, 43, 44, 45, 48, 59, 64, 68, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92], "crest": [0, 76], "factor": [0, 1, 8, 17, 59, 62, 63, 76, 97], "signal": [0, 1, 9, 11, 14, 15, 18, 21, 24, 27, 36, 39, 43, 48, 59, 64, 68, 73, 75, 76, 77, 80, 85, 87, 94, 95, 96, 97, 98], "papr": [0, 80, 96, 99], "peak": [0, 76, 80], "averag": [0, 80, 85], "power": [0, 80, 85, 98], "ratio": [0, 14, 80], "hexdump": [0, 78, 99], "byte": [0, 78], "width": [0, 78], "16": [0, 78], "str": [0, 78, 85], "specifi": [0, 78, 94, 95], "pack": [0, 78, 79, 99], "bpe": [0, 79, 92], "binari": [0, 79, 92], "arrai": [0, 79, 87, 92, 95, 96], "multipl": [0, 79, 92], "bit": [0, 78, 79, 92], "per": [0, 21, 73, 77, 78, 79, 90, 91, 92, 96, 98], "element": [0, 78, 79, 92], "unpack": [0, 78, 92, 99], "use_styl": [0, 88], "appli": [0, 88], "": [0, 1, 9, 11, 12, 13, 15, 16, 24, 28, 29, 33, 43, 49, 50, 56, 81, 82, 83, 85, 86, 87, 88, 93, 99], "default": [0, 30, 33, 88], "matplotlib": [0, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99], "rcparam": [0, 88, 93, 97], "time_domain": [0, 87, 96, 98, 99], "sample_r": [0, 1, 8, 16, 28, 29, 49, 50, 81, 82, 83, 85, 87, 93, 97, 98], "1": [0, 1, 8, 11, 15, 17, 18, 19, 28, 29, 43, 44, 49, 50, 59, 62, 63, 68, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101], "0": [0, 8, 18, 19, 24, 28, 29, 43, 44, 49, 50, 62, 68, 70, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101], "n": [0, 1, 18, 21, 23, 24, 27, 28, 29, 30, 31, 33, 36, 39, 43, 48, 49, 50, 52, 53, 56, 59, 64, 68, 73, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98], "periodogram": [0, 85, 96, 99], "estim": [0, 85, 97], "spectral": [0, 85, 96, 98], "densiti": [0, 14, 85, 96, 98], "p_": [0, 80, 85], "xx": [0, 85], "us": [0, 18, 20, 25, 36, 37, 44, 45, 59, 65, 78, 79, 81, 84, 85, 86, 92, 94, 95, 98, 99, 101], "welch": [0, 85], "method": [0, 85, 94, 95], "b": [0, 43, 45, 77, 78, 81, 82, 83, 84, 86, 89, 98], "h": [0, 24, 25, 28, 29, 30, 43, 49, 50, 52, 59, 77, 81, 82, 84, 96, 97, 98], "e": [0, 1, 18, 81, 82, 94, 95, 97], "j": [0, 1, 18, 43, 81, 82, 94, 95, 97], "omega": [0, 19, 68, 70, 71, 81, 82, 83, 97], "step": [0, 18, 21, 23, 24, 33, 43, 56, 68, 73, 75, 81, 86], "zero": [0, 40, 43, 44, 58, 59, 79, 81, 82, 83, 84, 86, 87, 89, 94, 96, 97, 98], "pole": [0, 43, 44, 54, 81, 82, 83, 84, 86, 89, 94], "frequency_respons": [0, 24, 28, 29, 43, 49, 50, 82, 94, 95, 97, 98, 99], "group_delai": [0, 83, 94, 95, 99], "group": [0, 83], "delai": [0, 18, 24, 26, 36, 59, 68, 83, 97], "tau_g": [0, 83], "impulse_respons": [0, 24, 30, 43, 52, 77, 84, 90, 91, 94, 95, 98, 99], "step_respons": [0, 24, 33, 43, 56, 86, 94, 95, 97, 99], "zeros_pol": [0, 89, 95, 99], "kwarg": [0, 82, 83, 84, 85, 86, 87, 89], "sdr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101], "loop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 99, 100], "thi": [1, 21, 24, 43, 73, 81, 82, 83, 84, 85, 86, 89, 93, 95, 97, 98], "i": [1, 8, 17, 24, 30, 33, 34, 36, 41, 43, 52, 56, 57, 59, 62, 63, 66, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101], "meant": 1, "analysi": [1, 8, 97, 100], "onli": [1, 24, 32, 36, 40, 43, 55, 97], "block": [1, 18, 59, 68], "diagram": [1, 18, 59, 68], "bb": [1, 97], "ped": [1, 7, 8, 62, 97], "lf": [1, 97], "lo": [1, 97], "input": [1, 9, 11, 14, 15, 18, 21, 24, 25, 27, 30, 33, 36, 37, 39, 40, 43, 44, 45, 48, 52, 56, 59, 64, 68, 73, 79, 84, 86, 92, 94, 95, 97], "local": [1, 97], "baseband": [1, 96, 97], "phase": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 99], "error": [1, 7, 8, 14, 59, 62, 97], "detector": [1, 7, 8, 62, 97], "filter": [1, 5, 6, 8, 10, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 81, 82, 83, 84, 86, 87, 89, 90, 91, 96, 98, 99, 100], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101], "transfer": [1, 10, 24, 43, 44, 59, 77, 94, 95, 97], "function": [1, 10, 24, 43, 44, 59, 77, 85, 94, 95, 97, 98, 99], "h_": [1, 97], "z": [1, 18, 24, 43, 59, 68, 94, 95, 97], "k_1": [1, 5, 59, 60, 97], "k_2": [1, 6, 59, 61, 97], "frac": [1, 9, 11, 14, 15, 43, 59, 76, 77, 80, 97], "k_0": [1, 4, 8, 19, 62, 68, 69, 70, 97], "k_p": [1, 7, 8, 62, 97], "2": [1, 9, 11, 14, 28, 29, 49, 50, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "refer": [1, 9, 11, 12, 13, 14, 15, 36, 59, 76, 77, 80, 90, 91, 95, 98], "michael": [1, 9, 11, 12, 13, 14, 15, 59, 90, 91], "rice": [1, 9, 11, 12, 13, 14, 15, 59, 90, 91], "commun": [1, 9, 11, 12, 13, 14, 15, 59, 90, 91, 97, 99], "discret": [1, 9, 11, 12, 13, 14, 15, 59, 90, 91, 93, 97], "time": [1, 8, 9, 11, 12, 13, 14, 15, 24, 43, 59, 62, 76, 77, 80, 81, 85, 87, 90, 91, 93, 94, 95, 98], "approach": [1, 9, 11, 12, 13, 14, 15, 59, 90, 91, 97], "appendix": [1, 59, 90, 91], "c": [1, 9, 11, 12, 13, 14, 15, 59, 97], "lock": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 99], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 97], "see": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 90, 91, 99], "noise_bandwidth": [1, 8, 59, 62, 66], "damping_factor": [1, 8, 59, 62, 63], "creat": [1, 8, 18, 19, 24, 25, 36, 37, 43, 44, 45, 59, 62, 68, 70, 87, 93, 96, 97, 98], "object": [1, 8, 95, 97], "frequency_lock_tim": [1, 9], "freq_offset": [1, 9, 11], "frequenc": [1, 9, 11, 13, 24, 28, 29, 43, 49, 50, 59, 81, 82, 83, 85, 98], "lock_tim": [1, 11, 97], "phase_error_vari": [1, 14], "cn0": [1, 14], "varianc": [1, 14], "steadi": [1, 14], "state": [1, 14, 24, 32, 34, 36, 40, 41, 43, 55, 57], "phase_lock_tim": [1, 15], "bn": [1, 2], "nois": [1, 2, 3, 8, 14, 59, 62, 66, 97], "bandwidth": [1, 2, 3, 8, 12, 59, 62, 66, 77, 90, 91, 97, 98], "b_n": [1, 2, 3, 8, 9, 11, 14, 15, 59, 62, 66], "hz": [1, 2, 8, 9, 11, 14, 28, 29, 49, 50, 59, 62, 66, 77, 93], "bnt": [1, 3, 97], "normal": [1, 3, 8, 59, 62, 66, 77, 97, 98], "t": [1, 3, 8, 59, 62, 66, 77, 78, 93], "repres": [1, 10], "k0": [1, 4, 8, 18, 19, 62, 68, 69, 70], "gain": [1, 4, 5, 6, 7, 8, 18, 19, 43, 44, 51, 59, 60, 61, 62, 68, 69, 70, 77, 97], "k1": [1, 5, 59, 60, 97], "k2": [1, 6, 59, 61, 97], "kp": [1, 7, 8, 62], "omega_3db": [1, 12], "3": [1, 9, 11, 12, 15, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 92, 95, 97, 98, 99, 100], "db": [1, 12, 14, 77, 80, 96, 98], "omega_": [1, 12], "textrm": [1, 12], "radian": [1, 12, 13, 14, 18, 19, 97], "omega_n": [1, 13, 97], "natur": [1, 13], "sampl": [1, 8, 16, 18, 19, 21, 23, 24, 26, 28, 29, 30, 33, 36, 40, 49, 50, 52, 56, 59, 62, 66, 68, 70, 71, 73, 75, 77, 81, 82, 83, 84, 85, 86, 87, 90, 91, 93, 96, 97, 98], "rate": [1, 8, 16, 28, 29, 36, 39, 49, 50, 81, 82, 83, 85, 87], "f_": [1, 8, 16, 28, 29, 49, 50, 77, 81, 82, 83, 85, 87, 93, 94, 95, 97, 98], "zeta": [1, 8, 17, 59, 62, 63], "damp": [1, 8, 17, 59, 62, 63, 97], "properti": [2, 3, 4, 5, 6, 7, 10, 12, 13, 16, 17, 20, 26, 31, 34, 35, 38, 41, 42, 46, 47, 51, 53, 54, 57, 58, 60, 61, 63, 65, 66, 69, 71, 72], "paramet": [8, 9, 11, 14, 19, 21, 23, 25, 27, 28, 29, 30, 33, 37, 39, 40, 44, 45, 48, 49, 50, 52, 56, 62, 64, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92], "where": [8, 59, 62, 66, 77, 94, 95, 99], "period": [8, 59, 62, 66], "second": [8, 9, 11, 15, 59, 62, 66, 77], "critic": [8, 17, 59, 62, 63, 97], "underdamp": [8, 17, 59, 62, 63], "overdamp": [8, 17, 59, 62, 63], "ted": [8, 62], "t_": [9, 11, 15, 39, 77, 98], "fl": [9, 11], "4": [9, 11, 29, 50, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 100], "delta": [9, 11, 24, 30, 43, 52, 84, 94, 95], "f": [9, 11, 24, 28, 29, 43, 49, 50, 77, 93, 94, 95, 96, 97, 98], "offset": [9, 11, 18, 19, 68, 70, 72, 97], "take": [9, 11, 15], "onto": [9, 11, 15], "equat": [9, 11, 12, 13, 14, 15, 43], "39": 9, "pl": [11, 15], "38": 11, "34": 12, "33": 13, "sigma_": 14, "theta_": 14, "n_0": 14, "carrier": 14, "43": 14, "40": 15, "less": 17, "than": 17, "greater": 17, "note": [18, 24, 43, 59, 68, 76, 77, 80], "increment": [18, 19, 21, 68, 70, 71, 73, 97], "v": [18, 68], "y": [18, 21, 23, 24, 27, 39, 43, 48, 59, 64, 68, 73, 75, 87, 97], "output": [18, 21, 23, 24, 30, 33, 43, 44, 45, 52, 56, 59, 64, 68, 73, 75, 79, 84, 86, 92, 93, 94, 95, 97], "complex": [18, 21, 23, 93, 94, 95], "exponenti": [18, 21, 23, 93, 94, 95], "constant": [18, 19, 59, 68, 70, 71, 95, 97], "accumul": [18, 19, 68, 70, 71, 97], "absolut": [18, 19, 68, 70, 72], "unit": [18, 24, 33, 43, 56, 59, 68, 70, 71, 72, 86, 90, 91, 94, 95, 97], "adder": [18, 59, 68, 97], "process": [18, 21, 68, 73, 95, 97], "variabl": [18, 21, 68, 73, 78, 97], "reset": [18, 22, 24, 32, 36, 40, 43, 55, 59, 67, 68, 74], "forward": [18, 23, 68, 75], "theta": [19, 68, 70, 72], "vari": [21, 73], "number": [23, 28, 29, 30, 33, 49, 50, 52, 56, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 90, 91, 92], "wrapper": [24, 43], "scipi": [24, 27, 43, 85, 98, 99], "convolv": [24, 27, 87, 96], "It": [24, 43, 59], "support": [24, 43], "one": [24, 43, 77, 78, 81, 82, 83, 85, 94, 95, 96, 98], "stream": [24, 25, 32, 34, 36, 37, 40, 41, 43, 44, 45, 55, 57], "its": [24, 43, 44, 94, 95, 98], "feedforward": [24, 25, 35, 43, 45, 47, 81, 82, 83, 84, 86, 89, 94, 95], "coeffici": [24, 25, 43, 45, 81, 82, 83, 84, 86, 89, 94, 95], "h_i": [24, 25, 35, 94], "sum_": [24, 43, 76, 80], "sum": [24, 43, 98], "limits_": [24, 43], "bool": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "fals": [24, 25, 36, 37, 43, 44, 45, 95, 98], "tupl": [24, 28, 29, 43, 49, 50], "frequency_response_log": [24, 29, 43, 50], "logarithm": [24, 29, 43, 50, 81, 82, 83, 85, 94, 95], "axi": [24, 29, 43, 50, 81, 82, 83, 85, 87, 93], "none": [24, 30, 33, 36, 40, 59, 67, 79, 81, 84, 85, 86, 92, 93], "when": [24, 30, 33, 43, 52, 56, 81, 82, 83, 84, 86, 93, 94, 95], "mode": [24, 25, 27, 32, 34, 36, 37, 40, 41, 43, 44, 45, 55, 57, 96], "u": [24, 33, 43, 56, 86, 94, 95], "indic": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "whether": [24, 25, 34, 36, 37, 41, 43, 44, 45, 57], "tap": [24, 35, 36, 42, 43, 46, 47, 94, 95], "In": [25, 34, 37, 41, 44, 45, 57, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93], "previou": [25, 37, 40, 44, 45], "ar": [25, 29, 37, 44, 45, 50, 79, 81, 82, 83, 85, 88, 93, 95, 97, 98, 99, 101], "preserv": [25, 34, 37, 41, 44, 45, 57], "between": [25, 34, 37, 41, 44, 45, 57, 85, 97], "call": [25, 34, 37, 41, 44, 45, 57], "liter": [27, 82, 83], "full": 27, "valid": [27, 96], "same": [27, 94], "convolut": 27, "detail": 27, "1024": [28, 29, 49, 50, 81, 82, 83, 96, 98], "from": [28, 29, 43, 44, 49, 50, 94, 95, 97, 99], "plot": [28, 29, 30, 33, 49, 50, 52, 56, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99], "decad": [29, 50, 81, 82, 83, 94, 97], "space": [29, 50], "length": [30, 33, 77, 81, 84, 85, 86, 90, 91, 93, 96, 98], "resampl": [36, 37, 38, 39, 40, 41, 42, 99, 100], "http": [36, 76, 77, 80], "wirelesspi": 36, "com": [36, 77], "fraction": [36, 40, 77, 93], "structur": 36, "new": [36, 37], "given": [36, 39, 94, 95], "r": [36, 39, 77, 90, 91, 95, 97, 98], "index": [36, 40], "vector": [40, 85], "should": 40, "equal": 40, "three": [40, 93, 98], "If": [40, 79, 81, 84, 85, 86, 87, 92, 99], "lfilter": 43, "b_i": [43, 45, 47, 81, 82, 83, 84, 86, 89, 95], "feedback": [43, 45, 46, 81, 82, 83, 84, 86, 89, 95], "a_j": [43, 45, 46, 81, 82, 83, 84, 86, 89, 95], "These": [43, 88, 97], "differ": [43, 98], "a_0": 43, "left": [43, 76, 77, 80], "m": 43, "right": [43, 76, 77, 80], "classmethod": [43, 44], "zerospol": [43, 44, 81, 82, 83, 84, 86, 89, 95], "self": [43, 44], "100": [43, 52, 56, 81, 84, 86, 87, 93], "a_tap": [43, 46, 81, 82, 83, 84, 86, 89, 95, 97], "b_tap": [43, 47, 81, 82, 83, 84, 86, 89, 95, 97], "can": [59, 77, 79, 85, 94, 95, 101], "track": 59, "cannot": 59, "howev": [59, 93], "chirp": 59, "ramp": 59, "underli": [59, 65], "measur": [76, 80, 97, 99], "domain": [76, 80, 81, 85, 87], "text": [76, 80], "cf": 76, "v_": 76, "rm": 76, "max": [76, 80], "sqrt": [76, 77, 96, 97, 98], "en": [76, 80], "wikipedia": [76, 80], "org": [76, 80], "wiki": [76, 80], "puls": [77, 87, 90, 91, 99], "shape": [77, 87, 90, 91, 99], "product": [77, 98], "sym": [77, 98], "side": [77, 81, 82, 83, 85, 94, 95, 96, 98], "symbol": [77, 90, 91, 96, 98], "also": [77, 99], "thought": [77, 101], "smaller": [77, 98], "valu": [77, 95], "produc": [77, 98], "wider": 77, "must": [77, 90, 91], "even": [77, 90, 91], "amplitud": [77, 93, 97], "so": [77, 99], "nomin": 77, "passband": [77, 96], "ha": [77, 97, 98], "exp": [77, 81, 82, 83, 84, 86, 87, 89, 93, 95, 96, 97], "relat": 77, "ln": 77, "pi": [77, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97], "www": 77, "mathwork": 77, "help": 77, "ref": 77, "gaussdesign": 77, "html": 77, "onlinelibrari": 77, "wilei": 77, "doi": 77, "pdf": 77, "10": [77, 78, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "1002": 77, "9780470041956": 77, "app2": 77, "h_0p1": [77, 90, 91], "5": [77, 78, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100], "h_0p2": 77, "h_0p3": 77, "plt": [77, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "figur": [77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98], "figsiz": [77, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98], "8": [77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98], "label": [77, 87, 90, 91, 93, 96, 97, 98], "show": [77, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "data": [78, 79, 92, 99], "displai": [78, 81, 82, 83, 85], "each": [78, 85], "consid": 78, "convert": 78, "line": 78, "string": [78, 85], "contain": 78, "print": [78, 93, 94, 95, 97], "quick": 78, "brown": 78, "fox": 78, "jump": 78, "over": 78, "lazi": 78, "dog": 78, "00000000": 78, "54": 78, "68": 78, "65": 78, "20": [78, 96, 98], "71": 78, "75": [78, 97], "69": 78, "63": 78, "6b": 78, "62": 78, "72": 78, "6f": 78, "77": 78, "6e": 78, "00000010": 78, "66": 78, "78": 78, "6a": 78, "6d": 78, "70": [78, 98], "73": 78, "76": 78, "74": 78, "00000020": 78, "6c": 78, "61": 78, "7a": 78, "79": 78, "64": [78, 95], "67": 78, "he": 78, "6": [78, 81, 82, 83, 84, 86, 87, 89, 94, 95, 97], "7": [78, 87], "9": [78, 90, 91, 96, 98, 100], "01": [78, 95, 97], "02": [78, 95, 97], "03": [78, 95], "04": [78, 95], "00000004": 78, "05": [78, 93, 95, 97], "06": 78, "07": 78, "08": 78, "00000008": 78, "09": 78, "0a": 78, "dtype": [79, 87, 92, 97], "dtypelik": [79, 92], "assum": [79, 92], "have": [79, 92], "most": [79, 92], "signific": [79, 92], "first": [79, 92], "enough": 79, "fill": 79, "last": 79, "remain": 79, "type": [79, 82, 83, 85, 92], "smallest": 79, "unsign": 79, "integ": 79, "hold": 79, "out": [79, 88, 92], "uint8": [79, 92], "log_": 80, "avg": 80, "n_time": [81, 95], "n_freq": 81, "x_axi": [81, 82, 83, 85, 94, 95, 96, 97], "two": [81, 82, 83, 85, 93, 94, 95], "log": [81, 82, 83, 85, 94, 95, 97], "For": [81, 82, 83, 84, 86, 89, 94], "set": [81, 82, 83, 84, 85, 86, 88, 89, 95], "n_t": 81, "n_f": 81, "scale": [81, 82, 83, 85, 94, 95], "option": [81, 82, 83, 85], "spectrum": [81, 82, 83, 85], "h_srrc": [81, 82, 83, 84, 86, 87, 89], "np": [81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 98], "1j": [81, 82, 83, 84, 86, 87, 89, 93, 95, 96, 97], "conj": [81, 82, 83, 84, 86, 89, 95, 97], "30": [81, 84, 86, 95], "addit": [82, 83, 84, 85, 86, 87, 89], "keyword": [82, 83, 84, 85, 86, 87, 89, 94, 95], "argument": [82, 83, 84, 85, 86, 87, 89, 94, 95], "pass": [82, 83, 84, 85, 86, 87, 89, 94, 95], "pyplot": [82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98], "ylim": [83, 94, 97, 98], "48": 83, "52": 83, "window": 85, "hann": 85, "overlap": [85, 96], "fft": 85, "mean": [85, 98], "median": 85, "segment": 85, "256": [85, 96], "point": 85, "bpsk": [87, 96], "1000": 87, "symbol_map": [87, 96], "random": [87, 96], "randint": [87, 96], "10e3": 87, "titl": [87, 93, 96, 97, 98], "tight_layout": [87, 96, 97, 98], "qpsk": 87, "complex64": [87, 97], "style": 88, "mai": [88, 95], "revert": 88, "rcdefault": 88, "follow": [88, 97], "_rc_param": 88, "rc_param": 88, "ax": [88, 93, 97], "grid": [88, 93, 97, 98], "true": 88, "autolayout": 88, "max_open_warn": 88, "titleweight": 88, "bold": 88, "linestyl": [88, 93, 97, 98], "excess": [90, 91, 98], "le": [90, 91], "energi": [90, 91], "h_0p5": [90, 91], "h_0p9": [90, 91], "numpi": [92, 93, 94, 95, 96, 97, 98, 99], "import": [93, 94, 95, 96, 97, 98, 99], "config": [93, 94, 95, 96, 97, 98], "inlinebackend": [93, 94, 95, 96, 97, 98], "print_figure_kwarg": [93, 94, 95, 96, 97, 98], "facecolor": [93, 94, 95, 96, 97, 98], "w": [93, 94, 95, 96, 97, 98], "widget": [93, 94, 95, 96, 97, 98], "color": [93, 96, 97, 98], "prop_cycl": [93, 97], "by_kei": [93, 97], "continu": 93, "freq": [93, 97], "tx": 93, "arang": [93, 96, 97], "decai": [93, 95], "real": [93, 94, 95, 96, 97], "marker": [93, 94, 95], "o": 93, "fillstyl": 93, "imag": 93, "xlabel": [93, 97, 98], "ylabel": [93, 97, 98], "origin": 93, "legend": [93, 96, 97, 98], "which": [93, 97, 98], "both": [93, 97], "now": 93, "equival": 93, "accomplish": 93, "librari": [93, 99, 101], "def": 93, "resample_sign": 93, "new_sample_r": 93, "ty": 93, "size": [93, 96, 97, 98], "notic": [93, 98], "everi": 93, "200": 93, "four": 93, "400": 93, "other": [93, 101], "appear": 93, "50": [93, 96], "fourth": 93, "25": [93, 97, 98], "roughli": 93, "often": 93, "do": 93, "align": 93, "315": 93, "32": 93, "user": [94, 95], "below": [94, 95], "comput": [94, 95, 97, 98], "00095881": 94, "00175008": 94, "00423912": 94, "00588237": 94, "00615087": 94, "00474585": 94, "00170436": 94, "0025481": 94, "00721629": 94, "01123216": 94, "01342329": 94, "01273174": 94, "00845039": 94, "00043678": 94, "01073645": 94, "02372925": 94, "03650167": 94, "04650553": 94, "05098414": 94, "04734541": 94, "03355823": 94, "00851466": 94, "0276993": 94, "07367186": 94, "12670168": 94, "18306847": 94, "2381038": 94, "28726435": 94, "32607284": 94, "3509308": 94, "35948882": 94, "conveni": [94, 95], "evalu": [94, 95], "shift": [94, 95], "envelop": [94, 95], "through": [94, 95, 97], "easili": [94, 95], "here": [94, 95], "12": 94, "altern": 95, "conjug": 95, "0x000002214b040a88": 95, "47820725": 95, "00000000e": 95, "00": 95, "78207252e": 95, "58172329e": 95, "10862468e": 95, "86109590e": 95, "21565653e": 95, "01140214e": 95, "57286400e": 95, "67772160e": 95, "47338728e": 95, "10422993e": 95, "89312837e": 95, "12240078e": 95, "03953322e": 95, "69685122e": 95, "63882791e": 95, "81474977e": 95, "47193366e": 95, "85259041e": 95, "15647504e": 95, "23851924e": 95, "42176895e": 95, "84684395e": 95, "42721858e": 95, "72236648e": 95, "14721649e": 95, "10813095e": 95, "94024315e": 95, "78877688e": 95, "74077567e": 95, "87820725": 95, "53637958": 95, "94724205": 95, "13335164": 95, "1455082": 95, "04436799": 95, "88708159": 95, "71930943": 95, "5719707": 95, "46154771": 95, "39261642": 95, "36139242": 95, "35935288": 95, "3763214": 95, "40270968": 95, "43085717": 95, "45557651": 95, "47410241": 95, "48566716": 95, "49090568": 95, "49124786": 95, "48840102": 95, "4839738": 95, "47925143": 95, "47510421": 95, "47199608": 95, "47005584": 95, "46917696": 95, "46911955": 95, "denomin": 95, "73910363": 95, "30614675j": 95, "plane": 95, "linspac": 95, "endpoint": 95, "concaten": 95, "0x000002214dc574c8": 95, "lyon": 95, "understand": 95, "3rd": 95, "edit": 95, "section": [95, 97], "insid": 95, "circl": 95, "sinusoid": 95, "outsid": 95, "unstabl": 95, "increas": 95, "n_symbol": 96, "500": [96, 97], "x_bb_rect": 96, "papr_bb_rect": 96, "x_pb_rect": 96, "papr_pb_rect": 96, "x_bb_0p9": 96, "papr_bb_0p9": 96, "x_bb_0p5": 96, "papr_bb_0p5": 96, "x_bb_0p1": 96, "papr_bb_0p1": 96, "k": [96, 98], "2f": 96, "rf": [96, 97], "xlim": [96, 97, 98], "x_pb_0p9": 96, "papr_pb_0p9": 96, "x_pb_0p5": 96, "papr_pb_0p5": 96, "x_pb_0p1": 96, "papr_pb_0p1": 96, "configur": 97, "0x00000290f1ce3488": 97, "theta_0": 97, "phase_error": 97, "freq_estim": 97, "rang": 97, "subplot": 97, "suptitl": 97, "ones": 97, "angl": 97, "part": 97, "unwrap": 97, "system": [97, 99], "avail": 97, "001": 97, "005": 97, "b_nt": 97, "0005": 97, "00001": 97, "0125": 97, "015": 97, "0175": 97, "t_lock": 97, "rectangular": 98, "rect": 98, "achiev": 98, "rc_0p1": 98, "rc_0p5": 98, "rc_0p9": 98, "nyquist": 98, "adjac": 98, "specif": 98, "pm": 98, "roll": 98, "60": 98, "total": 98, "nearli": 98, "compar": 98, "null": 98, "while": 98, "small": 98, "lobe": 98, "much": 98, "higher": 98, "h_rect": 98, "freqz": 98, "worn": 98, "whole": 98, "h_rc_0p1": 98, "h_rc_0p5": 98, "h_rc_0p9": 98, "rel": 98, "main": 98, "p_rect": 98, "log10": 98, "cumsum": 98, "ab": 98, "p_rc_0p1": 98, "p_rc_0p5": 98, "p_rc_0p9": 98, "One": 98, "within": 98, "variou": 98, "srrc_0p1": 98, "srrc_0p5": 98, "srrc_0p9": 98, "therefor": 98, "similar": 98, "significantli": 98, "due": 98, "being": 98, "h_srrc_0p1": 98, "h_srrc_0p5": 98, "h_srrc_0p9": 98, "p_srrc_0p1": 98, "p_srrc_0p5": 98, "p_srrc_0p9": 98, "gauss_0p1": 98, "gauss_0p2": 98, "gauss_0p3": 98, "python": 99, "packag": 99, "softwar": 99, "radio": 99, "goal": 99, "provid": 99, "tool": 99, "design": 99, "build": 99, "analyz": 99, "reli": 99, "interoper": 99, "veri": 99, "possibl": 99, "numba": 99, "acceler": 99, "computation": 99, "intens": 99, "addition": 99, "aim": 99, "replic": 99, "relev": 99, "matlab": 99, "dsp": 99, "toolbox": 99, "we": 99, "progress": 99, "ad": [99, 100], "someth": 99, "you": 99, "d": 99, "like": 99, "includ": 99, "pleas": 99, "open": 99, "issu": 99, "github": 99, "manipul": 99, "util": 99, "releas": 100, "juli": 100, "2023": 100, "matt": 100, "hostett": 100, "mhostett": 100, "semant": 101, "major": 101, "minor": 101, "patch": 101, "introduc": 101, "api": 101, "chang": 101, "featur": 101, "add": 101, "backward": 101, "compat": 101, "make": 101, "bug": 101, "fix": 101, "befor": 101, "There": 101, "guarante": 101, "them": 101, "thei": 101}, "objects": {"": [[0, 0, 0, 1, "sdr", ""]], "sdr": [[1, 1, 1, "", "ClosedLoopPLL", "A class that defines the performance of a closed-loop PLL."], [18, 1, 1, "", "DDS", "Implements a direct digital synthesizer (DDS)."], [24, 1, 1, "", "FIR", "Implements a finite impulse response (FIR) filter."], [36, 1, 1, "", "FarrowResampler", "Implements a cubic Farrow arbitrary resampler."], [43, 1, 1, "", "IIR", "Implements an infinite impulse response (IIR) filter."], [59, 1, 1, "", "LoopFilter", "Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."], [68, 1, 1, "", "NCO", "Implements a numerically-controlled oscillator (NCO)."], [76, 5, 1, "", "crest_factor", "Measures the crest factor of a signal."], [77, 5, 1, "", "gaussian", "Returns a Gaussian pulse shape."], [78, 5, 1, "", "hexdump", "Returns a hexdump of the specified data."], [79, 5, 1, "", "pack", "Packs a binary array into an array with multiple bits per element."], [80, 5, 1, "", "papr", "Measures the peak-to-average power ratio (PAPR) of a signal."], [90, 5, 1, "", "raised_cosine", "Returns a raised cosine (RC) pulse shape."], [91, 5, 1, "", "root_raised_cosine", "Returns a square root raised cosine (SRRC) pulse shape."], [92, 5, 1, "", "unpack", "Unpacks an array with multiple bits per element into a binary array."]], "sdr.ClosedLoopPLL": [[2, 2, 1, "", "Bn", "The noise bandwidth $B_n$ of the PLL in Hz."], [3, 2, 1, "", "BnT", "The normalized noise bandwidth $B_n T$ of the PLL."], [4, 2, 1, "", "K0", "The NCO gain $K_0$."], [5, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [6, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [7, 2, 1, "", "Kp", "The phase error detector (PED) gain $K_p$."], [8, 3, 1, "", "__init__", "Creates a closed-loop PLL analysis object."], [9, 3, 1, "", "frequency_lock_time", "Returns the frequency lock time of the PLL."], [10, 2, 1, "", "iir", "The IIR filter that represents the closed-loop transfer function of the PLL."], [11, 3, 1, "", "lock_time", "Returns the lock time of the PLL."], [12, 2, 1, "", "omega_3dB", "The 3-dB bandwidth $omega_{3textrm{dB}}$ of the PLL in radians/s."], [13, 2, 1, "", "omega_n", "The natural frequency $omega_n$ of the PLL in radians/s."], [14, 3, 1, "", "phase_error_variance", "Returns the variance of the phase error of the PLL in steady state."], [15, 3, 1, "", "phase_lock_time", "Returns the phase lock time of the PLL."], [16, 2, 1, "", "sample_rate", "The sample rate $f_s$ of the PLL in samples/s."], [17, 2, 1, "", "zeta", "The damping factor $zeta$ of the PLL."]], "sdr.ClosedLoopPLL.__init__": [[8, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [8, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [8, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [8, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [8, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the PLL in Hz."]], "sdr.ClosedLoopPLL.frequency_lock_time": [[9, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.lock_time": [[11, 4, 2, "p-freq_offset", "freq_offset", "The frequency offset $Delta f$ of the input signal in Hz."]], "sdr.ClosedLoopPLL.phase_error_variance": [[14, 4, 2, "p-cn0", "cn0", "The carrier-to-noise density ratio $C/N_0$ of the input signal in dB-Hz."]], "sdr.DDS": [[19, 3, 1, "", "__init__", "Creates a direct digital synthesizer (DDS)."], [20, 2, 1, "", "nco", "The numerically-controlled oscillator (NCO) used by the DDS."], [21, 3, 1, "", "process", "Steps the DDS with the variable phase increment signal $x[n]$."], [22, 3, 1, "", "reset", "Resets the DDS."], [23, 3, 1, "", "step", "Steps the DDS forward by $N$ samples."]], "sdr.DDS.__init__": [[19, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [19, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in radians/sample."], [19, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in radians."]], "sdr.DDS.process": [[21, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the DDS."]], "sdr.DDS.step": [[23, 4, 2, "p-N", "N", "The number of samples $N$ to step the DDS forward."]], "sdr.FIR": [[25, 3, 1, "", "__init__", "Creates a FIR filter with feedforward coefficients $h_i$."], [26, 2, 1, "", "delay", "The delay of the FIR filter in samples."], [27, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the FIR filter."], [28, 3, 1, "", "frequency_response", "Returns the frequency response $H(f)$ of the FIR filter."], [29, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(f)$ of the FIR filter on a logarithmic frequency axis."], [30, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the FIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [31, 2, 1, "", "order", "The order of the FIR filter, $N$."], [32, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [33, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the FIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [34, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [35, 2, 1, "", "taps", "The feedforward taps $h_i$."]], "sdr.FIR.__init__": [[25, 4, 2, "p-h", "h", "The feedforward coefficients $h_i$."], [25, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."]], "sdr.FIR.filter": [[27, 4, 2, "p-mode", "mode", "The convolution mode. See scipy.signal.convolve() for details."], [27, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.FIR.frequency_response": [[28, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [28, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.FIR.frequency_response_log": [[29, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [29, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [29, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.FIR.impulse_response": [[30, 4, 2, "p-N", "N", "The number of samples to return. The default is the filter length."]], "sdr.FIR.step_response": [[33, 4, 2, "p-N", "N", "The number of samples to return. The default is the filter length."]], "sdr.FarrowResampler": [[37, 3, 1, "", "__init__", "Creates a new Farrow arbitrary resampler."], [38, 2, 1, "", "order", "The order of the filter."], [39, 3, 1, "", "resample", "Resamples the input signal $x[n]$ by the given arbitrary rate $r$."], [40, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state and fractional sample index."], [41, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [42, 2, 1, "", "taps", "The Farrow filter taps."]], "sdr.FarrowResampler.__init__": [[37, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to resample()."]], "sdr.FarrowResampler.resample": [[39, 4, 2, "p-rate", "rate", "The resampling rate $r$."], [39, 4, 2, "p-x", "x", "The input signal $x[n] = x(n T_s)$."]], "sdr.FarrowResampler.reset": [[40, 4, 2, "p-state", "state", "The filter state to reset to. The state vector should equal the previous three inputs. If None, the filter state will be reset to zero."]], "sdr.IIR": [[44, 3, 1, "", "ZerosPoles", "Creates an IIR filter from its zeros, poles, and gain."], [45, 3, 1, "", "__init__", "Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."], [46, 2, 1, "", "a_taps", "The feedback taps $a_j$."], [47, 2, 1, "", "b_taps", "The feedforward taps $b_i$."], [48, 3, 1, "", "filter", "Filters the input signal $x[n]$ with the IIR filter."], [49, 3, 1, "", "frequency_response", "Returns the frequency response $H(f)$ of the IIR filter."], [50, 3, 1, "", "frequency_response_log", "Returns the frequency response $H(f)$ of the IIR filter on a logarithmic frequency axis."], [51, 2, 1, "", "gain", "The gain of the IIR filter."], [52, 3, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the IIR filter. The impulse response $h[n]$ is the filter output when the input is an impulse $delta[n]$."], [53, 2, 1, "", "order", "The order of the IIR filter, $N$."], [54, 2, 1, "", "poles", "The poles of the IIR filter."], [55, 3, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [56, 3, 1, "", "step_response", "Returns the step response $s[n]$ of the IIR filter. The step response $s[n]$ is the filter output when the input is a unit step $u[n]$."], [57, 2, 1, "", "streaming", "Indicates whether the filter is in streaming mode."], [58, 2, 1, "", "zeros", "The zeros of the IIR filter."]], "sdr.IIR.ZerosPoles": [[44, 4, 2, "p-gain", "gain", "The gain of the transfer function."], [44, 4, 2, "p-poles", "poles", "The poles of the transfer function."], [44, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."], [44, 4, 2, "p-zeros", "zeros", "The zeros of the transfer function."]], "sdr.IIR.__init__": [[45, 4, 2, "p-a", "a", "The feedback coefficients $a_j$."], [45, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [45, 4, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs and outputs are preserved between calls to filter()."]], "sdr.IIR.filter": [[48, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.IIR.frequency_response": [[49, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [49, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.frequency_response_log": [[50, 4, 2, "p-N", "N", "The number of samples in the frequency response."], [50, 4, 2, "p-decades", "decades", "The number of frequency decades to plot."], [50, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."]], "sdr.IIR.impulse_response": [[52, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.IIR.step_response": [[56, 4, 2, "p-N", "N", "The number of samples to return."]], "sdr.LoopFilter": [[60, 2, 1, "", "K1", "The proportional gain $K_1$ of the loop filter."], [61, 2, 1, "", "K2", "The integral gain $K_2$ of the loop filter."], [62, 3, 1, "", "__init__", "Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."], [63, 2, 1, "", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [64, 3, 1, "", "filter", "Filters the input signal $x[n]$."], [65, 2, 1, "", "iir", "The underlying IIR filter used to implement the loop filter."], [66, 2, 1, "", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [67, 3, 1, "", "reset", "Resets the loop filter."]], "sdr.LoopFilter.__init__": [[62, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [62, 4, 2, "p-Kp", "Kp", "The gain $K_p$ of the phase error detector (PED) or time error detector (TED)."], [62, 4, 2, "p-damping_factor", "damping_factor", "The damping factor $zeta$ of the loop filter. $zeta = 1$ is critically damped, $zeta < 1$ is underdamped, and $zeta > 1$ is overdamped."], [62, 4, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]], "sdr.LoopFilter.filter": [[64, 4, 2, "p-x", "x", "The input signal $x[n]$."]], "sdr.NCO": [[69, 2, 1, "", "K0", "The NCO gain $K_0$."], [70, 3, 1, "", "__init__", "Creates a numerically-controlled oscillator (NCO)."], [71, 2, 1, "", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [72, 2, 1, "", "offset", "The absolute offset $theta$ of the NCO in units."], [73, 3, 1, "", "process", "Steps the NCO with the variable-increment signal $x[n]$."], [74, 3, 1, "", "reset", "Resets the NCO."], [75, 3, 1, "", "step", "Steps the NCO forward by $N$ samples."]], "sdr.NCO.__init__": [[70, 4, 2, "p-K0", "K0", "The NCO gain $K_0$."], [70, 4, 2, "p-increment", "increment", "The constant accumulation $omega$ of the NCO in units/sample."], [70, 4, 2, "p-offset", "offset", "The absolute offset $theta$ of the NCO in units."]], "sdr.NCO.process": [[73, 4, 2, "p-x", "x", "The variable-increment signal $x[n]$. This input signal varies the per-sample increment of the NCO."]], "sdr.NCO.step": [[75, 4, 2, "p-N", "N", "The number of samples $N$ to step the NCO forward."]], "sdr.crest_factor": [[76, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.gaussian": [[77, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [77, 4, 2, "p-sps", "sps", "The number of samples per symbol."], [77, 4, 2, "p-time_bandwidth", "time_bandwidth", "The time-bandwidth product $B T_{sym}$ of the filter, where $B$ is the one-sided 3-dB bandwidth in Hz and $T_{sym}$ is the symbol time in seconds. The time-bandwidth product can also be thought of as the fractional bandwidth $B / f_{sym}$. Smaller values produce wider pulses."]], "sdr.hexdump": [[78, 4, 2, "p-data", "data", "The data to display. Each element is considered one byte. Use sdr.pack() or sdr.unpack() to convert data with variable bits per element."], [78, 4, 2, "p-width", "width", "The number of bytes per line."]], "sdr.pack": [[79, 4, 2, "p-bpe", "bpe", "The number of bits per element in the output array."], [79, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, the smallest unsigned integer dtype that can hold bpe bits is used."], [79, 4, 2, "p-x", "x", "The input binary array with 1 bit per element."]], "sdr.papr": [[80, 4, 2, "p-x", "x", "The time-domain signal $x[n]$ to measure."]], "sdr.plot": [[81, 5, 1, "", "filter", "Plots the frequency response $H(e^{jomega})$, impulse response $h[n]$, step response $s[n]$, and zeros and poles of the filter."], [82, 5, 1, "", "frequency_response", "Plots the frequency response $H(e^{jomega})$ of the filter."], [83, 5, 1, "", "group_delay", "Plots the group delay $tau_g(omega)$ of the IIR filter."], [84, 5, 1, "", "impulse_response", "Plots the impulse response $h[n]$ of a filter."], [85, 5, 1, "", "periodogram", "Plots the estimated power spectral density $P_{xx}$ of a time-domain signal $x[n]$ using Welch's method."], [86, 5, 1, "", "step_response", "Plots the step response $s[n]$ of a filter."], [87, 5, 1, "", "time_domain", "Plots a time-domain signal $x[n]$."], [88, 5, 1, "", "use_style", "Applies sdr's default matplotlib rcParams."], [89, 5, 1, "", "zeros_poles", "Plots the zeros and poles of the filter."]], "sdr.plot.filter": [[81, 4, 2, "p-N_freq", "N_freq", "The number of samples $N_f$ in the frequency response."], [81, 4, 2, "p-N_time", "N_time", "The number of samples $N_t$ in the time domain. If None, the length of b is used for FIR filters and 100 for IIR filters."], [81, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [81, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [81, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [81, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [81, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.frequency_response": [[82, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [82, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [82, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [82, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [82, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [82, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.group_delay": [[83, 4, 2, "p-N", "N", "The number of samples $N$ in the frequency response."], [83, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [83, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."], [83, 4, 2, "p-decades", "decades", "The number of decades to plot when x_axis=\"log\"."], [83, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the filter in samples/s."], [83, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.impulse_response": [[84, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [84, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [84, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.periodogram": [[85, 4, 2, "p-average", "average", "The type of averaging to use. Options are to average the periodograms using the mean or median."], [85, 4, 2, "p-fft", "fft", "The number of points to use in the FFT. If None, the FFT length is set to length."], [85, 4, 2, "p-length", "length", "The length of each segment in samples. If None, the length is set to 256."], [85, 4, 2, "p-overlap", "overlap", "The number of samples to overlap between segments. If None, the overlap is set to length // 2."], [85, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s."], [85, 4, 2, "p-window", "window", "The windowing function to use. This can be a string or a vector of length length."], [85, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."], [85, 4, 2, "p-x_axis", "x_axis", "The x-axis scaling. Options are to display a one-sided spectrum, a two-sided spectrum, or one-sided spectrum with a logarithmic frequency axis."]], "sdr.plot.step_response": [[86, 4, 2, "p-N", "N", "The number of samples $N$ to plot. If None, the length of b is used for FIR filters and 100 for IIR filters."], [86, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [86, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.plot.time_domain": [[87, 4, 2, "p-sample_rate", "sample_rate", "The sample rate $f_s$ of the signal in samples/s. If the sample rate is 1, the x-axis will be label as \"Samples\"."], [87, 4, 2, "p-x", "x", "The time-domain signal $x[n]$."]], "sdr.plot.zeros_poles": [[89, 4, 2, "p-a", "a", "The feedback coefficients $a_j$. For FIR filters, this is set to 1."], [89, 4, 2, "p-b", "b", "The feedforward coefficients $b_i$."]], "sdr.raised_cosine": [[90, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [90, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [90, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.root_raised_cosine": [[91, 4, 2, "p-alpha", "alpha", "The excess bandwidth $0 le alpha le 1$ of the filter."], [91, 4, 2, "p-span", "span", "The length of the filter in symbols. The length of the filter is span * sps + 1 samples. The filter order span * sps must be even."], [91, 4, 2, "p-sps", "sps", "The number of samples per symbol."]], "sdr.unpack": [[92, 4, 2, "p-bpe", "bpe", "The number of bits per element in the input array."], [92, 4, 2, "p-dtype", "dtype", "The data type of the output array. If None, numpy.uint8 is used."], [92, 4, 2, "p-x", "x", "The input array with bpe bits per element."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:parameter", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"]}, "titleterms": {"sdr": [0, 99], "filter": [0, 94, 95, 97], "puls": [0, 96, 98], "shape": [0, 96, 98], "resampl": [0, 93], "phase": [0, 97], "time": [0, 97], "lock": [0, 97], "loop": [0, 97], "measur": 0, "data": 0, "manipul": 0, "plot": 0, "configur": 0, "domain": [0, 97], "frequenc": [0, 94, 95, 97], "analysi": 0, "note": 1, "constructor": [1, 18, 24, 36, 43, 59, 68], "method": [1, 18, 24, 36, 43, 59, 68], "properti": [1, 18, 24, 36, 43, 59, 68], "see": [18, 28, 29, 30, 33, 49, 50, 52, 56, 68, 81, 82, 83, 84, 86, 89], "also": [18, 28, 29, 30, 33, 49, 50, 52, 56, 68, 81, 82, 83, 84, 86, 89], "farrow": 93, "arbitrari": 93, "construct": 93, "an": [93, 94, 95], "input": 93, "signal": 93, "x": 93, "n": [93, 94, 95], "t_": 93, "rate": 93, "r": 93, "y": 93, "frac": 93, "upsampl": 93, "integ": 93, "downsampl": 93, "irrat": 93, "fir": 94, "creat": [94, 95], "examin": [94, 95], "impuls": [94, 95], "respons": [94, 95, 97], "h": [94, 95], "step": [94, 95, 97], "": [94, 95], "omega": [94, 95], "group": [94, 95], "delai": [94, 95], "tau_g": [94, 95], "fulli": [94, 95], "analyz": [94, 95, 97], "iir": 95, "zero": 95, "pole": 95, "digit": 95, "stabil": 95, "peak": 96, "averag": 96, "power": 96, "rectangular": 96, "squar": [96, 98], "root": [96, 98], "rais": [96, 98], "cosin": [96, 98], "design": 97, "proport": 97, "plu": 97, "integr": 97, "ppi": 97, "implement": 97, "pll": 97, "close": 97, "perform": 97, "compar": 97, "across": 97, "zeta": 97, "b_n": 97, "t": 97, "gaussian": 98, "featur": 99, "v0": 100, "0": 100, "1": 100, "chang": 100, "contributor": 100, "version": 101, "alpha": 101, "releas": 101, "beta": 101}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"sdr": [[0, "sdr"], [99, "sdr"]], "Filtering": [[0, "filtering"]], "Pulse shaping": [[0, "pulse-shaping"]], "Resampling": [[0, "resampling"]], "Phase/time-locked loops": [[0, "phase-time-locked-loops"]], "Measurement": [[0, "measurement"]], "Data manipulation": [[0, "data-manipulation"]], "Plotting": [[0, "plotting"]], "Configuration": [[0, "configuration"]], "Time-domain": [[0, "time-domain"]], "Frequency-domain": [[0, "frequency-domain"]], "Filter analysis": [[0, "filter-analysis"]], "Note": [[1, null]], "Constructors": [[1, "constructors"], [18, "constructors"], [24, "constructors"], [36, "constructors"], [43, "constructors"], [59, "constructors"], [68, "constructors"]], "Methods": [[1, "methods"], [18, "methods"], [24, "methods"], [36, "methods"], [43, "methods"], [59, "methods"], [68, "methods"]], "Properties": [[1, "properties"], [18, "properties"], [24, "properties"], [36, "properties"], [43, "properties"], [59, "properties"], [68, "properties"]], "See also": [[18, null], [28, null], [29, null], [30, null], [33, null], [49, null], [50, null], [52, null], [56, null], [68, null], [81, null], [82, null], [83, null], [84, null], [86, null], [89, null]], "Farrow arbitrary resampler": [[93, "farrow-arbitrary-resampler"]], "Construct an input signal, x[n] = x(n T_s)": [[93, "construct-an-input-signal-x-n-x-n-t-s"]], "Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})": [[93, "resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]], "Upsample the signal by an integer rate": [[93, "upsample-the-signal-by-an-integer-rate"]], "Downsample the signal by an integer rate": [[93, "downsample-the-signal-by-an-integer-rate"]], "Upsample by an irrational rate": [[93, "upsample-by-an-irrational-rate"]], "Downsample by an irrational rate": [[93, "downsample-by-an-irrational-rate"]], "FIR filters": [[94, "fir-filters"]], "Create an FIR filter": [[94, "create-an-fir-filter"]], "Examine the impulse response, h[n]": [[94, "examine-the-impulse-response-h-n"], [95, "examine-the-impulse-response-h-n"]], "Examine the step response, s[n]": [[94, "examine-the-step-response-s-n"], [95, "examine-the-step-response-s-n"]], "Examine the frequency response, H(\\omega)": [[94, "examine-the-frequency-response-h-omega"], [95, "examine-the-frequency-response-h-omega"]], "Examine the group delay, \\tau_g(\\omega)": [[94, "examine-the-group-delay-tau-g-omega"], [95, "examine-the-group-delay-tau-g-omega"]], "Fully analyze a FIR filter": [[94, "fully-analyze-a-fir-filter"]], "IIR filters": [[95, "iir-filters"]], "Create an IIR filter": [[95, "create-an-iir-filter"]], "Examine the zeros and poles": [[95, "examine-the-zeros-and-poles"]], "Fully analyze an IIR filter": [[95, "fully-analyze-an-iir-filter"]], "Poles and digital filter stability": [[95, "poles-and-digital-filter-stability"]], "Peak-to-average power": [[96, "peak-to-average-power"]], "Rectangular pulse shape": [[96, "rectangular-pulse-shape"]], "Square-root raised cosine pulse shape": [[96, "square-root-raised-cosine-pulse-shape"]], "Phase-locked loops": [[97, "phase-locked-loops"]], "Design a proportional-plus-integrator (PPI) loop filter": [[97, "design-a-proportional-plus-integrator-ppi-loop-filter"]], "Implement a PLL in the phase domain": [[97, "implement-a-pll-in-the-phase-domain"]], "Implement a PLL in the time domain": [[97, "implement-a-pll-in-the-time-domain"]], "Analyze PLL closed-loop performance": [[97, "analyze-pll-closed-loop-performance"]], "Compare step and frequency response across \\zeta": [[97, "compare-step-and-frequency-response-across-zeta"]], "Compare step and frequency response across B_n T": [[97, "compare-step-and-frequency-response-across-b-n-t"]], "Compare lock time across B_n T": [[97, "compare-lock-time-across-b-n-t"]], "Pulse shapes": [[98, "pulse-shapes"]], "Raised cosine": [[98, "raised-cosine"]], "Square-root raised cosine": [[98, "square-root-raised-cosine"]], "Gaussian": [[98, "gaussian"]], "Features": [[99, "features"]], "v0.0": [[100, "v0-0"]], "v0.0.1": [[100, "v0-0-1"]], "Changes": [[100, "changes"]], "Contributors": [[100, "contributors"]], "Versioning": [[101, "versioning"]], "Alpha releases": [[101, "alpha-releases"]], "Beta releases": [[101, "beta-releases"]]}, "indexentries": {"module": [[0, "module-sdr"]], "sdr": [[0, "module-sdr"]]}, "docurls": ["api/", "api/sdr.ClosedLoopPLL/", "api/sdr.ClosedLoopPLL.Bn/", "api/sdr.ClosedLoopPLL.BnT/", "api/sdr.ClosedLoopPLL.K0/", "api/sdr.ClosedLoopPLL.K1/", "api/sdr.ClosedLoopPLL.K2/", "api/sdr.ClosedLoopPLL.Kp/", "api/sdr.ClosedLoopPLL.__init__/", "api/sdr.ClosedLoopPLL.frequency_lock_time/", "api/sdr.ClosedLoopPLL.iir/", "api/sdr.ClosedLoopPLL.lock_time/", "api/sdr.ClosedLoopPLL.omega_3dB/", "api/sdr.ClosedLoopPLL.omega_n/", "api/sdr.ClosedLoopPLL.phase_error_variance/", "api/sdr.ClosedLoopPLL.phase_lock_time/", "api/sdr.ClosedLoopPLL.sample_rate/", "api/sdr.ClosedLoopPLL.zeta/", "api/sdr.DDS/", "api/sdr.DDS.__init__/", "api/sdr.DDS.nco/", "api/sdr.DDS.process/", "api/sdr.DDS.reset/", "api/sdr.DDS.step/", "api/sdr.FIR/", "api/sdr.FIR.__init__/", "api/sdr.FIR.delay/", "api/sdr.FIR.filter/", "api/sdr.FIR.frequency_response/", "api/sdr.FIR.frequency_response_log/", "api/sdr.FIR.impulse_response/", "api/sdr.FIR.order/", "api/sdr.FIR.reset/", "api/sdr.FIR.step_response/", "api/sdr.FIR.streaming/", "api/sdr.FIR.taps/", "api/sdr.FarrowResampler/", "api/sdr.FarrowResampler.__init__/", "api/sdr.FarrowResampler.order/", "api/sdr.FarrowResampler.resample/", "api/sdr.FarrowResampler.reset/", "api/sdr.FarrowResampler.streaming/", "api/sdr.FarrowResampler.taps/", "api/sdr.IIR/", "api/sdr.IIR.ZerosPoles/", "api/sdr.IIR.__init__/", "api/sdr.IIR.a_taps/", "api/sdr.IIR.b_taps/", "api/sdr.IIR.filter/", "api/sdr.IIR.frequency_response/", "api/sdr.IIR.frequency_response_log/", "api/sdr.IIR.gain/", "api/sdr.IIR.impulse_response/", "api/sdr.IIR.order/", "api/sdr.IIR.poles/", "api/sdr.IIR.reset/", "api/sdr.IIR.step_response/", "api/sdr.IIR.streaming/", "api/sdr.IIR.zeros/", "api/sdr.LoopFilter/", "api/sdr.LoopFilter.K1/", "api/sdr.LoopFilter.K2/", "api/sdr.LoopFilter.__init__/", "api/sdr.LoopFilter.damping_factor/", "api/sdr.LoopFilter.filter/", "api/sdr.LoopFilter.iir/", "api/sdr.LoopFilter.noise_bandwidth/", "api/sdr.LoopFilter.reset/", "api/sdr.NCO/", "api/sdr.NCO.K0/", "api/sdr.NCO.__init__/", "api/sdr.NCO.increment/", "api/sdr.NCO.offset/", "api/sdr.NCO.process/", "api/sdr.NCO.reset/", "api/sdr.NCO.step/", "api/sdr.crest_factor/", "api/sdr.gaussian/", "api/sdr.hexdump/", "api/sdr.pack/", "api/sdr.papr/", "api/sdr.plot.filter/", "api/sdr.plot.frequency_response/", "api/sdr.plot.group_delay/", "api/sdr.plot.impulse_response/", "api/sdr.plot.periodogram/", "api/sdr.plot.step_response/", "api/sdr.plot.time_domain/", "api/sdr.plot.use_style/", "api/sdr.plot.zeros_poles/", "api/sdr.raised_cosine/", "api/sdr.root_raised_cosine/", "api/sdr.unpack/", "examples/farrow-resampler/", "examples/fir-filters/", "examples/iir-filters/", "examples/peak-to-average-power/", "examples/phase-locked-loop/", "examples/pulse-shapes/", "", "release-notes/v0.0/", "release-notes/versioning/"]})