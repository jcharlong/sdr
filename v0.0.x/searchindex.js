Search.setIndex({"titles": ["sdr", "sdr.DDS", "sdr.DDS.__init__", "sdr.DDS.nco", "sdr.DDS.process", "sdr.DDS.reset", "sdr.DDS.step", "sdr.FarrowResampler", "sdr.FarrowResampler.__init__", "sdr.FarrowResampler.order", "sdr.FarrowResampler.resample", "sdr.FarrowResampler.reset", "sdr.FarrowResampler.streaming", "sdr.FarrowResampler.taps", "sdr.IIR", "sdr.IIR.ZerosPoles", "sdr.IIR.__init__", "sdr.IIR.a_taps", "sdr.IIR.b_taps", "sdr.IIR.filter", "sdr.IIR.frequency_response", "sdr.IIR.frequency_response_log", "sdr.IIR.gain", "sdr.IIR.impulse_response", "sdr.IIR.order", "sdr.IIR.plot_all", "sdr.IIR.plot_frequency_response", "sdr.IIR.plot_frequency_response_log", "sdr.IIR.plot_group_delay", "sdr.IIR.plot_impulse_response", "sdr.IIR.plot_step_response", "sdr.IIR.plot_zeros_poles", "sdr.IIR.poles", "sdr.IIR.reset", "sdr.IIR.step_response", "sdr.IIR.streaming", "sdr.IIR.zeros", "sdr.LoopFilter", "sdr.LoopFilter.K1", "sdr.LoopFilter.K2", "sdr.LoopFilter.__init__", "sdr.LoopFilter.damping_factor", "sdr.LoopFilter.filter", "sdr.LoopFilter.iir", "sdr.LoopFilter.noise_bandwidth", "sdr.LoopFilter.reset", "sdr.NCO", "sdr.NCO.K0", "sdr.NCO.__init__", "sdr.NCO.increment", "sdr.NCO.offset", "sdr.NCO.process", "sdr.NCO.reset", "sdr.NCO.step", "Farrow arbitrary resampler", "IIR filters", "Phase-locked loops", "sdr", "Versioning"], "terms": {"class": [0, 1, 7, 14, 37, 46, 55], "iir": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 56, 57], "implement": [0, 1, 14, 37, 43, 46, 54], "an": [0, 14, 15, 16, 23, 37, 56], "infinit": [0, 14, 57], "impuls": [0, 14, 23, 25, 29, 57], "respons": [0, 14, 20, 21, 23, 25, 26, 27, 28, 29, 30, 34, 57], "farrowresampl": [0, 7, 8, 9, 10, 11, 12, 13, 54, 57], "A": [0, 7, 37, 40, 41, 56], "cubic": [0, 7], "farrow": [0, 7, 8, 9, 10, 12, 13, 57], "arbitrari": [0, 7, 8, 10, 57], "dd": [0, 1, 2, 3, 4, 5, 6, 46, 56, 57], "direct": [0, 1, 2, 56, 57], "digit": [0, 1, 2, 37, 56, 57], "synthes": [0, 1, 2, 56, 57], "loopfilt": [0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57], "2nd": [0, 37, 40], "order": [0, 7, 9, 14, 24, 37, 40], "proport": [0, 37, 38, 40], "plu": [0, 37, 40], "integr": [0, 37, 39, 40, 55], "ppi": [0, 37, 40], "nco": [0, 1, 2, 3, 40, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57], "numer": [0, 1, 3, 46, 48, 55, 56, 57], "control": [0, 1, 3, 46, 48, 56, 57], "oscil": [0, 1, 3, 46, 48, 56, 57], "sdr": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58], "note": [1, 14, 37, 46], "block": [1, 37, 46], "diagram": [1, 37, 46], "increment": [1, 2, 4, 46, 48, 49, 51, 56], "offset": [1, 2, 46, 48, 50], "v": [1, 46], "x": [1, 4, 7, 10, 14, 19, 37, 42, 46, 51, 56, 58], "n": [1, 4, 6, 10, 14, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 34, 37, 42, 46, 51, 53, 56], "k0": [1, 2, 40, 46, 47, 48, 56], "e": [1, 20, 21, 55], "j": [1, 14, 55], "y": [1, 4, 6, 10, 14, 19, 37, 42, 46, 51, 53, 56], "z": [1, 14, 37, 46, 55], "1": [1, 2, 9, 12, 13, 14, 15, 20, 21, 24, 25, 26, 27, 28, 37, 40, 41, 46, 48, 54, 55, 56, 58], "input": [1, 4, 7, 8, 10, 11, 14, 15, 16, 19, 23, 34, 37, 42, 46, 51, 55, 56], "signal": [1, 4, 7, 10, 14, 19, 37, 42, 46, 51, 53, 55, 56, 57], "radian": [1, 2, 56], "output": [1, 4, 6, 23, 34, 37, 46, 51, 53, 54, 55, 56], "gain": [1, 2, 14, 15, 22, 37, 38, 39, 40, 46, 47, 48, 56], "constant": [1, 2, 37, 46, 48, 49, 55, 56], "accumul": [1, 2, 46, 48, 49, 56], "sampl": [1, 2, 4, 6, 7, 11, 20, 21, 23, 25, 26, 27, 28, 29, 30, 34, 37, 40, 44, 46, 48, 49, 51, 53, 54, 56], "absolut": [1, 2, 46, 48, 50], "unit": [1, 34, 37, 46, 48, 49, 50, 55], "delai": [1, 7, 14, 28, 37, 46], "adder": [1, 37, 46], "float": [1, 2, 7, 10, 14, 15, 20, 21, 22, 25, 26, 27, 28, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50], "0": [1, 2, 13, 14, 15, 20, 21, 25, 26, 27, 28, 40, 46, 48, 54, 55, 56, 58], "creat": [1, 2, 7, 8, 14, 15, 16, 37, 40, 46, 48, 54, 56], "process": [1, 4, 46, 51, 55, 56], "ndarrai": [1, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 34, 36, 37, 42, 46, 51, 53], "step": [1, 4, 6, 14, 25, 30, 34, 46, 51, 53], "variabl": [1, 4, 46, 51, 56], "phase": [1, 4, 26, 27, 37, 40, 57], "reset": [1, 5, 7, 11, 14, 33, 37, 45, 46, 52], "int": [1, 6, 7, 9, 14, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 34, 46, 53], "forward": [1, 6, 46, 53], "The": [1, 2, 3, 4, 6, 10, 11, 14, 15, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 57, 58], "us": [1, 3, 7, 8, 15, 16, 37, 43, 55, 58], "paramet": [2, 4, 6, 8, 10, 11, 15, 16, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 34, 40, 42, 48, 51, 53], "properti": [3, 9, 12, 13, 17, 18, 22, 24, 32, 35, 36, 38, 39, 41, 43, 44, 47, 49, 50], "vari": [4, 51], "per": [4, 51], "return": [4, 6, 7, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 32, 34, 35, 36, 42, 51, 53, 55, 56], "complex": [4, 6, 54, 55], "exponenti": [4, 6, 54, 55], "number": [6, 20, 21, 23, 25, 26, 27, 28, 29, 30, 34, 53], "resampl": [7, 8, 10, 12, 57], "refer": [7, 37, 55, 56], "http": 7, "wirelesspi": 7, "com": 7, "fraction": [7, 11, 54], "filter": [7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 57], "structur": 7, "exampl": [7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 56], "see": [7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "stream": [7, 8, 11, 12, 14, 15, 16, 33, 35], "bool": [7, 8, 12, 14, 15, 16, 26, 27, 35], "fals": [7, 8, 12, 14, 15, 16, 55, 56], "new": [7, 8], "rate": [7, 10, 20, 21, 25, 26, 27, 28], "given": [7, 10, 55], "state": [7, 11, 12, 14, 33, 35], "np": [7, 11, 54, 55, 56], "none": [7, 11, 37, 45, 54], "mode": [7, 8, 11, 12, 14, 15, 16, 33, 35], "onli": [7, 11, 14, 33, 56], "index": [7, 11], "whether": [7, 8, 12, 14, 15, 16, 26, 27, 35], "i": [7, 12, 14, 23, 34, 35, 37, 40, 41, 44, 54, 55, 56, 57, 58], "tap": [7, 13, 14, 17, 18, 55], "indic": [8, 15, 16, 26, 27], "In": [8, 9, 12, 13, 15, 16, 35, 54], "previou": [8, 11, 15, 16], "ar": [8, 15, 16, 21, 54, 55, 58], "preserv": [8, 12, 15, 16, 35], "between": [8, 12, 15, 16, 35, 56], "call": [8, 12, 15, 16, 35], "2": [9, 12, 13, 14, 20, 21, 54, 55, 56], "out": [9, 12, 13], "3": [9, 55, 56, 57], "t_": 10, "r": [10, 55, 56], "frac": [10, 14, 37], "vector": 11, "should": 11, "equal": 11, "three": [11, 54], "If": 11, "zero": [11, 14, 15, 25, 31, 36, 37, 56], "arrai": [13, 55], "16666667": 13, "5": [13, 54, 55, 56], "33333334": 13, "dtype": [13, 56], "float32": 13, "thi": [14, 54, 55, 56], "wrapper": 14, "scipi": [14, 55, 56], "lfilter": 14, "function": [14, 15, 37, 55, 56], "It": [14, 37], "support": 14, "one": [14, 55], "time": [14, 37, 40, 54, 55], "defin": [14, 55, 57], "its": [14, 15, 55], "feedforward": [14, 16, 18, 55], "coeffici": [14, 16, 55, 56], "b_i": [14, 16, 18, 55], "feedback": [14, 16, 17, 55], "a_j": [14, 16, 17, 55], "These": 14, "differ": 14, "equat": [14, 56], "a_0": 14, "left": 14, "sum_": 14, "m": 14, "right": 14, "transfer": [14, 15, 37, 55, 56], "h": [14, 20, 21, 23, 26, 27, 29, 37, 56], "b": [14, 16], "classmethod": [14, 15], "zerospol": [14, 15, 55], "pole": [14, 15, 25, 31, 32], "self": [14, 15], "from": [14, 15, 20, 21, 55, 56], "frequency_respons": [14, 20], "tupl": [14, 20, 21], "frequenc": [14, 20, 21, 25, 26, 27, 28, 37], "pi": [14, 20, 21, 54, 55, 56], "f": [14, 20, 21, 54, 55, 56], "frequency_response_log": [14, 21, 56], "logarithm": [14, 21, 27, 55], "axi": [14, 21, 27, 54], "impulse_respons": [14, 23, 55], "100": [14, 23, 25, 29, 30, 34, 54], "step_respons": [14, 34, 55, 56], "": [14, 20, 21, 25, 26, 27, 28, 30, 34, 54], "plot_al": [14, 25, 55, 56], "sample_r": [14, 20, 21, 25, 26, 27, 28, 54, 56], "n_time": [14, 25, 55, 56], "singl": [14, 25], "figur": [14, 25, 54, 55, 56], "plot_frequency_respons": [14, 26, 55], "omega": [14, 26, 27, 28, 56], "plot_frequency_response_log": [14, 27, 55, 56], "plot_group_delai": [14, 28, 55], "1024": [14, 20, 21, 25, 26, 27, 28], "group": [14, 28], "tau_g": [14, 28], "plot_impulse_respons": [14, 29, 55], "plot_step_respons": [14, 30, 55], "plot_zeros_pol": [14, 31, 55], "a_tap": [14, 17, 55], "b_tap": [14, 18, 55], "f_": [20, 21, 54, 55, 56], "hz": [20, 21, 37, 40, 44, 54], "j2": [20, 21], "decad": [21, 27, 56], "4": [21, 27, 54, 55], "plot": [21, 25, 26, 27, 28, 29, 30, 31, 54, 55, 56], "space": 21, "when": [23, 34, 54, 55], "delta": [23, 55], "n_freq": 25, "true": [26, 27], "u": [34, 55], "loop": [37, 38, 39, 40, 41, 43, 44, 45, 57], "k1": [37, 38, 56], "k2": [37, 39, 56], "k_1": 37, "k_2": 37, "second": [37, 40, 44], "can": [37, 55, 58], "track": 37, "error": [37, 40, 56], "cannot": 37, "howev": [37, 54], "chirp": 37, "ramp": 37, "rice": 37, "commun": [37, 56], "discret": [37, 54, 56], "approach": [37, 56], "appendix": 37, "c": [37, 55, 56], "lock": [37, 57], "noise_bandwidth": [37, 40, 44], "damping_factor": [37, 40, 41], "damp": [37, 40, 41, 56], "factor": [37, 40, 41, 56], "critic": [37, 40, 41, 56], "less": [37, 40, 41], "than": [37, 40, 41], "underdamp": [37, 40, 41], "greater": [37, 40, 41], "overdamp": [37, 40, 41], "underli": [37, 43], "normal": [37, 40, 44, 56], "nois": [37, 40, 44, 56], "bandwidth": [37, 40, 44, 56], "b_n": [37, 40, 44], "t": [37, 40, 44, 54], "where": [37, 40, 44, 55], "period": [37, 40, 44], "kp": [40, 56], "detector": [40, 56], "ped": [40, 56], "ted": 40, "import": [54, 55, 56], "numpi": [54, 55, 56], "matplotlib": [54, 55, 56], "pyplot": [54, 55, 56], "plt": [54, 55, 56], "config": [54, 55, 56], "inlinebackend": [54, 55, 56], "print_figure_kwarg": [54, 55, 56], "facecolor": [54, 55, 56], "w": [54, 55, 56], "widget": [54, 55, 56], "color": [54, 55, 56], "rcparam": [54, 55, 56], "ax": [54, 55, 56], "prop_cycl": [54, 55, 56], "by_kei": [54, 55, 56], "continu": 54, "freq": 54, "05": [54, 55, 56], "tx": 54, "arang": [54, 56], "exp": [54, 55, 56], "1j": [54, 55, 56], "decai": [54, 55], "figsiz": [54, 55, 56], "10": [54, 55, 56], "real": [54, 55, 56], "marker": 54, "o": 54, "fillstyl": 54, "label": [54, 56], "imag": 54, "xlabel": [54, 56], "ylabel": [54, 56], "amplitud": [54, 56], "titl": [54, 56], "origin": 54, "legend": [54, 56], "grid": [54, 56], "which": [54, 56], "both": [54, 56], "linestyl": [54, 56], "show": [54, 55, 56], "now": 54, "equival": 54, "accomplish": 54, "librari": [54, 57, 58], "def": [54, 56], "resample_sign": 54, "new_sample_r": 54, "ty": 54, "size": [54, 56], "print": [54, 55, 56], "length": 54, "notic": 54, "two": [54, 55], "everi": 54, "200": 54, "four": 54, "400": 54, "other": [54, 58], "appear": 54, "50": 54, "fourth": 54, "25": [54, 56], "roughli": 54, "often": 54, "do": 54, "align": 54, "315": 54, "32": 54, "user": [55, 56], "specifi": 55, "altern": 55, "mai": [55, 56], "below": 55, "conjug": 55, "6": [55, 56], "8": [55, 56], "conj": [55, 56], "_iir_filt": 55, "object": [55, 56], "0x0000028cbda77348": 55, "47820725": 55, "64": 55, "comput": [55, 56], "method": 55, "30": 55, "00000000e": 55, "00": 55, "78207252e": 55, "01": [55, 56], "58172329e": 55, "10862468e": 55, "86109590e": 55, "21565653e": 55, "02": 55, "01140214e": 55, "57286400e": 55, "67772160e": 55, "47338728e": 55, "10422993e": 55, "89312837e": 55, "12240078e": 55, "03953322e": 55, "03": 55, "69685122e": 55, "63882791e": 55, "81474977e": 55, "47193366e": 55, "85259041e": 55, "15647504e": 55, "23851924e": 55, "42176895e": 55, "04": 55, "84684395e": 55, "42721858e": 55, "72236648e": 55, "14721649e": 55, "10813095e": 55, "94024315e": 55, "78877688e": 55, "74077567e": 55, "conveni": 55, "87820725": 55, "53637958": 55, "94724205": 55, "13335164": 55, "1455082": 55, "04436799": 55, "88708159": 55, "71930943": 55, "5719707": 55, "46154771": 55, "39261642": 55, "36139242": 55, "35935288": 55, "3763214": 55, "40270968": 55, "43085717": 55, "45557651": 55, "47410241": 55, "48566716": 55, "49090568": 55, "49124786": 55, "48840102": 55, "4839738": 55, "47925143": 55, "47510421": 55, "47199608": 55, "47005584": 55, "46917696": 55, "46911955": 55, "valu": [55, 56], "set": 55, "denomin": 55, "73910363": 55, "30614675j": 55, "plane": 55, "evalu": 55, "also": 55, "scale": 55, "shift": 55, "envelop": 55, "pass": 55, "through": [55, 56], "easili": 55, "perform": 55, "here": 55, "linspac": 55, "endpoint": 55, "concaten": 55, "0x0000028cc010fd48": 55, "lyon": 55, "understand": 55, "3rd": 55, "edit": 55, "section": [55, 56], "insid": 55, "circl": 55, "sinusoid": 55, "matth": [55, 56], "appdata": [55, 56], "local": [55, 56], "packag": [55, 56, 57], "pythonsoftwarefound": [55, 56], "python": [55, 56, 57], "7_qbz5n2kfra8p0": [55, 56], "localcach": [55, 56], "python37": [55, 56], "site": [55, 56], "filter_design": [55, 56], "py": [55, 56], "476": [55, 56], "runtimewarn": [55, 56], "divid": [55, 56], "encount": [55, 56], "true_divid": [55, 56], "npp_polyv": [55, 56], "zm1": [55, 56], "tensor": [55, 56], "invalid": [55, 56], "outsid": 55, "unstabl": 55, "increas": 55, "lf": 56, "_loop_filt": 56, "0x0000023d608a5408": 56, "20": 56, "75": 56, "theta_0": 56, "phase_error": 56, "measur": 56, "freq_estim": 56, "estim": 56, "rang": 56, "subplot": 56, "suptitl": 56, "tight_layout": 56, "ones": 56, "complex64": 56, "angl": 56, "part": 56, "unwrap": 56, "closed_loop_pl": 56, "bnt": 56, "51": 56, "b0": 56, "b1": 56, "b2": 56, "a0": 56, "a1": 56, "a2": 56, "repres": 56, "omega_n": 56, "sqrt": 56, "_": 56, "500": 56, "rf": 56, "1632": 56, "badcoeffici": 56, "badli": 56, "condit": 56, "result": 56, "meaningless": 56, "semilogx": 56, "log10": 56, "ab": 56, "xlim": 56, "ylim": 56, "power": 56, "db": 56, "001": 56, "005": 56, "b_nt": 56, "softwar": 57, "radio": 57, "applic": 57, "gener": 57, "semant": 58, "major": 58, "minor": 58, "patch": 58, "introduc": 58, "api": 58, "chang": 58, "featur": 58, "add": 58, "backward": 58, "compat": 58, "make": 58, "bug": 58, "fix": 58, "befor": 58, "There": 58, "guarante": 58, "them": 58, "thei": 58, "thought": 58}, "objects": {"": [[0, 0, 0, 1, "sdr", ""]], "sdr": [[1, 1, 1, "", "DDS", "Implements a direct digital synthesizer (DDS)."], [7, 1, 1, "", "FarrowResampler", "A cubic Farrow arbitrary resampler."], [14, 1, 1, "", "IIR", "Implements an infinite impulse response (IIR) filter."], [37, 1, 1, "", "LoopFilter", "Implements a 2nd order, proportional-plus-integrator (PPI) loop filter."], [46, 1, 1, "", "NCO", "Implements a numerically-controlled oscillator (NCO)."]], "sdr.DDS": [[2, 2, 1, "", "__init__", "Creates a direct digital synthesizer (DDS)."], [3, 4, 1, "", "nco", "The numerically-controlled oscillator (NCO) used by the DDS."], [4, 2, 1, "", "process", "Steps the DDS with the variable phase increment signal $x[n]$."], [5, 2, 1, "", "reset", "Resets the DDS."], [6, 2, 1, "", "step", "Steps the DDS forward by $N$ samples."]], "sdr.DDS.__init__": [[2, 3, 2, "p-K0", "K0", "The NCO gain."], [2, 3, 2, "p-increment", "increment", "The constant accumulation of the NCO in radians/sample."], [2, 3, 2, "p-offset", "offset", "The absolute offset of the NCO in radians."]], "sdr.DDS.process": [[4, 3, 2, "p-x", "x", "The input signal, $x[n]$. The input signal varies the per-sample phase increment of the DDS."]], "sdr.DDS.step": [[6, 3, 2, "p-N", "N", "The number of samples to step the DDS forward."]], "sdr.FarrowResampler": [[8, 2, 1, "", "__init__", "Creates a new Farrow arbitrary resampler."], [9, 4, 1, "", "order", "Returns the order of the filter."], [10, 2, 1, "", "resample", "Resamples the input signal by the given arbitrary rate."], [11, 2, 1, "", "reset", "Streaming-mode only: Resets the filter state and fractional sample index."], [12, 4, 1, "", "streaming", "Returns whether the filter is in streaming mode."], [13, 4, 1, "", "taps", "Returns the Farrow filter taps."]], "sdr.FarrowResampler.__init__": [[8, 3, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to resample()."]], "sdr.FarrowResampler.resample": [[10, 3, 2, "p-rate", "rate", "The resampling rate, $r$."], [10, 3, 2, "p-x", "x", "The input signal, $x[n] = x(n T_s)$."]], "sdr.FarrowResampler.reset": [[11, 3, 2, "p-state", "state", "The filter state to reset to. The state vector should equal the previous three inputs. If None, the filter state will be reset to zero."]], "sdr.IIR": [[15, 2, 1, "", "ZerosPoles", "Creates an IIR filter from its zeros, poles, and gain."], [16, 2, 1, "", "__init__", "Creates an IIR filter with feedforward coefficients $b_i$ and feedback coefficients $a_j$."], [17, 4, 1, "", "a_taps", "Returns the feedback filter taps, $a_j$."], [18, 4, 1, "", "b_taps", "Returns the feedforward filter taps, $b_i$."], [19, 2, 1, "", "filter", "Filters the input signal $x[n]$ with the IIR filter."], [20, 2, 1, "", "frequency_response", "Returns the frequency response $H(2 pi f)$ of the IIR filter."], [21, 2, 1, "", "frequency_response_log", "Returns the frequency response $H(2 pi f)$ of the IIR filter on a logarithmic frequency axis"], [22, 4, 1, "", "gain", "Returns the gain of the IIR filter."], [23, 2, 1, "", "impulse_response", "Returns the impulse response $h[n]$ of the IIR filter."], [24, 4, 1, "", "order", "Returns the order of the IIR filter, $N - 1$."], [25, 2, 1, "", "plot_all", "Plots the zeros and poles, impulse response, step response, and frequency response of the IIR filter in a single figure."], [26, 2, 1, "", "plot_frequency_response", "Plots the frequency response $H(omega)$ of the IIR filter."], [27, 2, 1, "", "plot_frequency_response_log", "Plots the frequency response $H(omega)$ of the IIR filter on a logarithmic frequency axis."], [28, 2, 1, "", "plot_group_delay", "Plots the group delay $tau_g(omega)$ of the IIR filter."], [29, 2, 1, "", "plot_impulse_response", "Plots the impulse response $h[n]$ of the IIR filter."], [30, 2, 1, "", "plot_step_response", "Plots the step response $s[n]$ of the IIR filter."], [31, 2, 1, "", "plot_zeros_poles", "Plots the zeros and poles of the IIR filter."], [32, 4, 1, "", "poles", "Returns the poles of the IIR filter."], [33, 2, 1, "", "reset", "Streaming-mode only: Resets the filter state."], [34, 2, 1, "", "step_response", "Returns the step response $s[n]$ of the IIR filter."], [35, 4, 1, "", "streaming", "Returns whether the filter is in streaming mode."], [36, 4, 1, "", "zeros", "Returns the zeros of the IIR filter."]], "sdr.IIR.ZerosPoles": [[15, 3, 2, "p-gain", "gain", "The gain of the transfer function."], [15, 3, 2, "p-poles", "poles", "The poles of the transfer function."], [15, 3, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."], [15, 3, 2, "p-zeros", "zeros", "The zeros of the transfer function."]], "sdr.IIR.__init__": [[16, 3, 2, "p-a", "a", "Feedback coefficients, $a_j$."], [16, 3, 2, "p-b", "b", "Feedforward coefficients, $b_i$."], [16, 3, 2, "p-streaming", "streaming", "Indicates whether to use streaming mode. In streaming mode, previous inputs are preserved between calls to filter()."]], "sdr.IIR.filter": [[19, 3, 2, "p-x", "x", "The input signal, $x[n]$."]], "sdr.IIR.frequency_response": [[20, 3, 2, "p-N", "N", "The number of samples in the frequency response."], [20, 3, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.frequency_response_log": [[21, 3, 2, "p-N", "N", "The number of samples in the frequency response."], [21, 3, 2, "p-decades", "decades", "The number of frequency decades to plot."], [21, 3, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.impulse_response": [[23, 3, 2, "p-N", "N", "The number of samples to return."]], "sdr.IIR.plot_all": [[25, 3, 2, "p-N_freq", "N_freq", "The number of samples in the frequency response."], [25, 3, 2, "p-N_time", "N_time", "The number of samples in the impulse and step responses."], [25, 3, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.plot_frequency_response": [[26, 3, 2, "p-N", "N", "The number of samples in the frequency response."], [26, 3, 2, "p-phase", "phase", "Indicates whether to plot the phase of $H(omega)$."], [26, 3, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.plot_frequency_response_log": [[27, 3, 2, "p-N", "N", "The number of samples in the frequency response."], [27, 3, 2, "p-decades", "decades", "The number of frequency decades to plot."], [27, 3, 2, "p-phase", "phase", "Indicates whether to plot the phase of $H(omega)$."], [27, 3, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.plot_group_delay": [[28, 3, 2, "p-N", "N", "The number of samples in the frequency response."], [28, 3, 2, "p-sample_rate", "sample_rate", "The sample rate of the filter in samples/s."]], "sdr.IIR.plot_impulse_response": [[29, 3, 2, "p-N", "N", "The number of samples in the impulse response."]], "sdr.IIR.plot_step_response": [[30, 3, 2, "p-N", "N", "The number of samples in the step response."]], "sdr.IIR.step_response": [[34, 3, 2, "p-N", "N", "The number of samples to return."]], "sdr.LoopFilter": [[38, 4, 1, "", "K1", "The proportional gain of the loop filter."], [39, 4, 1, "", "K2", "The integral gain of the loop filter."], [40, 2, 1, "", "__init__", "Creates a 2nd order, proportional-plus-integrator (PPI) loop filter."], [41, 4, 1, "", "damping_factor", "The damping factor of the loop filter. A damping factor of 1 is critically damped, less than 1 is underdamped, and greater than 1 is overdamped."], [42, 2, 1, "", "filter", "Filters the input signal $x[n]$."], [43, 4, 1, "", "iir", "The underlying IIR filter used to implement the loop filter."], [44, 4, 1, "", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."], [45, 2, 1, "", "reset", "Resets the loop filter."]], "sdr.LoopFilter.__init__": [[40, 3, 2, "p-K0", "K0", "The NCO gain."], [40, 3, 2, "p-Kp", "Kp", "The gain of the phase error detector (PED) or time error detector (TED)."], [40, 3, 2, "p-damping_factor", "damping_factor", "The damping factor of the loop filter. A damping factor of 1 is critically damped, less than 1 is underdamped, and greater than 1 is overdamped."], [40, 3, 2, "p-noise_bandwidth", "noise_bandwidth", "The normalized noise bandwidth $B_n T$ of the loop filter, where $B_n$ is the noise bandwidth in Hz and $T$ is the sampling period in seconds."]], "sdr.LoopFilter.filter": [[42, 3, 2, "p-x", "x", "The input signal, $x[n]$."]], "sdr.NCO": [[47, 4, 1, "", "K0", "The NCO gain."], [48, 2, 1, "", "__init__", "Creates a numerically-controlled oscillator (NCO)."], [49, 4, 1, "", "increment", "The constant accumulation of the NCO in units/sample."], [50, 4, 1, "", "offset", "The absolute offset of the NCO in units."], [51, 2, 1, "", "process", "Steps the NCO with the variable-increment signal $x[n]$."], [52, 2, 1, "", "reset", "Resets the NCO."], [53, 2, 1, "", "step", "Steps the NCO forward by $N$ samples."]], "sdr.NCO.__init__": [[48, 3, 2, "p-K0", "K0", "The NCO gain."], [48, 3, 2, "p-increment", "increment", "The constant accumulation of the NCO in units/sample."], [48, 3, 2, "p-offset", "offset", "The absolute offset of the NCO in units."]], "sdr.NCO.process": [[51, 3, 2, "p-x", "x", "The input signal, $x[n]$. The input signal varies the per-sample increment of the NCO."]], "sdr.NCO.step": [[53, 3, 2, "p-N", "N", "The number of samples to step the NCO forward."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:parameter", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "property", "Python property"]}, "titleterms": {"sdr": [0, 57], "filter": [0, 55, 56], "resampl": [0, 54], "phase": [0, 56], "time": [0, 56], "lock": [0, 56], "loop": [0, 56], "see": [1, 46], "also": [1, 46], "constructor": [1, 7, 14, 37, 46], "method": [1, 7, 14, 37, 46], "properti": [1, 7, 14, 37, 46], "plot": 14, "farrow": 54, "arbitrari": 54, "construct": 54, "an": [54, 55], "input": 54, "signal": 54, "x": 54, "n": [54, 55], "t_": 54, "rate": 54, "r": 54, "y": 54, "frac": 54, "upsampl": 54, "integ": 54, "downsampl": 54, "irrat": 54, "iir": 55, "creat": 55, "examin": 55, "impuls": 55, "respons": [55, 56], "h": 55, "step": [55, 56], "": 55, "zero": 55, "pole": 55, "frequenc": [55, 56], "omega": 55, "group": 55, "delai": 55, "tau_g": 55, "fulli": 55, "analyz": [55, 56], "digit": 55, "stabil": 55, "design": 56, "proport": 56, "plu": 56, "integr": 56, "ppi": 56, "implement": 56, "pll": 56, "domain": 56, "close": 56, "perform": 56, "compar": 56, "across": 56, "zeta": 56, "b_n": 56, "t": 56, "featur": 57, "version": 58, "alpha": 58, "releas": 58, "beta": 58}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"sdr": [[0, "sdr"], [57, "sdr"]], "Filtering": [[0, "filtering"]], "Resampling": [[0, "resampling"]], "Phase/time-locked loops": [[0, "phase-time-locked-loops"]], "See also": [[1, null], [46, null]], "Constructors": [[1, "constructors"], [7, "constructors"], [14, "constructors"], [37, "constructors"], [46, "constructors"]], "Methods": [[1, "methods"], [7, "methods"], [14, "methods"], [37, "methods"], [46, "methods"]], "Properties": [[1, "properties"], [7, "properties"], [14, "properties"], [37, "properties"], [46, "properties"]], "Plotting": [[14, "plotting"]], "Farrow arbitrary resampler": [[54, "farrow-arbitrary-resampler"]], "Construct an input signal, x[n] = x(n T_s)": [[54, "construct-an-input-signal-x-n-x-n-t-s"]], "Resample the input signal with rate r, y[n] = x(n \\frac{T_s}{r})": [[54, "resample-the-input-signal-with-rate-r-y-n-x-n-frac-t-s-r"]], "Upsample the signal by an integer rate": [[54, "upsample-the-signal-by-an-integer-rate"]], "Downsample the signal by an integer rate": [[54, "downsample-the-signal-by-an-integer-rate"]], "Upsample by an irrational rate": [[54, "upsample-by-an-irrational-rate"]], "Downsample by an irrational rate": [[54, "downsample-by-an-irrational-rate"]], "IIR filters": [[55, "iir-filters"]], "Create an IIR filter": [[55, "create-an-iir-filter"]], "Examine the impulse response, h[n]": [[55, "examine-the-impulse-response-h-n"]], "Examine the step response, s[n]": [[55, "examine-the-step-response-s-n"]], "Examine the zeros and poles": [[55, "examine-the-zeros-and-poles"]], "Examine the frequency response, H(\\omega)": [[55, "examine-the-frequency-response-h-omega"]], "Examine the group delay, \\tau_g(\\omega)": [[55, "examine-the-group-delay-tau-g-omega"]], "Fully analyze an IIR filter": [[55, "fully-analyze-an-iir-filter"]], "Poles and digital filter stability": [[55, "poles-and-digital-filter-stability"]], "Phase-locked loops": [[56, "phase-locked-loops"]], "Design a proportional-plus-integrator (PPI) loop filter": [[56, "design-a-proportional-plus-integrator-ppi-loop-filter"]], "Implement a PLL in the phase domain": [[56, "implement-a-pll-in-the-phase-domain"]], "Implement a PLL in the time domain": [[56, "implement-a-pll-in-the-time-domain"]], "Analyze PLL closed-loop performance": [[56, "analyze-pll-closed-loop-performance"]], "Compare step and frequency response across \\zeta": [[56, "compare-step-and-frequency-response-across-zeta"]], "Compare step and frequency response across B_n T": [[56, "compare-step-and-frequency-response-across-b-n-t"]], "Features": [[57, "features"]], "Versioning": [[58, "versioning"]], "Alpha releases": [[58, "alpha-releases"]], "Beta releases": [[58, "beta-releases"]]}, "indexentries": {"module": [[0, "module-sdr"]], "sdr": [[0, "module-sdr"]]}, "docurls": ["api/", "api/sdr.DDS/", "api/sdr.DDS.__init__/", "api/sdr.DDS.nco/", "api/sdr.DDS.process/", "api/sdr.DDS.reset/", "api/sdr.DDS.step/", "api/sdr.FarrowResampler/", "api/sdr.FarrowResampler.__init__/", "api/sdr.FarrowResampler.order/", "api/sdr.FarrowResampler.resample/", "api/sdr.FarrowResampler.reset/", "api/sdr.FarrowResampler.streaming/", "api/sdr.FarrowResampler.taps/", "api/sdr.IIR/", "api/sdr.IIR.ZerosPoles/", "api/sdr.IIR.__init__/", "api/sdr.IIR.a_taps/", "api/sdr.IIR.b_taps/", "api/sdr.IIR.filter/", "api/sdr.IIR.frequency_response/", "api/sdr.IIR.frequency_response_log/", "api/sdr.IIR.gain/", "api/sdr.IIR.impulse_response/", "api/sdr.IIR.order/", "api/sdr.IIR.plot_all/", "api/sdr.IIR.plot_frequency_response/", "api/sdr.IIR.plot_frequency_response_log/", "api/sdr.IIR.plot_group_delay/", "api/sdr.IIR.plot_impulse_response/", "api/sdr.IIR.plot_step_response/", "api/sdr.IIR.plot_zeros_poles/", "api/sdr.IIR.poles/", "api/sdr.IIR.reset/", "api/sdr.IIR.step_response/", "api/sdr.IIR.streaming/", "api/sdr.IIR.zeros/", "api/sdr.LoopFilter/", "api/sdr.LoopFilter.K1/", "api/sdr.LoopFilter.K2/", "api/sdr.LoopFilter.__init__/", "api/sdr.LoopFilter.damping_factor/", "api/sdr.LoopFilter.filter/", "api/sdr.LoopFilter.iir/", "api/sdr.LoopFilter.noise_bandwidth/", "api/sdr.LoopFilter.reset/", "api/sdr.NCO/", "api/sdr.NCO.K0/", "api/sdr.NCO.__init__/", "api/sdr.NCO.increment/", "api/sdr.NCO.offset/", "api/sdr.NCO.process/", "api/sdr.NCO.reset/", "api/sdr.NCO.step/", "examples/farrow-resampler/", "examples/iir-filter/", "examples/phase-locked-loop/", "", "release-notes/versioning/"]})